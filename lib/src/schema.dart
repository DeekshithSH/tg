part of '../tg.dart';

bool _bit(int value, int bit) => (value & (1 << bit)) != 0;

/// Telegram object class.
abstract class TlObject {
  /// Constructor.
  const TlObject._();
}

/// Base Constructor class.
abstract class TlConstructor extends TlObject {
  /// Constructor.
  const TlConstructor._() : super._();
}

/// Base Method class.
abstract class TlMethod<ReturnType> extends TlObject {
  /// Constructor.
  const TlMethod._() : super._();
}

/// Predicate Error.
abstract class ErrorBase extends TlConstructor {
  /// Predicate Error constructor.
  const ErrorBase._() : super._();
}

/// Error.
///
/// ID: `c4b9f9bb`.
class Error extends ErrorBase {
  /// Error constructor.
  const Error({
    required this.code,
    required this.text,
  }) : super._();

  /// Deserialize.
  factory Error.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Code.
  final int code;

  /// Text.
  final String text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Peer.
abstract class InputPeerBase extends TlConstructor {
  /// Predicate Input Peer constructor.
  const InputPeerBase._() : super._();
}

/// Input Peer Empty.
///
/// ID: `7f3b18ea`.
class InputPeerEmpty extends InputPeerBase {
  /// Input Peer Empty constructor.
  const InputPeerEmpty() : super._();

  /// Deserialize.
  factory InputPeerEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Peer Self.
///
/// ID: `7da07ec9`.
class InputPeerSelf extends InputPeerBase {
  /// Input Peer Self constructor.
  const InputPeerSelf() : super._();

  /// Deserialize.
  factory InputPeerSelf.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Peer Chat.
///
/// ID: `35a95cb9`.
class InputPeerChat extends InputPeerBase {
  /// Input Peer Chat constructor.
  const InputPeerChat({
    required this.chatId,
  }) : super._();

  /// Deserialize.
  factory InputPeerChat.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chat Id.
  final int chatId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Peer User.
///
/// ID: `dde8a54c`.
class InputPeerUser extends InputPeerBase {
  /// Input Peer User constructor.
  const InputPeerUser({
    required this.userId,
    required this.accessHash,
  }) : super._();

  /// Deserialize.
  factory InputPeerUser.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final int userId;

  /// Access Hash.
  final int accessHash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Peer Channel.
///
/// ID: `27bcbbfc`.
class InputPeerChannel extends InputPeerBase {
  /// Input Peer Channel constructor.
  const InputPeerChannel({
    required this.channelId,
    required this.accessHash,
  }) : super._();

  /// Deserialize.
  factory InputPeerChannel.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel Id.
  final int channelId;

  /// Access Hash.
  final int accessHash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Peer User From Message.
///
/// ID: `a87b0a1c`.
class InputPeerUserFromMessage extends InputPeerBase {
  /// Input Peer User From Message constructor.
  const InputPeerUserFromMessage({
    required this.peer,
    required this.msgId,
    required this.userId,
  }) : super._();

  /// Deserialize.
  factory InputPeerUserFromMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Msg Id.
  final int msgId;

  /// User Id.
  final int userId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Peer Channel From Message.
///
/// ID: `bd2a0840`.
class InputPeerChannelFromMessage extends InputPeerBase {
  /// Input Peer Channel From Message constructor.
  const InputPeerChannelFromMessage({
    required this.peer,
    required this.msgId,
    required this.channelId,
  }) : super._();

  /// Deserialize.
  factory InputPeerChannelFromMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Msg Id.
  final int msgId;

  /// Channel Id.
  final int channelId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input User.
abstract class InputUserBase extends TlConstructor {
  /// Predicate Input User constructor.
  const InputUserBase._() : super._();
}

/// Input User Empty.
///
/// ID: `b98886cf`.
class InputUserEmpty extends InputUserBase {
  /// Input User Empty constructor.
  const InputUserEmpty() : super._();

  /// Deserialize.
  factory InputUserEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input User Self.
///
/// ID: `f7c1b13f`.
class InputUserSelf extends InputUserBase {
  /// Input User Self constructor.
  const InputUserSelf() : super._();

  /// Deserialize.
  factory InputUserSelf.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input User.
///
/// ID: `f21158c6`.
class InputUser extends InputUserBase {
  /// Input User constructor.
  const InputUser({
    required this.userId,
    required this.accessHash,
  }) : super._();

  /// Deserialize.
  factory InputUser.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final int userId;

  /// Access Hash.
  final int accessHash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input User From Message.
///
/// ID: `1da448e2`.
class InputUserFromMessage extends InputUserBase {
  /// Input User From Message constructor.
  const InputUserFromMessage({
    required this.peer,
    required this.msgId,
    required this.userId,
  }) : super._();

  /// Deserialize.
  factory InputUserFromMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Msg Id.
  final int msgId;

  /// User Id.
  final int userId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Contact.
abstract class InputContactBase extends TlConstructor {
  /// Predicate Input Contact constructor.
  const InputContactBase._() : super._();
}

/// Input Phone Contact.
///
/// ID: `f392b7f4`.
class InputPhoneContact extends InputContactBase {
  /// Input Phone Contact constructor.
  const InputPhoneContact({
    required this.clientId,
    required this.phone,
    required this.firstName,
    required this.lastName,
  }) : super._();

  /// Deserialize.
  factory InputPhoneContact.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Client Id.
  final int clientId;

  /// Phone.
  final String phone;

  /// First Name.
  final String firstName;

  /// Last Name.
  final String lastName;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input File.
abstract class InputFileBase extends TlConstructor {
  /// Predicate Input File constructor.
  const InputFileBase._() : super._();
}

/// Input File.
///
/// ID: `f52ff27f`.
class InputFile extends InputFileBase {
  /// Input File constructor.
  const InputFile({
    required this.id,
    required this.parts,
    required this.name,
    required this.md5Checksum,
  }) : super._();

  /// Deserialize.
  factory InputFile.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Parts.
  final int parts;

  /// Name.
  final String name;

  /// Md5 Checksum.
  final String md5Checksum;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input File Big.
///
/// ID: `fa4f0bb5`.
class InputFileBig extends InputFileBase {
  /// Input File Big constructor.
  const InputFileBig({
    required this.id,
    required this.parts,
    required this.name,
  }) : super._();

  /// Deserialize.
  factory InputFileBig.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Parts.
  final int parts;

  /// Name.
  final String name;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Media.
abstract class InputMediaBase extends TlConstructor {
  /// Predicate Input Media constructor.
  const InputMediaBase._() : super._();
}

/// Input Media Empty.
///
/// ID: `9664f57f`.
class InputMediaEmpty extends InputMediaBase {
  /// Input Media Empty constructor.
  const InputMediaEmpty() : super._();

  /// Deserialize.
  factory InputMediaEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Media Uploaded Photo.
///
/// ID: `1e287d04`.
class InputMediaUploadedPhoto extends InputMediaBase {
  /// Input Media Uploaded Photo constructor.
  const InputMediaUploadedPhoto({
    required this.flags,
    required this.file,
    required this.stickers,
    required this.ttlSeconds,
  }) : super._();

  /// Deserialize.
  factory InputMediaUploadedPhoto.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// spoiler: bit
  bool get spoiler => _bit(flags, 2);

  /// File.
  final InputFileBase file;

  /// Stickers.
  final List<InputDocumentBase>? stickers;

  /// If [stickers] exists.
  bool get hasStickersField => _bit(flags, 0);

  /// Ttl Seconds.
  final int? ttlSeconds;

  /// If [ttlSeconds] exists.
  bool get hasTtlSecondsField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Media Photo.
///
/// ID: `b3ba0635`.
class InputMediaPhoto extends InputMediaBase {
  /// Input Media Photo constructor.
  const InputMediaPhoto({
    required this.flags,
    required this.id,
    required this.ttlSeconds,
  }) : super._();

  /// Deserialize.
  factory InputMediaPhoto.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// spoiler: bit
  bool get spoiler => _bit(flags, 1);

  /// Id.
  final InputPhotoBase id;

  /// Ttl Seconds.
  final int? ttlSeconds;

  /// If [ttlSeconds] exists.
  bool get hasTtlSecondsField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Media Geo Point.
///
/// ID: `f9c44144`.
class InputMediaGeoPoint extends InputMediaBase {
  /// Input Media Geo Point constructor.
  const InputMediaGeoPoint({
    required this.geoPoint,
  }) : super._();

  /// Deserialize.
  factory InputMediaGeoPoint.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Geo Point.
  final InputGeoPointBase geoPoint;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Media Contact.
///
/// ID: `f8ab7dfb`.
class InputMediaContact extends InputMediaBase {
  /// Input Media Contact constructor.
  const InputMediaContact({
    required this.phoneNumber,
    required this.firstName,
    required this.lastName,
    required this.vcard,
  }) : super._();

  /// Deserialize.
  factory InputMediaContact.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Phone Number.
  final String phoneNumber;

  /// First Name.
  final String firstName;

  /// Last Name.
  final String lastName;

  /// Vcard.
  final String vcard;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Media Uploaded Document.
///
/// ID: `5b38c6c1`.
class InputMediaUploadedDocument extends InputMediaBase {
  /// Input Media Uploaded Document constructor.
  const InputMediaUploadedDocument({
    required this.flags,
    required this.file,
    required this.thumb,
    required this.mimeType,
    required this.attributes,
    required this.stickers,
    required this.ttlSeconds,
  }) : super._();

  /// Deserialize.
  factory InputMediaUploadedDocument.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// nosound_video: bit
  bool get nosoundVideo => _bit(flags, 3);

  /// force_file: bit
  bool get forceFile => _bit(flags, 4);

  /// spoiler: bit
  bool get spoiler => _bit(flags, 5);

  /// File.
  final InputFileBase file;

  /// Thumb.
  final InputFileBase? thumb;

  /// If [thumb] exists.
  bool get hasThumbField => _bit(flags, 2);

  /// Mime Type.
  final String mimeType;

  /// Attributes.
  final List<DocumentAttributeBase> attributes;

  /// Stickers.
  final List<InputDocumentBase>? stickers;

  /// If [stickers] exists.
  bool get hasStickersField => _bit(flags, 0);

  /// Ttl Seconds.
  final int? ttlSeconds;

  /// If [ttlSeconds] exists.
  bool get hasTtlSecondsField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Media Document.
///
/// ID: `33473058`.
class InputMediaDocument extends InputMediaBase {
  /// Input Media Document constructor.
  const InputMediaDocument({
    required this.flags,
    required this.id,
    required this.ttlSeconds,
    required this.query,
  }) : super._();

  /// Deserialize.
  factory InputMediaDocument.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// spoiler: bit
  bool get spoiler => _bit(flags, 2);

  /// Id.
  final InputDocumentBase id;

  /// Ttl Seconds.
  final int? ttlSeconds;

  /// If [ttlSeconds] exists.
  bool get hasTtlSecondsField => _bit(flags, 0);

  /// Query.
  final String? query;

  /// If [query] exists.
  bool get hasQueryField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Media Venue.
///
/// ID: `c13d1c11`.
class InputMediaVenue extends InputMediaBase {
  /// Input Media Venue constructor.
  const InputMediaVenue({
    required this.geoPoint,
    required this.title,
    required this.address,
    required this.provider,
    required this.venueId,
    required this.venueType,
  }) : super._();

  /// Deserialize.
  factory InputMediaVenue.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Geo Point.
  final InputGeoPointBase geoPoint;

  /// Title.
  final String title;

  /// Address.
  final String address;

  /// Provider.
  final String provider;

  /// Venue Id.
  final String venueId;

  /// Venue Type.
  final String venueType;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Media Photo External.
///
/// ID: `e5bbfe1a`.
class InputMediaPhotoExternal extends InputMediaBase {
  /// Input Media Photo External constructor.
  const InputMediaPhotoExternal({
    required this.flags,
    required this.url,
    required this.ttlSeconds,
  }) : super._();

  /// Deserialize.
  factory InputMediaPhotoExternal.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// spoiler: bit
  bool get spoiler => _bit(flags, 1);

  /// Url.
  final String url;

  /// Ttl Seconds.
  final int? ttlSeconds;

  /// If [ttlSeconds] exists.
  bool get hasTtlSecondsField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Media Document External.
///
/// ID: `fb52dc99`.
class InputMediaDocumentExternal extends InputMediaBase {
  /// Input Media Document External constructor.
  const InputMediaDocumentExternal({
    required this.flags,
    required this.url,
    required this.ttlSeconds,
  }) : super._();

  /// Deserialize.
  factory InputMediaDocumentExternal.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// spoiler: bit
  bool get spoiler => _bit(flags, 1);

  /// Url.
  final String url;

  /// Ttl Seconds.
  final int? ttlSeconds;

  /// If [ttlSeconds] exists.
  bool get hasTtlSecondsField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Media Game.
///
/// ID: `d33f43f3`.
class InputMediaGame extends InputMediaBase {
  /// Input Media Game constructor.
  const InputMediaGame({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory InputMediaGame.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final InputGameBase id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Media Invoice.
///
/// ID: `8eb5a6d5`.
class InputMediaInvoice extends InputMediaBase {
  /// Input Media Invoice constructor.
  const InputMediaInvoice({
    required this.flags,
    required this.title,
    required this.description,
    required this.photo,
    required this.invoice,
    required this.payload,
    required this.provider,
    required this.providerData,
    required this.startParam,
    required this.extendedMedia,
  }) : super._();

  /// Deserialize.
  factory InputMediaInvoice.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Title.
  final String title;

  /// Description.
  final String description;

  /// Photo.
  final InputWebDocumentBase? photo;

  /// If [photo] exists.
  bool get hasPhotoField => _bit(flags, 0);

  /// Invoice.
  final InvoiceBase invoice;

  /// Payload.
  final Uint8List payload;

  /// Provider.
  final String provider;

  /// Provider Data.
  final DataJSONBase providerData;

  /// Start Param.
  final String? startParam;

  /// If [startParam] exists.
  bool get hasStartParamField => _bit(flags, 1);

  /// Extended Media.
  final InputMediaBase? extendedMedia;

  /// If [extendedMedia] exists.
  bool get hasExtendedMediaField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Media Geo Live.
///
/// ID: `971fa843`.
class InputMediaGeoLive extends InputMediaBase {
  /// Input Media Geo Live constructor.
  const InputMediaGeoLive({
    required this.flags,
    required this.geoPoint,
    required this.heading,
    required this.period,
    required this.proximityNotificationRadius,
  }) : super._();

  /// Deserialize.
  factory InputMediaGeoLive.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// stopped: bit
  bool get stopped => _bit(flags, 0);

  /// Geo Point.
  final InputGeoPointBase geoPoint;

  /// Heading.
  final int? heading;

  /// If [heading] exists.
  bool get hasHeadingField => _bit(flags, 2);

  /// Period.
  final int? period;

  /// If [period] exists.
  bool get hasPeriodField => _bit(flags, 1);

  /// Proximity Notification Radius.
  final int? proximityNotificationRadius;

  /// If [proximityNotificationRadius] exists.
  bool get hasProximityNotificationRadiusField => _bit(flags, 3);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Media Poll.
///
/// ID: `0f94e5f1`.
class InputMediaPoll extends InputMediaBase {
  /// Input Media Poll constructor.
  const InputMediaPoll({
    required this.flags,
    required this.poll,
    required this.correctAnswers,
    required this.solution,
    required this.solutionEntities,
  }) : super._();

  /// Deserialize.
  factory InputMediaPoll.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Poll.
  final PollBase poll;

  /// Correct Answers.
  final List<Uint8List>? correctAnswers;

  /// If [correctAnswers] exists.
  bool get hasCorrectAnswersField => _bit(flags, 0);

  /// Solution.
  final String? solution;

  /// If [solution] exists.
  bool get hasSolutionField => _bit(flags, 1);

  /// Solution Entities.
  final List<MessageEntityBase>? solutionEntities;

  /// If [solutionEntities] exists.
  bool get hasSolutionEntitiesField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Media Dice.
///
/// ID: `e66fbf7b`.
class InputMediaDice extends InputMediaBase {
  /// Input Media Dice constructor.
  const InputMediaDice({
    required this.emoticon,
  }) : super._();

  /// Deserialize.
  factory InputMediaDice.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Emoticon.
  final String emoticon;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Media Story.
///
/// ID: `89fdd778`.
class InputMediaStory extends InputMediaBase {
  /// Input Media Story constructor.
  const InputMediaStory({
    required this.peer,
    required this.id,
  }) : super._();

  /// Deserialize.
  factory InputMediaStory.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final int id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Media Web Page.
///
/// ID: `c21b8849`.
class InputMediaWebPage extends InputMediaBase {
  /// Input Media Web Page constructor.
  const InputMediaWebPage({
    required this.flags,
    required this.url,
  }) : super._();

  /// Deserialize.
  factory InputMediaWebPage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// force_large_media: bit
  bool get forceLargeMedia => _bit(flags, 0);

  /// force_small_media: bit
  bool get forceSmallMedia => _bit(flags, 1);

  /// optional: bit
  bool get optional => _bit(flags, 2);

  /// Url.
  final String url;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Chat Photo.
abstract class InputChatPhotoBase extends TlConstructor {
  /// Predicate Input Chat Photo constructor.
  const InputChatPhotoBase._() : super._();
}

/// Input Chat Photo Empty.
///
/// ID: `1ca48f57`.
class InputChatPhotoEmpty extends InputChatPhotoBase {
  /// Input Chat Photo Empty constructor.
  const InputChatPhotoEmpty() : super._();

  /// Deserialize.
  factory InputChatPhotoEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Chat Uploaded Photo.
///
/// ID: `bdcdaec0`.
class InputChatUploadedPhoto extends InputChatPhotoBase {
  /// Input Chat Uploaded Photo constructor.
  const InputChatUploadedPhoto({
    required this.flags,
    required this.file,
    required this.video,
    required this.videoStartTs,
    required this.videoEmojiMarkup,
  }) : super._();

  /// Deserialize.
  factory InputChatUploadedPhoto.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// File.
  final InputFileBase? file;

  /// If [file] exists.
  bool get hasFileField => _bit(flags, 0);

  /// Video.
  final InputFileBase? video;

  /// If [video] exists.
  bool get hasVideoField => _bit(flags, 1);

  /// Video Start Ts.
  final double? videoStartTs;

  /// If [videoStartTs] exists.
  bool get hasVideoStartTsField => _bit(flags, 2);

  /// Video Emoji Markup.
  final VideoSizeBase? videoEmojiMarkup;

  /// If [videoEmojiMarkup] exists.
  bool get hasVideoEmojiMarkupField => _bit(flags, 3);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Chat Photo.
///
/// ID: `8953ad37`.
class InputChatPhoto extends InputChatPhotoBase {
  /// Input Chat Photo constructor.
  const InputChatPhoto({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory InputChatPhoto.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final InputPhotoBase id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Geo Point.
abstract class InputGeoPointBase extends TlConstructor {
  /// Predicate Input Geo Point constructor.
  const InputGeoPointBase._() : super._();
}

/// Input Geo Point Empty.
///
/// ID: `e4c123d6`.
class InputGeoPointEmpty extends InputGeoPointBase {
  /// Input Geo Point Empty constructor.
  const InputGeoPointEmpty() : super._();

  /// Deserialize.
  factory InputGeoPointEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Geo Point.
///
/// ID: `48222faf`.
class InputGeoPoint extends InputGeoPointBase {
  /// Input Geo Point constructor.
  const InputGeoPoint({
    required this.flags,
    required this.lat,
    required this.long,
    required this.accuracyRadius,
  }) : super._();

  /// Deserialize.
  factory InputGeoPoint.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Lat.
  final double lat;

  /// Long.
  final double long;

  /// Accuracy Radius.
  final int? accuracyRadius;

  /// If [accuracyRadius] exists.
  bool get hasAccuracyRadiusField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Photo.
abstract class InputPhotoBase extends TlConstructor {
  /// Predicate Input Photo constructor.
  const InputPhotoBase._() : super._();
}

/// Input Photo Empty.
///
/// ID: `1cd7bf0d`.
class InputPhotoEmpty extends InputPhotoBase {
  /// Input Photo Empty constructor.
  const InputPhotoEmpty() : super._();

  /// Deserialize.
  factory InputPhotoEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Photo.
///
/// ID: `3bb3b94a`.
class InputPhoto extends InputPhotoBase {
  /// Input Photo constructor.
  const InputPhoto({
    required this.id,
    required this.accessHash,
    required this.fileReference,
  }) : super._();

  /// Deserialize.
  factory InputPhoto.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// File Reference.
  final Uint8List fileReference;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input File Location.
abstract class InputFileLocationBase extends TlConstructor {
  /// Predicate Input File Location constructor.
  const InputFileLocationBase._() : super._();
}

/// Input File Location.
///
/// ID: `dfdaabe1`.
class InputFileLocation extends InputFileLocationBase {
  /// Input File Location constructor.
  const InputFileLocation({
    required this.volumeId,
    required this.localId,
    required this.secret,
    required this.fileReference,
  }) : super._();

  /// Deserialize.
  factory InputFileLocation.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Volume Id.
  final int volumeId;

  /// Local Id.
  final int localId;

  /// Secret.
  final int secret;

  /// File Reference.
  final Uint8List fileReference;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Encrypted File Location.
///
/// ID: `f5235d55`.
class InputEncryptedFileLocation extends InputFileLocationBase {
  /// Input Encrypted File Location constructor.
  const InputEncryptedFileLocation({
    required this.id,
    required this.accessHash,
  }) : super._();

  /// Deserialize.
  factory InputEncryptedFileLocation.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Document File Location.
///
/// ID: `bad07584`.
class InputDocumentFileLocation extends InputFileLocationBase {
  /// Input Document File Location constructor.
  const InputDocumentFileLocation({
    required this.id,
    required this.accessHash,
    required this.fileReference,
    required this.thumbSize,
  }) : super._();

  /// Deserialize.
  factory InputDocumentFileLocation.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// File Reference.
  final Uint8List fileReference;

  /// Thumb Size.
  final String thumbSize;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Secure File Location.
///
/// ID: `cbc7ee28`.
class InputSecureFileLocation extends InputFileLocationBase {
  /// Input Secure File Location constructor.
  const InputSecureFileLocation({
    required this.id,
    required this.accessHash,
  }) : super._();

  /// Deserialize.
  factory InputSecureFileLocation.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Takeout File Location.
///
/// ID: `29be5899`.
class InputTakeoutFileLocation extends InputFileLocationBase {
  /// Input Takeout File Location constructor.
  const InputTakeoutFileLocation() : super._();

  /// Deserialize.
  factory InputTakeoutFileLocation.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Photo File Location.
///
/// ID: `40181ffe`.
class InputPhotoFileLocation extends InputFileLocationBase {
  /// Input Photo File Location constructor.
  const InputPhotoFileLocation({
    required this.id,
    required this.accessHash,
    required this.fileReference,
    required this.thumbSize,
  }) : super._();

  /// Deserialize.
  factory InputPhotoFileLocation.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// File Reference.
  final Uint8List fileReference;

  /// Thumb Size.
  final String thumbSize;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Photo Legacy File Location.
///
/// ID: `d83466f3`.
class InputPhotoLegacyFileLocation extends InputFileLocationBase {
  /// Input Photo Legacy File Location constructor.
  const InputPhotoLegacyFileLocation({
    required this.id,
    required this.accessHash,
    required this.fileReference,
    required this.volumeId,
    required this.localId,
    required this.secret,
  }) : super._();

  /// Deserialize.
  factory InputPhotoLegacyFileLocation.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// File Reference.
  final Uint8List fileReference;

  /// Volume Id.
  final int volumeId;

  /// Local Id.
  final int localId;

  /// Secret.
  final int secret;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Peer Photo File Location.
///
/// ID: `37257e99`.
class InputPeerPhotoFileLocation extends InputFileLocationBase {
  /// Input Peer Photo File Location constructor.
  const InputPeerPhotoFileLocation({
    required this.flags,
    required this.peer,
    required this.photoId,
  }) : super._();

  /// Deserialize.
  factory InputPeerPhotoFileLocation.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// big: bit
  bool get big => _bit(flags, 0);

  /// Peer.
  final InputPeerBase peer;

  /// Photo Id.
  final int photoId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Sticker Set Thumb.
///
/// ID: `9d84f3db`.
class InputStickerSetThumb extends InputFileLocationBase {
  /// Input Sticker Set Thumb constructor.
  const InputStickerSetThumb({
    required this.stickerset,
    required this.thumbVersion,
  }) : super._();

  /// Deserialize.
  factory InputStickerSetThumb.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Stickerset.
  final InputStickerSetBase stickerset;

  /// Thumb Version.
  final int thumbVersion;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Group Call Stream.
///
/// ID: `0598a92a`.
class InputGroupCallStream extends InputFileLocationBase {
  /// Input Group Call Stream constructor.
  const InputGroupCallStream({
    required this.flags,
    required this.call,
    required this.timeMs,
    required this.scale,
    required this.videoChannel,
    required this.videoQuality,
  }) : super._();

  /// Deserialize.
  factory InputGroupCallStream.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Call.
  final InputGroupCallBase call;

  /// Time Ms.
  final int timeMs;

  /// Scale.
  final int scale;

  /// Video Channel.
  final int? videoChannel;

  /// If [videoChannel] exists.
  bool get hasVideoChannelField => _bit(flags, 0);

  /// Video Quality.
  final int? videoQuality;

  /// If [videoQuality] exists.
  bool get hasVideoQualityField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Peer.
abstract class PeerBase extends TlConstructor {
  /// Predicate Peer constructor.
  const PeerBase._() : super._();
}

/// Peer User.
///
/// ID: `59511722`.
class PeerUser extends PeerBase {
  /// Peer User constructor.
  const PeerUser({
    required this.userId,
  }) : super._();

  /// Deserialize.
  factory PeerUser.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final int userId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Peer Chat.
///
/// ID: `36c6019a`.
class PeerChat extends PeerBase {
  /// Peer Chat constructor.
  const PeerChat({
    required this.chatId,
  }) : super._();

  /// Deserialize.
  factory PeerChat.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chat Id.
  final int chatId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Peer Channel.
///
/// ID: `a2a5371e`.
class PeerChannel extends PeerBase {
  /// Peer Channel constructor.
  const PeerChannel({
    required this.channelId,
  }) : super._();

  /// Deserialize.
  factory PeerChannel.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel Id.
  final int channelId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Storage File Type.
abstract class StorageFileTypeBase extends TlConstructor {
  /// Predicate Storage File Type constructor.
  const StorageFileTypeBase._() : super._();
}

/// Storage File Unknown.
///
/// ID: `aa963b05`.
class StorageFileUnknown extends StorageFileTypeBase {
  /// Storage File Unknown constructor.
  const StorageFileUnknown() : super._();

  /// Deserialize.
  factory StorageFileUnknown.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Storage File Partial.
///
/// ID: `40bc6f52`.
class StorageFilePartial extends StorageFileTypeBase {
  /// Storage File Partial constructor.
  const StorageFilePartial() : super._();

  /// Deserialize.
  factory StorageFilePartial.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Storage File Jpeg.
///
/// ID: `007efe0e`.
class StorageFileJpeg extends StorageFileTypeBase {
  /// Storage File Jpeg constructor.
  const StorageFileJpeg() : super._();

  /// Deserialize.
  factory StorageFileJpeg.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Storage File Gif.
///
/// ID: `cae1aadf`.
class StorageFileGif extends StorageFileTypeBase {
  /// Storage File Gif constructor.
  const StorageFileGif() : super._();

  /// Deserialize.
  factory StorageFileGif.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Storage File Png.
///
/// ID: `0a4f63c0`.
class StorageFilePng extends StorageFileTypeBase {
  /// Storage File Png constructor.
  const StorageFilePng() : super._();

  /// Deserialize.
  factory StorageFilePng.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Storage File Pdf.
///
/// ID: `ae1e508d`.
class StorageFilePdf extends StorageFileTypeBase {
  /// Storage File Pdf constructor.
  const StorageFilePdf() : super._();

  /// Deserialize.
  factory StorageFilePdf.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Storage File Mp3.
///
/// ID: `528a0677`.
class StorageFileMp3 extends StorageFileTypeBase {
  /// Storage File Mp3 constructor.
  const StorageFileMp3() : super._();

  /// Deserialize.
  factory StorageFileMp3.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Storage File Mov.
///
/// ID: `4b09ebbc`.
class StorageFileMov extends StorageFileTypeBase {
  /// Storage File Mov constructor.
  const StorageFileMov() : super._();

  /// Deserialize.
  factory StorageFileMov.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Storage File Mp4.
///
/// ID: `b3cea0e4`.
class StorageFileMp4 extends StorageFileTypeBase {
  /// Storage File Mp4 constructor.
  const StorageFileMp4() : super._();

  /// Deserialize.
  factory StorageFileMp4.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Storage File Webp.
///
/// ID: `1081464c`.
class StorageFileWebp extends StorageFileTypeBase {
  /// Storage File Webp constructor.
  const StorageFileWebp() : super._();

  /// Deserialize.
  factory StorageFileWebp.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate User.
abstract class UserBase extends TlConstructor {
  /// Predicate User constructor.
  const UserBase._() : super._();
}

/// User Empty.
///
/// ID: `d3bc4b7a`.
class UserEmpty extends UserBase {
  /// User Empty constructor.
  const UserEmpty({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory UserEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// User.
///
/// ID: `215c4438`.
class User extends UserBase {
  /// User constructor.
  const User({
    required this.flags,
    required this.flags2,
    required this.id,
    required this.accessHash,
    required this.firstName,
    required this.lastName,
    required this.username,
    required this.phone,
    required this.photo,
    required this.status,
    required this.botInfoVersion,
    required this.restrictionReason,
    required this.botInlinePlaceholder,
    required this.langCode,
    required this.emojiStatus,
    required this.usernames,
    required this.storiesMaxId,
    required this.color,
    required this.profileColor,
  }) : super._();

  /// Deserialize.
  factory User.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// self: bit
  bool get self => _bit(flags, 10);

  /// contact: bit
  bool get contact => _bit(flags, 11);

  /// mutual_contact: bit
  bool get mutualContact => _bit(flags, 12);

  /// deleted: bit
  bool get deleted => _bit(flags, 13);

  /// bot: bit
  bool get bot => _bit(flags, 14);

  /// bot_chat_history: bit
  bool get botChatHistory => _bit(flags, 15);

  /// bot_nochats: bit
  bool get botNochats => _bit(flags, 16);

  /// verified: bit
  bool get verified => _bit(flags, 17);

  /// restricted: bit
  bool get restricted => _bit(flags, 18);

  /// min: bit
  bool get min => _bit(flags, 20);

  /// bot_inline_geo: bit
  bool get botInlineGeo => _bit(flags, 21);

  /// support: bit
  bool get support => _bit(flags, 23);

  /// scam: bit
  bool get scam => _bit(flags, 24);

  /// apply_min_photo: bit
  bool get applyMinPhoto => _bit(flags, 25);

  /// fake: bit
  bool get fake => _bit(flags, 26);

  /// bot_attach_menu: bit
  bool get botAttachMenu => _bit(flags, 27);

  /// premium: bit
  bool get premium => _bit(flags, 28);

  /// attach_menu_enabled: bit
  bool get attachMenuEnabled => _bit(flags, 29);

  /// Flags2.
  final int flags2;

  /// Bot Can Edit.
  bool get botCanEdit => _bit(flags2, 1);

  /// Close Friend.
  bool get closeFriend => _bit(flags2, 2);

  /// Stories Hidden.
  bool get storiesHidden => _bit(flags2, 3);

  /// Stories Unavailable.
  bool get storiesUnavailable => _bit(flags2, 4);

  /// Id.
  final int id;

  /// Access Hash.
  final int? accessHash;

  /// If [accessHash] exists.
  bool get hasAccessHashField => _bit(flags, 0);

  /// First Name.
  final String? firstName;

  /// If [firstName] exists.
  bool get hasFirstNameField => _bit(flags, 1);

  /// Last Name.
  final String? lastName;

  /// If [lastName] exists.
  bool get hasLastNameField => _bit(flags, 2);

  /// Username.
  final String? username;

  /// If [username] exists.
  bool get hasUsernameField => _bit(flags, 3);

  /// Phone.
  final String? phone;

  /// If [phone] exists.
  bool get hasPhoneField => _bit(flags, 4);

  /// Photo.
  final UserProfilePhotoBase? photo;

  /// If [photo] exists.
  bool get hasPhotoField => _bit(flags, 5);

  /// Status.
  final UserStatusBase? status;

  /// If [status] exists.
  bool get hasStatusField => _bit(flags, 6);

  /// Bot Info Version.
  final int? botInfoVersion;

  /// If [botInfoVersion] exists.
  bool get hasBotInfoVersionField => _bit(flags, 14);

  /// Restriction Reason.
  final List<RestrictionReasonBase>? restrictionReason;

  /// If [restrictionReason] exists.
  bool get hasRestrictionReasonField => _bit(flags, 18);

  /// Bot Inline Placeholder.
  final String? botInlinePlaceholder;

  /// If [botInlinePlaceholder] exists.
  bool get hasBotInlinePlaceholderField => _bit(flags, 19);

  /// Lang Code.
  final String? langCode;

  /// If [langCode] exists.
  bool get hasLangCodeField => _bit(flags, 22);

  /// Emoji Status.
  final EmojiStatusBase? emojiStatus;

  /// If [emojiStatus] exists.
  bool get hasEmojiStatusField => _bit(flags, 30);

  /// usernames: flags2.0?Vector<Username>
  final List<UsernameBase>? usernames;

  /// If [usernames] exists.
  bool get hasUsernamesField => _bit(flags2, 0);

  /// stories_max_id: flags2.5?int
  final int? storiesMaxId;

  /// If [storiesMaxId] exists.
  bool get hasStoriesMaxIdField => _bit(flags2, 5);

  /// color: flags2.8?PeerColor
  final PeerColorBase? color;

  /// If [color] exists.
  bool get hasColorField => _bit(flags2, 8);

  /// profile_color: flags2.9?PeerColor
  final PeerColorBase? profileColor;

  /// If [profileColor] exists.
  bool get hasProfileColorField => _bit(flags2, 9);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate User Profile Photo.
abstract class UserProfilePhotoBase extends TlConstructor {
  /// Predicate User Profile Photo constructor.
  const UserProfilePhotoBase._() : super._();
}

/// User Profile Photo Empty.
///
/// ID: `4f11bae1`.
class UserProfilePhotoEmpty extends UserProfilePhotoBase {
  /// User Profile Photo Empty constructor.
  const UserProfilePhotoEmpty() : super._();

  /// Deserialize.
  factory UserProfilePhotoEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// User Profile Photo.
///
/// ID: `82d1f706`.
class UserProfilePhoto extends UserProfilePhotoBase {
  /// User Profile Photo constructor.
  const UserProfilePhoto({
    required this.flags,
    required this.photoId,
    required this.strippedThumb,
    required this.dcId,
  }) : super._();

  /// Deserialize.
  factory UserProfilePhoto.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// has_video: bit
  bool get hasVideo => _bit(flags, 0);

  /// personal: bit
  bool get personal => _bit(flags, 2);

  /// Photo Id.
  final int photoId;

  /// Stripped Thumb.
  final Uint8List? strippedThumb;

  /// If [strippedThumb] exists.
  bool get hasStrippedThumbField => _bit(flags, 1);

  /// Dc Id.
  final int dcId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate User Status.
abstract class UserStatusBase extends TlConstructor {
  /// Predicate User Status constructor.
  const UserStatusBase._() : super._();
}

/// User Status Empty.
///
/// ID: `09d05049`.
class UserStatusEmpty extends UserStatusBase {
  /// User Status Empty constructor.
  const UserStatusEmpty() : super._();

  /// Deserialize.
  factory UserStatusEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// User Status Online.
///
/// ID: `edb93949`.
class UserStatusOnline extends UserStatusBase {
  /// User Status Online constructor.
  const UserStatusOnline({
    required this.expires,
  }) : super._();

  /// Deserialize.
  factory UserStatusOnline.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Expires.
  final int expires;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// User Status Offline.
///
/// ID: `008c703f`.
class UserStatusOffline extends UserStatusBase {
  /// User Status Offline constructor.
  const UserStatusOffline({
    required this.wasOnline,
  }) : super._();

  /// Deserialize.
  factory UserStatusOffline.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Was Online.
  final int wasOnline;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// User Status Recently.
///
/// ID: `e26f42f1`.
class UserStatusRecently extends UserStatusBase {
  /// User Status Recently constructor.
  const UserStatusRecently() : super._();

  /// Deserialize.
  factory UserStatusRecently.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// User Status Last Week.
///
/// ID: `07bf09fc`.
class UserStatusLastWeek extends UserStatusBase {
  /// User Status Last Week constructor.
  const UserStatusLastWeek() : super._();

  /// Deserialize.
  factory UserStatusLastWeek.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// User Status Last Month.
///
/// ID: `77ebc742`.
class UserStatusLastMonth extends UserStatusBase {
  /// User Status Last Month constructor.
  const UserStatusLastMonth() : super._();

  /// Deserialize.
  factory UserStatusLastMonth.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Chat.
abstract class ChatBase extends TlConstructor {
  /// Predicate Chat constructor.
  const ChatBase._() : super._();
}

/// Chat Empty.
///
/// ID: `29562865`.
class ChatEmpty extends ChatBase {
  /// Chat Empty constructor.
  const ChatEmpty({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory ChatEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Chat.
///
/// ID: `41cbf256`.
class Chat extends ChatBase {
  /// Chat constructor.
  const Chat({
    required this.flags,
    required this.id,
    required this.title,
    required this.photo,
    required this.participantsCount,
    required this.date,
    required this.version,
    required this.migratedTo,
    required this.adminRights,
    required this.defaultBannedRights,
  }) : super._();

  /// Deserialize.
  factory Chat.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// creator: bit
  bool get creator => _bit(flags, 0);

  /// left: bit
  bool get left => _bit(flags, 2);

  /// deactivated: bit
  bool get deactivated => _bit(flags, 5);

  /// call_active: bit
  bool get callActive => _bit(flags, 23);

  /// call_not_empty: bit
  bool get callNotEmpty => _bit(flags, 24);

  /// noforwards: bit
  bool get noforwards => _bit(flags, 25);

  /// Id.
  final int id;

  /// Title.
  final String title;

  /// Photo.
  final ChatPhotoBase photo;

  /// Participants Count.
  final int participantsCount;

  /// Date.
  final int date;

  /// Version.
  final int version;

  /// Migrated To.
  final InputChannelBase? migratedTo;

  /// If [migratedTo] exists.
  bool get hasMigratedToField => _bit(flags, 6);

  /// Admin Rights.
  final ChatAdminRightsBase? adminRights;

  /// If [adminRights] exists.
  bool get hasAdminRightsField => _bit(flags, 14);

  /// Default Banned Rights.
  final ChatBannedRightsBase? defaultBannedRights;

  /// If [defaultBannedRights] exists.
  bool get hasDefaultBannedRightsField => _bit(flags, 18);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Chat Forbidden.
///
/// ID: `6592a1a7`.
class ChatForbidden extends ChatBase {
  /// Chat Forbidden constructor.
  const ChatForbidden({
    required this.id,
    required this.title,
  }) : super._();

  /// Deserialize.
  factory ChatForbidden.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Title.
  final String title;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel.
///
/// ID: `0aadfc8f`.
class Channel extends ChatBase {
  /// Channel constructor.
  const Channel({
    required this.flags,
    required this.flags2,
    required this.id,
    required this.accessHash,
    required this.title,
    required this.username,
    required this.photo,
    required this.date,
    required this.restrictionReason,
    required this.adminRights,
    required this.bannedRights,
    required this.defaultBannedRights,
    required this.participantsCount,
    required this.usernames,
    required this.storiesMaxId,
    required this.color,
    required this.profileColor,
    required this.emojiStatus,
    required this.level,
  }) : super._();

  /// Deserialize.
  factory Channel.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// creator: bit
  bool get creator => _bit(flags, 0);

  /// left: bit
  bool get left => _bit(flags, 2);

  /// broadcast: bit
  bool get broadcast => _bit(flags, 5);

  /// verified: bit
  bool get verified => _bit(flags, 7);

  /// megagroup: bit
  bool get megagroup => _bit(flags, 8);

  /// restricted: bit
  bool get restricted => _bit(flags, 9);

  /// signatures: bit
  bool get signatures => _bit(flags, 11);

  /// min: bit
  bool get min => _bit(flags, 12);

  /// scam: bit
  bool get scam => _bit(flags, 19);

  /// has_link: bit
  bool get hasLink => _bit(flags, 20);

  /// has_geo: bit
  bool get hasGeo => _bit(flags, 21);

  /// slowmode_enabled: bit
  bool get slowmodeEnabled => _bit(flags, 22);

  /// call_active: bit
  bool get callActive => _bit(flags, 23);

  /// call_not_empty: bit
  bool get callNotEmpty => _bit(flags, 24);

  /// fake: bit
  bool get fake => _bit(flags, 25);

  /// gigagroup: bit
  bool get gigagroup => _bit(flags, 26);

  /// noforwards: bit
  bool get noforwards => _bit(flags, 27);

  /// join_to_send: bit
  bool get joinToSend => _bit(flags, 28);

  /// join_request: bit
  bool get joinRequest => _bit(flags, 29);

  /// forum: bit
  bool get forum => _bit(flags, 30);

  /// Flags2.
  final int flags2;

  /// Stories Hidden.
  bool get storiesHidden => _bit(flags2, 1);

  /// Stories Hidden Min.
  bool get storiesHiddenMin => _bit(flags2, 2);

  /// Stories Unavailable.
  bool get storiesUnavailable => _bit(flags2, 3);

  /// Id.
  final int id;

  /// Access Hash.
  final int? accessHash;

  /// If [accessHash] exists.
  bool get hasAccessHashField => _bit(flags, 13);

  /// Title.
  final String title;

  /// Username.
  final String? username;

  /// If [username] exists.
  bool get hasUsernameField => _bit(flags, 6);

  /// Photo.
  final ChatPhotoBase photo;

  /// Date.
  final int date;

  /// Restriction Reason.
  final List<RestrictionReasonBase>? restrictionReason;

  /// If [restrictionReason] exists.
  bool get hasRestrictionReasonField => _bit(flags, 9);

  /// Admin Rights.
  final ChatAdminRightsBase? adminRights;

  /// If [adminRights] exists.
  bool get hasAdminRightsField => _bit(flags, 14);

  /// Banned Rights.
  final ChatBannedRightsBase? bannedRights;

  /// If [bannedRights] exists.
  bool get hasBannedRightsField => _bit(flags, 15);

  /// Default Banned Rights.
  final ChatBannedRightsBase? defaultBannedRights;

  /// If [defaultBannedRights] exists.
  bool get hasDefaultBannedRightsField => _bit(flags, 18);

  /// Participants Count.
  final int? participantsCount;

  /// If [participantsCount] exists.
  bool get hasParticipantsCountField => _bit(flags, 17);

  /// usernames: flags2.0?Vector<Username>
  final List<UsernameBase>? usernames;

  /// If [usernames] exists.
  bool get hasUsernamesField => _bit(flags2, 0);

  /// stories_max_id: flags2.4?int
  final int? storiesMaxId;

  /// If [storiesMaxId] exists.
  bool get hasStoriesMaxIdField => _bit(flags2, 4);

  /// color: flags2.7?PeerColor
  final PeerColorBase? color;

  /// If [color] exists.
  bool get hasColorField => _bit(flags2, 7);

  /// profile_color: flags2.8?PeerColor
  final PeerColorBase? profileColor;

  /// If [profileColor] exists.
  bool get hasProfileColorField => _bit(flags2, 8);

  /// emoji_status: flags2.9?EmojiStatus
  final EmojiStatusBase? emojiStatus;

  /// If [emojiStatus] exists.
  bool get hasEmojiStatusField => _bit(flags2, 9);

  /// level: flags2.10?int
  final int? level;

  /// If [level] exists.
  bool get hasLevelField => _bit(flags2, 10);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Forbidden.
///
/// ID: `17d493d5`.
class ChannelForbidden extends ChatBase {
  /// Channel Forbidden constructor.
  const ChannelForbidden({
    required this.flags,
    required this.id,
    required this.accessHash,
    required this.title,
    required this.untilDate,
  }) : super._();

  /// Deserialize.
  factory ChannelForbidden.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// broadcast: bit
  bool get broadcast => _bit(flags, 5);

  /// megagroup: bit
  bool get megagroup => _bit(flags, 8);

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Title.
  final String title;

  /// Until Date.
  final int? untilDate;

  /// If [untilDate] exists.
  bool get hasUntilDateField => _bit(flags, 16);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Chat Full.
abstract class ChatFullBase extends TlConstructor {
  /// Predicate Chat Full constructor.
  const ChatFullBase._() : super._();
}

/// Chat Full.
///
/// ID: `c9d31138`.
class ChatFull extends ChatFullBase {
  /// Chat Full constructor.
  const ChatFull({
    required this.flags,
    required this.id,
    required this.about,
    required this.participants,
    required this.chatPhoto,
    required this.notifySettings,
    required this.exportedInvite,
    required this.botInfo,
    required this.pinnedMsgId,
    required this.folderId,
    required this.call,
    required this.ttlPeriod,
    required this.groupcallDefaultJoinAs,
    required this.themeEmoticon,
    required this.requestsPending,
    required this.recentRequesters,
    required this.availableReactions,
  }) : super._();

  /// Deserialize.
  factory ChatFull.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// can_set_username: bit
  bool get canSetUsername => _bit(flags, 7);

  /// has_scheduled: bit
  bool get hasScheduled => _bit(flags, 8);

  /// translations_disabled: bit
  bool get translationsDisabled => _bit(flags, 19);

  /// Id.
  final int id;

  /// About.
  final String about;

  /// Participants.
  final ChatParticipantsBase participants;

  /// Chat Photo.
  final PhotoBase? chatPhoto;

  /// If [chatPhoto] exists.
  bool get hasChatPhotoField => _bit(flags, 2);

  /// Notify Settings.
  final PeerNotifySettingsBase notifySettings;

  /// Exported Invite.
  final ExportedChatInviteBase? exportedInvite;

  /// If [exportedInvite] exists.
  bool get hasExportedInviteField => _bit(flags, 13);

  /// Bot Info.
  final List<BotInfoBase>? botInfo;

  /// If [botInfo] exists.
  bool get hasBotInfoField => _bit(flags, 3);

  /// Pinned Msg Id.
  final int? pinnedMsgId;

  /// If [pinnedMsgId] exists.
  bool get hasPinnedMsgIdField => _bit(flags, 6);

  /// Folder Id.
  final int? folderId;

  /// If [folderId] exists.
  bool get hasFolderIdField => _bit(flags, 11);

  /// Call.
  final InputGroupCallBase? call;

  /// If [call] exists.
  bool get hasCallField => _bit(flags, 12);

  /// Ttl Period.
  final int? ttlPeriod;

  /// If [ttlPeriod] exists.
  bool get hasTtlPeriodField => _bit(flags, 14);

  /// Groupcall Default Join As.
  final PeerBase? groupcallDefaultJoinAs;

  /// If [groupcallDefaultJoinAs] exists.
  bool get hasGroupcallDefaultJoinAsField => _bit(flags, 15);

  /// Theme Emoticon.
  final String? themeEmoticon;

  /// If [themeEmoticon] exists.
  bool get hasThemeEmoticonField => _bit(flags, 16);

  /// Requests Pending.
  final int? requestsPending;

  /// If [requestsPending] exists.
  bool get hasRequestsPendingField => _bit(flags, 17);

  /// Recent Requesters.
  final List<int>? recentRequesters;

  /// If [recentRequesters] exists.
  bool get hasRecentRequestersField => _bit(flags, 17);

  /// Available Reactions.
  final ChatReactionsBase? availableReactions;

  /// If [availableReactions] exists.
  bool get hasAvailableReactionsField => _bit(flags, 18);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Full.
///
/// ID: `0f2bcb6f`.
class ChannelFull extends ChatFullBase {
  /// Channel Full constructor.
  const ChannelFull({
    required this.flags,
    required this.flags2,
    required this.id,
    required this.about,
    required this.participantsCount,
    required this.adminsCount,
    required this.kickedCount,
    required this.bannedCount,
    required this.onlineCount,
    required this.readInboxMaxId,
    required this.readOutboxMaxId,
    required this.unreadCount,
    required this.chatPhoto,
    required this.notifySettings,
    required this.exportedInvite,
    required this.botInfo,
    required this.migratedFromChatId,
    required this.migratedFromMaxId,
    required this.pinnedMsgId,
    required this.stickerset,
    required this.availableMinId,
    required this.folderId,
    required this.linkedChatId,
    required this.location,
    required this.slowmodeSeconds,
    required this.slowmodeNextSendDate,
    required this.statsDc,
    required this.pts,
    required this.call,
    required this.ttlPeriod,
    required this.pendingSuggestions,
    required this.groupcallDefaultJoinAs,
    required this.themeEmoticon,
    required this.requestsPending,
    required this.recentRequesters,
    required this.defaultSendAs,
    required this.availableReactions,
    required this.stories,
    required this.wallpaper,
  }) : super._();

  /// Deserialize.
  factory ChannelFull.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// can_view_participants: bit
  bool get canViewParticipants => _bit(flags, 3);

  /// can_set_username: bit
  bool get canSetUsername => _bit(flags, 6);

  /// can_set_stickers: bit
  bool get canSetStickers => _bit(flags, 7);

  /// hidden_prehistory: bit
  bool get hiddenPrehistory => _bit(flags, 10);

  /// can_set_location: bit
  bool get canSetLocation => _bit(flags, 16);

  /// has_scheduled: bit
  bool get hasScheduled => _bit(flags, 19);

  /// can_view_stats: bit
  bool get canViewStats => _bit(flags, 20);

  /// blocked: bit
  bool get blocked => _bit(flags, 22);

  /// Flags2.
  final int flags2;

  /// Can Delete Channel.
  bool get canDeleteChannel => _bit(flags2, 0);

  /// Antispam.
  bool get antispam => _bit(flags2, 1);

  /// Participants Hidden.
  bool get participantsHidden => _bit(flags2, 2);

  /// Translations Disabled.
  bool get translationsDisabled => _bit(flags2, 3);

  /// Stories Pinned Available.
  bool get storiesPinnedAvailable => _bit(flags2, 5);

  /// View Forum As Messages.
  bool get viewForumAsMessages => _bit(flags2, 6);

  /// Id.
  final int id;

  /// About.
  final String about;

  /// Participants Count.
  final int? participantsCount;

  /// If [participantsCount] exists.
  bool get hasParticipantsCountField => _bit(flags, 0);

  /// Admins Count.
  final int? adminsCount;

  /// If [adminsCount] exists.
  bool get hasAdminsCountField => _bit(flags, 1);

  /// Kicked Count.
  final int? kickedCount;

  /// If [kickedCount] exists.
  bool get hasKickedCountField => _bit(flags, 2);

  /// Banned Count.
  final int? bannedCount;

  /// If [bannedCount] exists.
  bool get hasBannedCountField => _bit(flags, 2);

  /// Online Count.
  final int? onlineCount;

  /// If [onlineCount] exists.
  bool get hasOnlineCountField => _bit(flags, 13);

  /// Read Inbox Max Id.
  final int readInboxMaxId;

  /// Read Outbox Max Id.
  final int readOutboxMaxId;

  /// Unread Count.
  final int unreadCount;

  /// Chat Photo.
  final PhotoBase chatPhoto;

  /// Notify Settings.
  final PeerNotifySettingsBase notifySettings;

  /// Exported Invite.
  final ExportedChatInviteBase? exportedInvite;

  /// If [exportedInvite] exists.
  bool get hasExportedInviteField => _bit(flags, 23);

  /// Bot Info.
  final List<BotInfoBase> botInfo;

  /// Migrated From Chat Id.
  final int? migratedFromChatId;

  /// If [migratedFromChatId] exists.
  bool get hasMigratedFromChatIdField => _bit(flags, 4);

  /// Migrated From Max Id.
  final int? migratedFromMaxId;

  /// If [migratedFromMaxId] exists.
  bool get hasMigratedFromMaxIdField => _bit(flags, 4);

  /// Pinned Msg Id.
  final int? pinnedMsgId;

  /// If [pinnedMsgId] exists.
  bool get hasPinnedMsgIdField => _bit(flags, 5);

  /// Stickerset.
  final StickerSetBase? stickerset;

  /// If [stickerset] exists.
  bool get hasStickersetField => _bit(flags, 8);

  /// Available Min Id.
  final int? availableMinId;

  /// If [availableMinId] exists.
  bool get hasAvailableMinIdField => _bit(flags, 9);

  /// Folder Id.
  final int? folderId;

  /// If [folderId] exists.
  bool get hasFolderIdField => _bit(flags, 11);

  /// Linked Chat Id.
  final int? linkedChatId;

  /// If [linkedChatId] exists.
  bool get hasLinkedChatIdField => _bit(flags, 14);

  /// Location.
  final ChannelLocationBase? location;

  /// If [location] exists.
  bool get hasLocationField => _bit(flags, 15);

  /// Slowmode Seconds.
  final int? slowmodeSeconds;

  /// If [slowmodeSeconds] exists.
  bool get hasSlowmodeSecondsField => _bit(flags, 17);

  /// Slowmode Next Send Date.
  final int? slowmodeNextSendDate;

  /// If [slowmodeNextSendDate] exists.
  bool get hasSlowmodeNextSendDateField => _bit(flags, 18);

  /// Stats Dc.
  final int? statsDc;

  /// If [statsDc] exists.
  bool get hasStatsDcField => _bit(flags, 12);

  /// Pts.
  final int pts;

  /// Call.
  final InputGroupCallBase? call;

  /// If [call] exists.
  bool get hasCallField => _bit(flags, 21);

  /// Ttl Period.
  final int? ttlPeriod;

  /// If [ttlPeriod] exists.
  bool get hasTtlPeriodField => _bit(flags, 24);

  /// Pending Suggestions.
  final List<String>? pendingSuggestions;

  /// If [pendingSuggestions] exists.
  bool get hasPendingSuggestionsField => _bit(flags, 25);

  /// Groupcall Default Join As.
  final PeerBase? groupcallDefaultJoinAs;

  /// If [groupcallDefaultJoinAs] exists.
  bool get hasGroupcallDefaultJoinAsField => _bit(flags, 26);

  /// Theme Emoticon.
  final String? themeEmoticon;

  /// If [themeEmoticon] exists.
  bool get hasThemeEmoticonField => _bit(flags, 27);

  /// Requests Pending.
  final int? requestsPending;

  /// If [requestsPending] exists.
  bool get hasRequestsPendingField => _bit(flags, 28);

  /// Recent Requesters.
  final List<int>? recentRequesters;

  /// If [recentRequesters] exists.
  bool get hasRecentRequestersField => _bit(flags, 28);

  /// Default Send As.
  final PeerBase? defaultSendAs;

  /// If [defaultSendAs] exists.
  bool get hasDefaultSendAsField => _bit(flags, 29);

  /// Available Reactions.
  final ChatReactionsBase? availableReactions;

  /// If [availableReactions] exists.
  bool get hasAvailableReactionsField => _bit(flags, 30);

  /// stories: flags2.4?PeerStories
  final PeerStoriesBase? stories;

  /// If [stories] exists.
  bool get hasStoriesField => _bit(flags2, 4);

  /// wallpaper: flags2.7?WallPaper
  final WallPaperBase? wallpaper;

  /// If [wallpaper] exists.
  bool get hasWallpaperField => _bit(flags2, 7);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Chat Participant.
abstract class ChatParticipantBase extends TlConstructor {
  /// Predicate Chat Participant constructor.
  const ChatParticipantBase._() : super._();
}

/// Chat Participant.
///
/// ID: `c02d4007`.
class ChatParticipant extends ChatParticipantBase {
  /// Chat Participant constructor.
  const ChatParticipant({
    required this.userId,
    required this.inviterId,
    required this.date,
  }) : super._();

  /// Deserialize.
  factory ChatParticipant.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final int userId;

  /// Inviter Id.
  final int inviterId;

  /// Date.
  final int date;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Chat Participant Creator.
///
/// ID: `e46bcee4`.
class ChatParticipantCreator extends ChatParticipantBase {
  /// Chat Participant Creator constructor.
  const ChatParticipantCreator({
    required this.userId,
  }) : super._();

  /// Deserialize.
  factory ChatParticipantCreator.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final int userId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Chat Participant Admin.
///
/// ID: `a0933f5b`.
class ChatParticipantAdmin extends ChatParticipantBase {
  /// Chat Participant Admin constructor.
  const ChatParticipantAdmin({
    required this.userId,
    required this.inviterId,
    required this.date,
  }) : super._();

  /// Deserialize.
  factory ChatParticipantAdmin.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final int userId;

  /// Inviter Id.
  final int inviterId;

  /// Date.
  final int date;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Chat Participants.
abstract class ChatParticipantsBase extends TlConstructor {
  /// Predicate Chat Participants constructor.
  const ChatParticipantsBase._() : super._();
}

/// Chat Participants Forbidden.
///
/// ID: `8763d3e1`.
class ChatParticipantsForbidden extends ChatParticipantsBase {
  /// Chat Participants Forbidden constructor.
  const ChatParticipantsForbidden({
    required this.flags,
    required this.chatId,
    required this.selfParticipant,
  }) : super._();

  /// Deserialize.
  factory ChatParticipantsForbidden.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Chat Id.
  final int chatId;

  /// Self Participant.
  final ChatParticipantBase? selfParticipant;

  /// If [selfParticipant] exists.
  bool get hasSelfParticipantField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Chat Participants.
///
/// ID: `3cbc93f8`.
class ChatParticipants extends ChatParticipantsBase {
  /// Chat Participants constructor.
  const ChatParticipants({
    required this.chatId,
    required this.participants,
    required this.version,
  }) : super._();

  /// Deserialize.
  factory ChatParticipants.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chat Id.
  final int chatId;

  /// Participants.
  final List<ChatParticipantBase> participants;

  /// Version.
  final int version;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Chat Photo.
abstract class ChatPhotoBase extends TlConstructor {
  /// Predicate Chat Photo constructor.
  const ChatPhotoBase._() : super._();
}

/// Chat Photo Empty.
///
/// ID: `37c1011c`.
class ChatPhotoEmpty extends ChatPhotoBase {
  /// Chat Photo Empty constructor.
  const ChatPhotoEmpty() : super._();

  /// Deserialize.
  factory ChatPhotoEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Chat Photo.
///
/// ID: `1c6e1c11`.
class ChatPhoto extends ChatPhotoBase {
  /// Chat Photo constructor.
  const ChatPhoto({
    required this.flags,
    required this.photoId,
    required this.strippedThumb,
    required this.dcId,
  }) : super._();

  /// Deserialize.
  factory ChatPhoto.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// has_video: bit
  bool get hasVideo => _bit(flags, 0);

  /// Photo Id.
  final int photoId;

  /// Stripped Thumb.
  final Uint8List? strippedThumb;

  /// If [strippedThumb] exists.
  bool get hasStrippedThumbField => _bit(flags, 1);

  /// Dc Id.
  final int dcId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Message.
abstract class MessageBase extends TlConstructor {
  /// Predicate Message constructor.
  const MessageBase._() : super._();
}

/// Message Empty.
///
/// ID: `90a6ca84`.
class MessageEmpty extends MessageBase {
  /// Message Empty constructor.
  const MessageEmpty({
    required this.flags,
    required this.id,
    required this.peerId,
  }) : super._();

  /// Deserialize.
  factory MessageEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Id.
  final int id;

  /// Peer Id.
  final PeerBase? peerId;

  /// If [peerId] exists.
  bool get hasPeerIdField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message.
///
/// ID: `76bec211`.
class Message extends MessageBase {
  /// Message constructor.
  const Message({
    required this.flags,
    required this.id,
    required this.fromId,
    required this.peerId,
    required this.savedPeerId,
    required this.fwdFrom,
    required this.viaBotId,
    required this.replyTo,
    required this.date,
    required this.message,
    required this.media,
    required this.replyMarkup,
    required this.entities,
    required this.views,
    required this.forwards,
    required this.replies,
    required this.editDate,
    required this.postAuthor,
    required this.groupedId,
    required this.reactions,
    required this.restrictionReason,
    required this.ttlPeriod,
  }) : super._();

  /// Deserialize.
  factory Message.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// out: bit
  bool get out => _bit(flags, 1);

  /// mentioned: bit
  bool get mentioned => _bit(flags, 4);

  /// media_unread: bit
  bool get mediaUnread => _bit(flags, 5);

  /// silent: bit
  bool get silent => _bit(flags, 13);

  /// post: bit
  bool get post => _bit(flags, 14);

  /// from_scheduled: bit
  bool get fromScheduled => _bit(flags, 18);

  /// legacy: bit
  bool get legacy => _bit(flags, 19);

  /// edit_hide: bit
  bool get editHide => _bit(flags, 21);

  /// pinned: bit
  bool get pinned => _bit(flags, 24);

  /// noforwards: bit
  bool get noforwards => _bit(flags, 26);

  /// invert_media: bit
  bool get invertMedia => _bit(flags, 27);

  /// Id.
  final int id;

  /// From Id.
  final PeerBase? fromId;

  /// If [fromId] exists.
  bool get hasFromIdField => _bit(flags, 8);

  /// Peer Id.
  final PeerBase peerId;

  /// Saved Peer Id.
  final PeerBase? savedPeerId;

  /// If [savedPeerId] exists.
  bool get hasSavedPeerIdField => _bit(flags, 28);

  /// Fwd From.
  final MessageFwdHeaderBase? fwdFrom;

  /// If [fwdFrom] exists.
  bool get hasFwdFromField => _bit(flags, 2);

  /// Via Bot Id.
  final int? viaBotId;

  /// If [viaBotId] exists.
  bool get hasViaBotIdField => _bit(flags, 11);

  /// Reply To.
  final MessageReplyHeaderBase? replyTo;

  /// If [replyTo] exists.
  bool get hasReplyToField => _bit(flags, 3);

  /// Date.
  final int date;

  /// Message.
  final String message;

  /// Media.
  final MessageMediaBase? media;

  /// If [media] exists.
  bool get hasMediaField => _bit(flags, 9);

  /// Reply Markup.
  final ReplyMarkupBase? replyMarkup;

  /// If [replyMarkup] exists.
  bool get hasReplyMarkupField => _bit(flags, 6);

  /// Entities.
  final List<MessageEntityBase>? entities;

  /// If [entities] exists.
  bool get hasEntitiesField => _bit(flags, 7);

  /// Views.
  final int? views;

  /// If [views] exists.
  bool get hasViewsField => _bit(flags, 10);

  /// Forwards.
  final int? forwards;

  /// If [forwards] exists.
  bool get hasForwardsField => _bit(flags, 10);

  /// Replies.
  final MessageRepliesBase? replies;

  /// If [replies] exists.
  bool get hasRepliesField => _bit(flags, 23);

  /// Edit Date.
  final int? editDate;

  /// If [editDate] exists.
  bool get hasEditDateField => _bit(flags, 15);

  /// Post Author.
  final String? postAuthor;

  /// If [postAuthor] exists.
  bool get hasPostAuthorField => _bit(flags, 16);

  /// Grouped Id.
  final int? groupedId;

  /// If [groupedId] exists.
  bool get hasGroupedIdField => _bit(flags, 17);

  /// Reactions.
  final MessageReactionsBase? reactions;

  /// If [reactions] exists.
  bool get hasReactionsField => _bit(flags, 20);

  /// Restriction Reason.
  final List<RestrictionReasonBase>? restrictionReason;

  /// If [restrictionReason] exists.
  bool get hasRestrictionReasonField => _bit(flags, 22);

  /// Ttl Period.
  final int? ttlPeriod;

  /// If [ttlPeriod] exists.
  bool get hasTtlPeriodField => _bit(flags, 25);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Service.
///
/// ID: `2b085862`.
class MessageService extends MessageBase {
  /// Message Service constructor.
  const MessageService({
    required this.flags,
    required this.id,
    required this.fromId,
    required this.peerId,
    required this.replyTo,
    required this.date,
    required this.action,
    required this.ttlPeriod,
  }) : super._();

  /// Deserialize.
  factory MessageService.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// out: bit
  bool get out => _bit(flags, 1);

  /// mentioned: bit
  bool get mentioned => _bit(flags, 4);

  /// media_unread: bit
  bool get mediaUnread => _bit(flags, 5);

  /// silent: bit
  bool get silent => _bit(flags, 13);

  /// post: bit
  bool get post => _bit(flags, 14);

  /// legacy: bit
  bool get legacy => _bit(flags, 19);

  /// Id.
  final int id;

  /// From Id.
  final PeerBase? fromId;

  /// If [fromId] exists.
  bool get hasFromIdField => _bit(flags, 8);

  /// Peer Id.
  final PeerBase peerId;

  /// Reply To.
  final MessageReplyHeaderBase? replyTo;

  /// If [replyTo] exists.
  bool get hasReplyToField => _bit(flags, 3);

  /// Date.
  final int date;

  /// Action.
  final MessageActionBase action;

  /// Ttl Period.
  final int? ttlPeriod;

  /// If [ttlPeriod] exists.
  bool get hasTtlPeriodField => _bit(flags, 25);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Message Media.
abstract class MessageMediaBase extends TlConstructor {
  /// Predicate Message Media constructor.
  const MessageMediaBase._() : super._();
}

/// Message Media Empty.
///
/// ID: `3ded6320`.
class MessageMediaEmpty extends MessageMediaBase {
  /// Message Media Empty constructor.
  const MessageMediaEmpty() : super._();

  /// Deserialize.
  factory MessageMediaEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Media Photo.
///
/// ID: `695150d7`.
class MessageMediaPhoto extends MessageMediaBase {
  /// Message Media Photo constructor.
  const MessageMediaPhoto({
    required this.flags,
    required this.photo,
    required this.ttlSeconds,
  }) : super._();

  /// Deserialize.
  factory MessageMediaPhoto.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// spoiler: bit
  bool get spoiler => _bit(flags, 3);

  /// Photo.
  final PhotoBase? photo;

  /// If [photo] exists.
  bool get hasPhotoField => _bit(flags, 0);

  /// Ttl Seconds.
  final int? ttlSeconds;

  /// If [ttlSeconds] exists.
  bool get hasTtlSecondsField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Media Geo.
///
/// ID: `56e0d474`.
class MessageMediaGeo extends MessageMediaBase {
  /// Message Media Geo constructor.
  const MessageMediaGeo({
    required this.geo,
  }) : super._();

  /// Deserialize.
  factory MessageMediaGeo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Geo.
  final GeoPointBase geo;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Media Contact.
///
/// ID: `70322949`.
class MessageMediaContact extends MessageMediaBase {
  /// Message Media Contact constructor.
  const MessageMediaContact({
    required this.phoneNumber,
    required this.firstName,
    required this.lastName,
    required this.vcard,
    required this.userId,
  }) : super._();

  /// Deserialize.
  factory MessageMediaContact.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Phone Number.
  final String phoneNumber;

  /// First Name.
  final String firstName;

  /// Last Name.
  final String lastName;

  /// Vcard.
  final String vcard;

  /// User Id.
  final int userId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Media Unsupported.
///
/// ID: `9f84f49e`.
class MessageMediaUnsupported extends MessageMediaBase {
  /// Message Media Unsupported constructor.
  const MessageMediaUnsupported() : super._();

  /// Deserialize.
  factory MessageMediaUnsupported.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Media Document.
///
/// ID: `4cf4d72d`.
class MessageMediaDocument extends MessageMediaBase {
  /// Message Media Document constructor.
  const MessageMediaDocument({
    required this.flags,
    required this.document,
    required this.altDocument,
    required this.ttlSeconds,
  }) : super._();

  /// Deserialize.
  factory MessageMediaDocument.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// nopremium: bit
  bool get nopremium => _bit(flags, 3);

  /// spoiler: bit
  bool get spoiler => _bit(flags, 4);

  /// video: bit
  bool get video => _bit(flags, 6);

  /// round: bit
  bool get round => _bit(flags, 7);

  /// voice: bit
  bool get voice => _bit(flags, 8);

  /// Document.
  final DocumentBase? document;

  /// If [document] exists.
  bool get hasDocumentField => _bit(flags, 0);

  /// Alt Document.
  final DocumentBase? altDocument;

  /// If [altDocument] exists.
  bool get hasAltDocumentField => _bit(flags, 5);

  /// Ttl Seconds.
  final int? ttlSeconds;

  /// If [ttlSeconds] exists.
  bool get hasTtlSecondsField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Media Web Page.
///
/// ID: `ddf10c3b`.
class MessageMediaWebPage extends MessageMediaBase {
  /// Message Media Web Page constructor.
  const MessageMediaWebPage({
    required this.flags,
    required this.webpage,
  }) : super._();

  /// Deserialize.
  factory MessageMediaWebPage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// force_large_media: bit
  bool get forceLargeMedia => _bit(flags, 0);

  /// force_small_media: bit
  bool get forceSmallMedia => _bit(flags, 1);

  /// manual: bit
  bool get manual => _bit(flags, 3);

  /// safe: bit
  bool get safe => _bit(flags, 4);

  /// Webpage.
  final WebPageBase webpage;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Media Venue.
///
/// ID: `2ec0533f`.
class MessageMediaVenue extends MessageMediaBase {
  /// Message Media Venue constructor.
  const MessageMediaVenue({
    required this.geo,
    required this.title,
    required this.address,
    required this.provider,
    required this.venueId,
    required this.venueType,
  }) : super._();

  /// Deserialize.
  factory MessageMediaVenue.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Geo.
  final GeoPointBase geo;

  /// Title.
  final String title;

  /// Address.
  final String address;

  /// Provider.
  final String provider;

  /// Venue Id.
  final String venueId;

  /// Venue Type.
  final String venueType;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Media Game.
///
/// ID: `fdb19008`.
class MessageMediaGame extends MessageMediaBase {
  /// Message Media Game constructor.
  const MessageMediaGame({
    required this.game,
  }) : super._();

  /// Deserialize.
  factory MessageMediaGame.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Game.
  final GameBase game;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Media Invoice.
///
/// ID: `f6a548d3`.
class MessageMediaInvoice extends MessageMediaBase {
  /// Message Media Invoice constructor.
  const MessageMediaInvoice({
    required this.flags,
    required this.title,
    required this.description,
    required this.photo,
    required this.receiptMsgId,
    required this.currency,
    required this.totalAmount,
    required this.startParam,
    required this.extendedMedia,
  }) : super._();

  /// Deserialize.
  factory MessageMediaInvoice.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// shipping_address_requested: bit
  bool get shippingAddressRequested => _bit(flags, 1);

  /// test: bit
  bool get test => _bit(flags, 3);

  /// Title.
  final String title;

  /// Description.
  final String description;

  /// Photo.
  final WebDocumentBase? photo;

  /// If [photo] exists.
  bool get hasPhotoField => _bit(flags, 0);

  /// Receipt Msg Id.
  final int? receiptMsgId;

  /// If [receiptMsgId] exists.
  bool get hasReceiptMsgIdField => _bit(flags, 2);

  /// Currency.
  final String currency;

  /// Total Amount.
  final int totalAmount;

  /// Start Param.
  final String startParam;

  /// Extended Media.
  final MessageExtendedMediaBase? extendedMedia;

  /// If [extendedMedia] exists.
  bool get hasExtendedMediaField => _bit(flags, 4);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Media Geo Live.
///
/// ID: `b940c666`.
class MessageMediaGeoLive extends MessageMediaBase {
  /// Message Media Geo Live constructor.
  const MessageMediaGeoLive({
    required this.flags,
    required this.geo,
    required this.heading,
    required this.period,
    required this.proximityNotificationRadius,
  }) : super._();

  /// Deserialize.
  factory MessageMediaGeoLive.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Geo.
  final GeoPointBase geo;

  /// Heading.
  final int? heading;

  /// If [heading] exists.
  bool get hasHeadingField => _bit(flags, 0);

  /// Period.
  final int period;

  /// Proximity Notification Radius.
  final int? proximityNotificationRadius;

  /// If [proximityNotificationRadius] exists.
  bool get hasProximityNotificationRadiusField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Media Poll.
///
/// ID: `4bd6e798`.
class MessageMediaPoll extends MessageMediaBase {
  /// Message Media Poll constructor.
  const MessageMediaPoll({
    required this.poll,
    required this.results,
  }) : super._();

  /// Deserialize.
  factory MessageMediaPoll.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Poll.
  final PollBase poll;

  /// Results.
  final PollResultsBase results;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Media Dice.
///
/// ID: `3f7ee58b`.
class MessageMediaDice extends MessageMediaBase {
  /// Message Media Dice constructor.
  const MessageMediaDice({
    required this.value,
    required this.emoticon,
  }) : super._();

  /// Deserialize.
  factory MessageMediaDice.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Value.
  final int value;

  /// Emoticon.
  final String emoticon;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Media Story.
///
/// ID: `68cb6283`.
class MessageMediaStory extends MessageMediaBase {
  /// Message Media Story constructor.
  const MessageMediaStory({
    required this.flags,
    required this.peer,
    required this.id,
    required this.story,
  }) : super._();

  /// Deserialize.
  factory MessageMediaStory.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// via_mention: bit
  bool get viaMention => _bit(flags, 1);

  /// Peer.
  final PeerBase peer;

  /// Id.
  final int id;

  /// Story.
  final StoryItemBase? story;

  /// If [story] exists.
  bool get hasStoryField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Media Giveaway.
///
/// ID: `daad85b0`.
class MessageMediaGiveaway extends MessageMediaBase {
  /// Message Media Giveaway constructor.
  const MessageMediaGiveaway({
    required this.flags,
    required this.channels,
    required this.countriesIso2,
    required this.prizeDescription,
    required this.quantity,
    required this.months,
    required this.untilDate,
  }) : super._();

  /// Deserialize.
  factory MessageMediaGiveaway.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// only_new_subscribers: bit
  bool get onlyNewSubscribers => _bit(flags, 0);

  /// winners_are_visible: bit
  bool get winnersAreVisible => _bit(flags, 2);

  /// Channels.
  final List<int> channels;

  /// Countries Iso2.
  final List<String>? countriesIso2;

  /// If [countriesIso2] exists.
  bool get hasCountriesIso2Field => _bit(flags, 1);

  /// Prize Description.
  final String? prizeDescription;

  /// If [prizeDescription] exists.
  bool get hasPrizeDescriptionField => _bit(flags, 3);

  /// Quantity.
  final int quantity;

  /// Months.
  final int months;

  /// Until Date.
  final int untilDate;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Media Giveaway Results.
///
/// ID: `c6991068`.
class MessageMediaGiveawayResults extends MessageMediaBase {
  /// Message Media Giveaway Results constructor.
  const MessageMediaGiveawayResults({
    required this.flags,
    required this.channelId,
    required this.additionalPeersCount,
    required this.launchMsgId,
    required this.winnersCount,
    required this.unclaimedCount,
    required this.winners,
    required this.months,
    required this.prizeDescription,
    required this.untilDate,
  }) : super._();

  /// Deserialize.
  factory MessageMediaGiveawayResults.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// only_new_subscribers: bit
  bool get onlyNewSubscribers => _bit(flags, 0);

  /// refunded: bit
  bool get refunded => _bit(flags, 2);

  /// Channel Id.
  final int channelId;

  /// Additional Peers Count.
  final int? additionalPeersCount;

  /// If [additionalPeersCount] exists.
  bool get hasAdditionalPeersCountField => _bit(flags, 3);

  /// Launch Msg Id.
  final int launchMsgId;

  /// Winners Count.
  final int winnersCount;

  /// Unclaimed Count.
  final int unclaimedCount;

  /// Winners.
  final List<int> winners;

  /// Months.
  final int months;

  /// Prize Description.
  final String? prizeDescription;

  /// If [prizeDescription] exists.
  bool get hasPrizeDescriptionField => _bit(flags, 1);

  /// Until Date.
  final int untilDate;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Message Action.
abstract class MessageActionBase extends TlConstructor {
  /// Predicate Message Action constructor.
  const MessageActionBase._() : super._();
}

/// Message Action Empty.
///
/// ID: `b6aef7b0`.
class MessageActionEmpty extends MessageActionBase {
  /// Message Action Empty constructor.
  const MessageActionEmpty() : super._();

  /// Deserialize.
  factory MessageActionEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Chat Create.
///
/// ID: `bd47cbad`.
class MessageActionChatCreate extends MessageActionBase {
  /// Message Action Chat Create constructor.
  const MessageActionChatCreate({
    required this.title,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory MessageActionChatCreate.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Title.
  final String title;

  /// Users.
  final List<int> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Chat Edit Title.
///
/// ID: `b5a1ce5a`.
class MessageActionChatEditTitle extends MessageActionBase {
  /// Message Action Chat Edit Title constructor.
  const MessageActionChatEditTitle({
    required this.title,
  }) : super._();

  /// Deserialize.
  factory MessageActionChatEditTitle.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Title.
  final String title;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Chat Edit Photo.
///
/// ID: `7fcb13a8`.
class MessageActionChatEditPhoto extends MessageActionBase {
  /// Message Action Chat Edit Photo constructor.
  const MessageActionChatEditPhoto({
    required this.photo,
  }) : super._();

  /// Deserialize.
  factory MessageActionChatEditPhoto.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Photo.
  final PhotoBase photo;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Chat Delete Photo.
///
/// ID: `95e3fbef`.
class MessageActionChatDeletePhoto extends MessageActionBase {
  /// Message Action Chat Delete Photo constructor.
  const MessageActionChatDeletePhoto() : super._();

  /// Deserialize.
  factory MessageActionChatDeletePhoto.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Chat Add User.
///
/// ID: `15cefd00`.
class MessageActionChatAddUser extends MessageActionBase {
  /// Message Action Chat Add User constructor.
  const MessageActionChatAddUser({
    required this.users,
  }) : super._();

  /// Deserialize.
  factory MessageActionChatAddUser.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Users.
  final List<int> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Chat Delete User.
///
/// ID: `a43f30cc`.
class MessageActionChatDeleteUser extends MessageActionBase {
  /// Message Action Chat Delete User constructor.
  const MessageActionChatDeleteUser({
    required this.userId,
  }) : super._();

  /// Deserialize.
  factory MessageActionChatDeleteUser.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final int userId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Chat Joined By Link.
///
/// ID: `031224c3`.
class MessageActionChatJoinedByLink extends MessageActionBase {
  /// Message Action Chat Joined By Link constructor.
  const MessageActionChatJoinedByLink({
    required this.inviterId,
  }) : super._();

  /// Deserialize.
  factory MessageActionChatJoinedByLink.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Inviter Id.
  final int inviterId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Channel Create.
///
/// ID: `95d2ac92`.
class MessageActionChannelCreate extends MessageActionBase {
  /// Message Action Channel Create constructor.
  const MessageActionChannelCreate({
    required this.title,
  }) : super._();

  /// Deserialize.
  factory MessageActionChannelCreate.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Title.
  final String title;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Chat Migrate To.
///
/// ID: `e1037f92`.
class MessageActionChatMigrateTo extends MessageActionBase {
  /// Message Action Chat Migrate To constructor.
  const MessageActionChatMigrateTo({
    required this.channelId,
  }) : super._();

  /// Deserialize.
  factory MessageActionChatMigrateTo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel Id.
  final int channelId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Channel Migrate From.
///
/// ID: `ea3948e9`.
class MessageActionChannelMigrateFrom extends MessageActionBase {
  /// Message Action Channel Migrate From constructor.
  const MessageActionChannelMigrateFrom({
    required this.title,
    required this.chatId,
  }) : super._();

  /// Deserialize.
  factory MessageActionChannelMigrateFrom.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Title.
  final String title;

  /// Chat Id.
  final int chatId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Pin Message.
///
/// ID: `94bd38ed`.
class MessageActionPinMessage extends MessageActionBase {
  /// Message Action Pin Message constructor.
  const MessageActionPinMessage() : super._();

  /// Deserialize.
  factory MessageActionPinMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action History Clear.
///
/// ID: `9fbab604`.
class MessageActionHistoryClear extends MessageActionBase {
  /// Message Action History Clear constructor.
  const MessageActionHistoryClear() : super._();

  /// Deserialize.
  factory MessageActionHistoryClear.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Game Score.
///
/// ID: `92a72876`.
class MessageActionGameScore extends MessageActionBase {
  /// Message Action Game Score constructor.
  const MessageActionGameScore({
    required this.gameId,
    required this.score,
  }) : super._();

  /// Deserialize.
  factory MessageActionGameScore.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Game Id.
  final int gameId;

  /// Score.
  final int score;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Payment Sent Me.
///
/// ID: `8f31b327`.
class MessageActionPaymentSentMe extends MessageActionBase {
  /// Message Action Payment Sent Me constructor.
  const MessageActionPaymentSentMe({
    required this.flags,
    required this.currency,
    required this.totalAmount,
    required this.payload,
    required this.info,
    required this.shippingOptionId,
    required this.charge,
  }) : super._();

  /// Deserialize.
  factory MessageActionPaymentSentMe.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// recurring_init: bit
  bool get recurringInit => _bit(flags, 2);

  /// recurring_used: bit
  bool get recurringUsed => _bit(flags, 3);

  /// Currency.
  final String currency;

  /// Total Amount.
  final int totalAmount;

  /// Payload.
  final Uint8List payload;

  /// Info.
  final PaymentRequestedInfoBase? info;

  /// If [info] exists.
  bool get hasInfoField => _bit(flags, 0);

  /// Shipping Option Id.
  final String? shippingOptionId;

  /// If [shippingOptionId] exists.
  bool get hasShippingOptionIdField => _bit(flags, 1);

  /// Charge.
  final PaymentChargeBase charge;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Payment Sent.
///
/// ID: `96163f56`.
class MessageActionPaymentSent extends MessageActionBase {
  /// Message Action Payment Sent constructor.
  const MessageActionPaymentSent({
    required this.flags,
    required this.currency,
    required this.totalAmount,
    required this.invoiceSlug,
  }) : super._();

  /// Deserialize.
  factory MessageActionPaymentSent.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// recurring_init: bit
  bool get recurringInit => _bit(flags, 2);

  /// recurring_used: bit
  bool get recurringUsed => _bit(flags, 3);

  /// Currency.
  final String currency;

  /// Total Amount.
  final int totalAmount;

  /// Invoice Slug.
  final String? invoiceSlug;

  /// If [invoiceSlug] exists.
  bool get hasInvoiceSlugField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Phone Call.
///
/// ID: `80e11a7f`.
class MessageActionPhoneCall extends MessageActionBase {
  /// Message Action Phone Call constructor.
  const MessageActionPhoneCall({
    required this.flags,
    required this.callId,
    required this.reason,
    required this.duration,
  }) : super._();

  /// Deserialize.
  factory MessageActionPhoneCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// video: bit
  bool get video => _bit(flags, 2);

  /// Call Id.
  final int callId;

  /// Reason.
  final PhoneCallDiscardReasonBase? reason;

  /// If [reason] exists.
  bool get hasReasonField => _bit(flags, 0);

  /// Duration.
  final int? duration;

  /// If [duration] exists.
  bool get hasDurationField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Screenshot Taken.
///
/// ID: `4792929b`.
class MessageActionScreenshotTaken extends MessageActionBase {
  /// Message Action Screenshot Taken constructor.
  const MessageActionScreenshotTaken() : super._();

  /// Deserialize.
  factory MessageActionScreenshotTaken.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Custom Action.
///
/// ID: `fae69f56`.
class MessageActionCustomAction extends MessageActionBase {
  /// Message Action Custom Action constructor.
  const MessageActionCustomAction({
    required this.message,
  }) : super._();

  /// Deserialize.
  factory MessageActionCustomAction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Message.
  final String message;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Bot Allowed.
///
/// ID: `c516d679`.
class MessageActionBotAllowed extends MessageActionBase {
  /// Message Action Bot Allowed constructor.
  const MessageActionBotAllowed({
    required this.flags,
    required this.domain,
    required this.app,
  }) : super._();

  /// Deserialize.
  factory MessageActionBotAllowed.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// attach_menu: bit
  bool get attachMenu => _bit(flags, 1);

  /// from_request: bit
  bool get fromRequest => _bit(flags, 3);

  /// Domain.
  final String? domain;

  /// If [domain] exists.
  bool get hasDomainField => _bit(flags, 0);

  /// App.
  final BotAppBase? app;

  /// If [app] exists.
  bool get hasAppField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Secure Values Sent Me.
///
/// ID: `1b287353`.
class MessageActionSecureValuesSentMe extends MessageActionBase {
  /// Message Action Secure Values Sent Me constructor.
  const MessageActionSecureValuesSentMe({
    required this.values,
    required this.credentials,
  }) : super._();

  /// Deserialize.
  factory MessageActionSecureValuesSentMe.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Values.
  final List<SecureValueBase> values;

  /// Credentials.
  final SecureCredentialsEncryptedBase credentials;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Secure Values Sent.
///
/// ID: `d95c6154`.
class MessageActionSecureValuesSent extends MessageActionBase {
  /// Message Action Secure Values Sent constructor.
  const MessageActionSecureValuesSent({
    required this.types,
  }) : super._();

  /// Deserialize.
  factory MessageActionSecureValuesSent.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Types.
  final List<SecureValueTypeBase> types;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Contact Sign Up.
///
/// ID: `f3f25f76`.
class MessageActionContactSignUp extends MessageActionBase {
  /// Message Action Contact Sign Up constructor.
  const MessageActionContactSignUp() : super._();

  /// Deserialize.
  factory MessageActionContactSignUp.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Geo Proximity Reached.
///
/// ID: `98e0d697`.
class MessageActionGeoProximityReached extends MessageActionBase {
  /// Message Action Geo Proximity Reached constructor.
  const MessageActionGeoProximityReached({
    required this.fromId,
    required this.toId,
    required this.distance,
  }) : super._();

  /// Deserialize.
  factory MessageActionGeoProximityReached.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// From Id.
  final PeerBase fromId;

  /// To Id.
  final PeerBase toId;

  /// Distance.
  final int distance;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Group Call.
///
/// ID: `7a0d7f42`.
class MessageActionGroupCall extends MessageActionBase {
  /// Message Action Group Call constructor.
  const MessageActionGroupCall({
    required this.flags,
    required this.call,
    required this.duration,
  }) : super._();

  /// Deserialize.
  factory MessageActionGroupCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Call.
  final InputGroupCallBase call;

  /// Duration.
  final int? duration;

  /// If [duration] exists.
  bool get hasDurationField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Invite To Group Call.
///
/// ID: `502f92f7`.
class MessageActionInviteToGroupCall extends MessageActionBase {
  /// Message Action Invite To Group Call constructor.
  const MessageActionInviteToGroupCall({
    required this.call,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory MessageActionInviteToGroupCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Call.
  final InputGroupCallBase call;

  /// Users.
  final List<int> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Set Messages T T L.
///
/// ID: `3c134d7b`.
class MessageActionSetMessagesTTL extends MessageActionBase {
  /// Message Action Set Messages T T L constructor.
  const MessageActionSetMessagesTTL({
    required this.flags,
    required this.period,
    required this.autoSettingFrom,
  }) : super._();

  /// Deserialize.
  factory MessageActionSetMessagesTTL.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Period.
  final int period;

  /// Auto Setting From.
  final int? autoSettingFrom;

  /// If [autoSettingFrom] exists.
  bool get hasAutoSettingFromField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Group Call Scheduled.
///
/// ID: `b3a07661`.
class MessageActionGroupCallScheduled extends MessageActionBase {
  /// Message Action Group Call Scheduled constructor.
  const MessageActionGroupCallScheduled({
    required this.call,
    required this.scheduleDate,
  }) : super._();

  /// Deserialize.
  factory MessageActionGroupCallScheduled.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Call.
  final InputGroupCallBase call;

  /// Schedule Date.
  final int scheduleDate;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Set Chat Theme.
///
/// ID: `aa786345`.
class MessageActionSetChatTheme extends MessageActionBase {
  /// Message Action Set Chat Theme constructor.
  const MessageActionSetChatTheme({
    required this.emoticon,
  }) : super._();

  /// Deserialize.
  factory MessageActionSetChatTheme.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Emoticon.
  final String emoticon;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Chat Joined By Request.
///
/// ID: `ebbca3cb`.
class MessageActionChatJoinedByRequest extends MessageActionBase {
  /// Message Action Chat Joined By Request constructor.
  const MessageActionChatJoinedByRequest() : super._();

  /// Deserialize.
  factory MessageActionChatJoinedByRequest.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Web View Data Sent Me.
///
/// ID: `47dd8079`.
class MessageActionWebViewDataSentMe extends MessageActionBase {
  /// Message Action Web View Data Sent Me constructor.
  const MessageActionWebViewDataSentMe({
    required this.text,
    required this.data,
  }) : super._();

  /// Deserialize.
  factory MessageActionWebViewDataSentMe.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final String text;

  /// Data.
  final String data;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Web View Data Sent.
///
/// ID: `b4c38cb5`.
class MessageActionWebViewDataSent extends MessageActionBase {
  /// Message Action Web View Data Sent constructor.
  const MessageActionWebViewDataSent({
    required this.text,
  }) : super._();

  /// Deserialize.
  factory MessageActionWebViewDataSent.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final String text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Gift Premium.
///
/// ID: `c83d6aec`.
class MessageActionGiftPremium extends MessageActionBase {
  /// Message Action Gift Premium constructor.
  const MessageActionGiftPremium({
    required this.flags,
    required this.currency,
    required this.amount,
    required this.months,
    required this.cryptoCurrency,
    required this.cryptoAmount,
  }) : super._();

  /// Deserialize.
  factory MessageActionGiftPremium.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Currency.
  final String currency;

  /// Amount.
  final int amount;

  /// Months.
  final int months;

  /// Crypto Currency.
  final String? cryptoCurrency;

  /// If [cryptoCurrency] exists.
  bool get hasCryptoCurrencyField => _bit(flags, 0);

  /// Crypto Amount.
  final int? cryptoAmount;

  /// If [cryptoAmount] exists.
  bool get hasCryptoAmountField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Topic Create.
///
/// ID: `0d999256`.
class MessageActionTopicCreate extends MessageActionBase {
  /// Message Action Topic Create constructor.
  const MessageActionTopicCreate({
    required this.flags,
    required this.title,
    required this.iconColor,
    required this.iconEmojiId,
  }) : super._();

  /// Deserialize.
  factory MessageActionTopicCreate.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Title.
  final String title;

  /// Icon Color.
  final int iconColor;

  /// Icon Emoji Id.
  final int? iconEmojiId;

  /// If [iconEmojiId] exists.
  bool get hasIconEmojiIdField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Topic Edit.
///
/// ID: `c0944820`.
class MessageActionTopicEdit extends MessageActionBase {
  /// Message Action Topic Edit constructor.
  const MessageActionTopicEdit({
    required this.flags,
    required this.title,
    required this.iconEmojiId,
    required this.closed,
    required this.hidden,
  }) : super._();

  /// Deserialize.
  factory MessageActionTopicEdit.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Title.
  final String? title;

  /// If [title] exists.
  bool get hasTitleField => _bit(flags, 0);

  /// Icon Emoji Id.
  final int? iconEmojiId;

  /// If [iconEmojiId] exists.
  bool get hasIconEmojiIdField => _bit(flags, 1);

  /// Closed.
  final bool? closed;

  /// If [closed] exists.
  bool get hasClosedField => _bit(flags, 2);

  /// Hidden.
  final bool? hidden;

  /// If [hidden] exists.
  bool get hasHiddenField => _bit(flags, 3);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Suggest Profile Photo.
///
/// ID: `57de635e`.
class MessageActionSuggestProfilePhoto extends MessageActionBase {
  /// Message Action Suggest Profile Photo constructor.
  const MessageActionSuggestProfilePhoto({
    required this.photo,
  }) : super._();

  /// Deserialize.
  factory MessageActionSuggestProfilePhoto.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Photo.
  final PhotoBase photo;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Requested Peer.
///
/// ID: `31518e9b`.
class MessageActionRequestedPeer extends MessageActionBase {
  /// Message Action Requested Peer constructor.
  const MessageActionRequestedPeer({
    required this.buttonId,
    required this.peers,
  }) : super._();

  /// Deserialize.
  factory MessageActionRequestedPeer.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Button Id.
  final int buttonId;

  /// Peers.
  final List<PeerBase> peers;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Set Chat Wall Paper.
///
/// ID: `5060a3f4`.
class MessageActionSetChatWallPaper extends MessageActionBase {
  /// Message Action Set Chat Wall Paper constructor.
  const MessageActionSetChatWallPaper({
    required this.flags,
    required this.wallpaper,
  }) : super._();

  /// Deserialize.
  factory MessageActionSetChatWallPaper.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// same: bit
  bool get same => _bit(flags, 0);

  /// for_both: bit
  bool get forBoth => _bit(flags, 1);

  /// Wallpaper.
  final WallPaperBase wallpaper;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Gift Code.
///
/// ID: `678c2e09`.
class MessageActionGiftCode extends MessageActionBase {
  /// Message Action Gift Code constructor.
  const MessageActionGiftCode({
    required this.flags,
    required this.boostPeer,
    required this.months,
    required this.slug,
    required this.currency,
    required this.amount,
    required this.cryptoCurrency,
    required this.cryptoAmount,
  }) : super._();

  /// Deserialize.
  factory MessageActionGiftCode.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// via_giveaway: bit
  bool get viaGiveaway => _bit(flags, 0);

  /// unclaimed: bit
  bool get unclaimed => _bit(flags, 2);

  /// Boost Peer.
  final PeerBase? boostPeer;

  /// If [boostPeer] exists.
  bool get hasBoostPeerField => _bit(flags, 1);

  /// Months.
  final int months;

  /// Slug.
  final String slug;

  /// Currency.
  final String? currency;

  /// If [currency] exists.
  bool get hasCurrencyField => _bit(flags, 2);

  /// Amount.
  final int? amount;

  /// If [amount] exists.
  bool get hasAmountField => _bit(flags, 2);

  /// Crypto Currency.
  final String? cryptoCurrency;

  /// If [cryptoCurrency] exists.
  bool get hasCryptoCurrencyField => _bit(flags, 3);

  /// Crypto Amount.
  final int? cryptoAmount;

  /// If [cryptoAmount] exists.
  bool get hasCryptoAmountField => _bit(flags, 3);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Giveaway Launch.
///
/// ID: `332ba9ed`.
class MessageActionGiveawayLaunch extends MessageActionBase {
  /// Message Action Giveaway Launch constructor.
  const MessageActionGiveawayLaunch() : super._();

  /// Deserialize.
  factory MessageActionGiveawayLaunch.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Action Giveaway Results.
///
/// ID: `2a9fadc5`.
class MessageActionGiveawayResults extends MessageActionBase {
  /// Message Action Giveaway Results constructor.
  const MessageActionGiveawayResults({
    required this.winnersCount,
    required this.unclaimedCount,
  }) : super._();

  /// Deserialize.
  factory MessageActionGiveawayResults.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Winners Count.
  final int winnersCount;

  /// Unclaimed Count.
  final int unclaimedCount;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Dialog.
abstract class DialogBase extends TlConstructor {
  /// Predicate Dialog constructor.
  const DialogBase._() : super._();
}

/// Dialog.
///
/// ID: `d58a08c6`.
class Dialog extends DialogBase {
  /// Dialog constructor.
  const Dialog({
    required this.flags,
    required this.peer,
    required this.topMessage,
    required this.readInboxMaxId,
    required this.readOutboxMaxId,
    required this.unreadCount,
    required this.unreadMentionsCount,
    required this.unreadReactionsCount,
    required this.notifySettings,
    required this.pts,
    required this.draft,
    required this.folderId,
    required this.ttlPeriod,
  }) : super._();

  /// Deserialize.
  factory Dialog.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// pinned: bit
  bool get pinned => _bit(flags, 2);

  /// unread_mark: bit
  bool get unreadMark => _bit(flags, 3);

  /// view_forum_as_messages: bit
  bool get viewForumAsMessages => _bit(flags, 6);

  /// Peer.
  final PeerBase peer;

  /// Top Message.
  final int topMessage;

  /// Read Inbox Max Id.
  final int readInboxMaxId;

  /// Read Outbox Max Id.
  final int readOutboxMaxId;

  /// Unread Count.
  final int unreadCount;

  /// Unread Mentions Count.
  final int unreadMentionsCount;

  /// Unread Reactions Count.
  final int unreadReactionsCount;

  /// Notify Settings.
  final PeerNotifySettingsBase notifySettings;

  /// Pts.
  final int? pts;

  /// If [pts] exists.
  bool get hasPtsField => _bit(flags, 0);

  /// Draft.
  final DraftMessageBase? draft;

  /// If [draft] exists.
  bool get hasDraftField => _bit(flags, 1);

  /// Folder Id.
  final int? folderId;

  /// If [folderId] exists.
  bool get hasFolderIdField => _bit(flags, 4);

  /// Ttl Period.
  final int? ttlPeriod;

  /// If [ttlPeriod] exists.
  bool get hasTtlPeriodField => _bit(flags, 5);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Dialog Folder.
///
/// ID: `71bd134c`.
class DialogFolder extends DialogBase {
  /// Dialog Folder constructor.
  const DialogFolder({
    required this.flags,
    required this.folder,
    required this.peer,
    required this.topMessage,
    required this.unreadMutedPeersCount,
    required this.unreadUnmutedPeersCount,
    required this.unreadMutedMessagesCount,
    required this.unreadUnmutedMessagesCount,
  }) : super._();

  /// Deserialize.
  factory DialogFolder.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// pinned: bit
  bool get pinned => _bit(flags, 2);

  /// Folder.
  final FolderBase folder;

  /// Peer.
  final PeerBase peer;

  /// Top Message.
  final int topMessage;

  /// Unread Muted Peers Count.
  final int unreadMutedPeersCount;

  /// Unread Unmuted Peers Count.
  final int unreadUnmutedPeersCount;

  /// Unread Muted Messages Count.
  final int unreadMutedMessagesCount;

  /// Unread Unmuted Messages Count.
  final int unreadUnmutedMessagesCount;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Photo.
abstract class PhotoBase extends TlConstructor {
  /// Predicate Photo constructor.
  const PhotoBase._() : super._();
}

/// Photo Empty.
///
/// ID: `2331b22d`.
class PhotoEmpty extends PhotoBase {
  /// Photo Empty constructor.
  const PhotoEmpty({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory PhotoEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Photo.
///
/// ID: `fb197a65`.
class Photo extends PhotoBase {
  /// Photo constructor.
  const Photo({
    required this.flags,
    required this.id,
    required this.accessHash,
    required this.fileReference,
    required this.date,
    required this.sizes,
    required this.videoSizes,
    required this.dcId,
  }) : super._();

  /// Deserialize.
  factory Photo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// has_stickers: bit
  bool get hasStickers => _bit(flags, 0);

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// File Reference.
  final Uint8List fileReference;

  /// Date.
  final int date;

  /// Sizes.
  final List<PhotoSizeBase> sizes;

  /// Video Sizes.
  final List<VideoSizeBase>? videoSizes;

  /// If [videoSizes] exists.
  bool get hasVideoSizesField => _bit(flags, 1);

  /// Dc Id.
  final int dcId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Photo Size.
abstract class PhotoSizeBase extends TlConstructor {
  /// Predicate Photo Size constructor.
  const PhotoSizeBase._() : super._();
}

/// Photo Size Empty.
///
/// ID: `0e17e23c`.
class PhotoSizeEmpty extends PhotoSizeBase {
  /// Photo Size Empty constructor.
  const PhotoSizeEmpty({
    required this.type,
  }) : super._();

  /// Deserialize.
  factory PhotoSizeEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Type.
  final String type;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Photo Size.
///
/// ID: `75c78e60`.
class PhotoSize extends PhotoSizeBase {
  /// Photo Size constructor.
  const PhotoSize({
    required this.type,
    required this.w,
    required this.h,
    required this.size,
  }) : super._();

  /// Deserialize.
  factory PhotoSize.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Type.
  final String type;

  /// W.
  final int w;

  /// H.
  final int h;

  /// Size.
  final int size;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Photo Cached Size.
///
/// ID: `021e1ad6`.
class PhotoCachedSize extends PhotoSizeBase {
  /// Photo Cached Size constructor.
  const PhotoCachedSize({
    required this.type,
    required this.w,
    required this.h,
    required this.bytes,
  }) : super._();

  /// Deserialize.
  factory PhotoCachedSize.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Type.
  final String type;

  /// W.
  final int w;

  /// H.
  final int h;

  /// Bytes.
  final Uint8List bytes;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Photo Stripped Size.
///
/// ID: `e0b0bc2e`.
class PhotoStrippedSize extends PhotoSizeBase {
  /// Photo Stripped Size constructor.
  const PhotoStrippedSize({
    required this.type,
    required this.bytes,
  }) : super._();

  /// Deserialize.
  factory PhotoStrippedSize.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Type.
  final String type;

  /// Bytes.
  final Uint8List bytes;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Photo Size Progressive.
///
/// ID: `fa3efb95`.
class PhotoSizeProgressive extends PhotoSizeBase {
  /// Photo Size Progressive constructor.
  const PhotoSizeProgressive({
    required this.type,
    required this.w,
    required this.h,
    required this.sizes,
  }) : super._();

  /// Deserialize.
  factory PhotoSizeProgressive.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Type.
  final String type;

  /// W.
  final int w;

  /// H.
  final int h;

  /// Sizes.
  final List<int> sizes;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Photo Path Size.
///
/// ID: `d8214d41`.
class PhotoPathSize extends PhotoSizeBase {
  /// Photo Path Size constructor.
  const PhotoPathSize({
    required this.type,
    required this.bytes,
  }) : super._();

  /// Deserialize.
  factory PhotoPathSize.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Type.
  final String type;

  /// Bytes.
  final Uint8List bytes;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Geo Point.
abstract class GeoPointBase extends TlConstructor {
  /// Predicate Geo Point constructor.
  const GeoPointBase._() : super._();
}

/// Geo Point Empty.
///
/// ID: `1117dd5f`.
class GeoPointEmpty extends GeoPointBase {
  /// Geo Point Empty constructor.
  const GeoPointEmpty() : super._();

  /// Deserialize.
  factory GeoPointEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Geo Point.
///
/// ID: `b2a2f663`.
class GeoPoint extends GeoPointBase {
  /// Geo Point constructor.
  const GeoPoint({
    required this.flags,
    required this.long,
    required this.lat,
    required this.accessHash,
    required this.accuracyRadius,
  }) : super._();

  /// Deserialize.
  factory GeoPoint.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Long.
  final double long;

  /// Lat.
  final double lat;

  /// Access Hash.
  final int accessHash;

  /// Accuracy Radius.
  final int? accuracyRadius;

  /// If [accuracyRadius] exists.
  bool get hasAccuracyRadiusField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Auth Sent Code.
abstract class AuthSentCodeBase extends TlConstructor {
  /// Predicate Auth Sent Code constructor.
  const AuthSentCodeBase._() : super._();
}

/// Auth Sent Code.
///
/// ID: `5e002502`.
class AuthSentCode extends AuthSentCodeBase {
  /// Auth Sent Code constructor.
  const AuthSentCode({
    required this.flags,
    required this.type,
    required this.phoneCodeHash,
    required this.nextType,
    required this.timeout,
  }) : super._();

  /// Deserialize.
  factory AuthSentCode.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Type.
  final AuthSentCodeTypeBase type;

  /// Phone Code Hash.
  final String phoneCodeHash;

  /// Next Type.
  final AuthCodeTypeBase? nextType;

  /// If [nextType] exists.
  bool get hasNextTypeField => _bit(flags, 1);

  /// Timeout.
  final int? timeout;

  /// If [timeout] exists.
  bool get hasTimeoutField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Sent Code Success.
///
/// ID: `2390fe44`.
class AuthSentCodeSuccess extends AuthSentCodeBase {
  /// Auth Sent Code Success constructor.
  const AuthSentCodeSuccess({
    required this.authorization,
  }) : super._();

  /// Deserialize.
  factory AuthSentCodeSuccess.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Authorization.
  final AuthAuthorizationBase authorization;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Auth Authorization.
abstract class AuthAuthorizationBase extends TlConstructor {
  /// Predicate Auth Authorization constructor.
  const AuthAuthorizationBase._() : super._();
}

/// Auth Authorization.
///
/// ID: `2ea2c0d4`.
class AuthAuthorization extends AuthAuthorizationBase {
  /// Auth Authorization constructor.
  const AuthAuthorization({
    required this.flags,
    required this.otherwiseReloginDays,
    required this.tmpSessions,
    required this.futureAuthToken,
    required this.user,
  }) : super._();

  /// Deserialize.
  factory AuthAuthorization.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// setup_password_required: bit
  bool get setupPasswordRequired => _bit(flags, 1);

  /// Otherwise Relogin Days.
  final int? otherwiseReloginDays;

  /// If [otherwiseReloginDays] exists.
  bool get hasOtherwiseReloginDaysField => _bit(flags, 1);

  /// Tmp Sessions.
  final int? tmpSessions;

  /// If [tmpSessions] exists.
  bool get hasTmpSessionsField => _bit(flags, 0);

  /// Future Auth Token.
  final Uint8List? futureAuthToken;

  /// If [futureAuthToken] exists.
  bool get hasFutureAuthTokenField => _bit(flags, 2);

  /// User.
  final UserBase user;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Authorization Sign Up Required.
///
/// ID: `44747e9a`.
class AuthAuthorizationSignUpRequired extends AuthAuthorizationBase {
  /// Auth Authorization Sign Up Required constructor.
  const AuthAuthorizationSignUpRequired({
    required this.flags,
    required this.termsOfService,
  }) : super._();

  /// Deserialize.
  factory AuthAuthorizationSignUpRequired.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Terms Of Service.
  final HelpTermsOfServiceBase? termsOfService;

  /// If [termsOfService] exists.
  bool get hasTermsOfServiceField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Auth Exported Authorization.
abstract class AuthExportedAuthorizationBase extends TlConstructor {
  /// Predicate Auth Exported Authorization constructor.
  const AuthExportedAuthorizationBase._() : super._();
}

/// Auth Exported Authorization.
///
/// ID: `b434e2b8`.
class AuthExportedAuthorization extends AuthExportedAuthorizationBase {
  /// Auth Exported Authorization constructor.
  const AuthExportedAuthorization({
    required this.id,
    required this.bytes,
  }) : super._();

  /// Deserialize.
  factory AuthExportedAuthorization.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Bytes.
  final Uint8List bytes;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Notify Peer.
abstract class InputNotifyPeerBase extends TlConstructor {
  /// Predicate Input Notify Peer constructor.
  const InputNotifyPeerBase._() : super._();
}

/// Input Notify Peer.
///
/// ID: `b8bc5b0c`.
class InputNotifyPeer extends InputNotifyPeerBase {
  /// Input Notify Peer constructor.
  const InputNotifyPeer({
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory InputNotifyPeer.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Notify Users.
///
/// ID: `193b4417`.
class InputNotifyUsers extends InputNotifyPeerBase {
  /// Input Notify Users constructor.
  const InputNotifyUsers() : super._();

  /// Deserialize.
  factory InputNotifyUsers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Notify Chats.
///
/// ID: `4a95e84e`.
class InputNotifyChats extends InputNotifyPeerBase {
  /// Input Notify Chats constructor.
  const InputNotifyChats() : super._();

  /// Deserialize.
  factory InputNotifyChats.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Notify Broadcasts.
///
/// ID: `b1db7c7e`.
class InputNotifyBroadcasts extends InputNotifyPeerBase {
  /// Input Notify Broadcasts constructor.
  const InputNotifyBroadcasts() : super._();

  /// Deserialize.
  factory InputNotifyBroadcasts.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Notify Forum Topic.
///
/// ID: `5c467992`.
class InputNotifyForumTopic extends InputNotifyPeerBase {
  /// Input Notify Forum Topic constructor.
  const InputNotifyForumTopic({
    required this.peer,
    required this.topMsgId,
  }) : super._();

  /// Deserialize.
  factory InputNotifyForumTopic.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Top Msg Id.
  final int topMsgId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Peer Notify Settings.
abstract class InputPeerNotifySettingsBase extends TlConstructor {
  /// Predicate Input Peer Notify Settings constructor.
  const InputPeerNotifySettingsBase._() : super._();
}

/// Input Peer Notify Settings.
///
/// ID: `cacb6ae2`.
class InputPeerNotifySettings extends InputPeerNotifySettingsBase {
  /// Input Peer Notify Settings constructor.
  const InputPeerNotifySettings({
    required this.flags,
    required this.showPreviews,
    required this.silent,
    required this.muteUntil,
    required this.sound,
    required this.storiesMuted,
    required this.storiesHideSender,
    required this.storiesSound,
  }) : super._();

  /// Deserialize.
  factory InputPeerNotifySettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Show Previews.
  final bool? showPreviews;

  /// If [showPreviews] exists.
  bool get hasShowPreviewsField => _bit(flags, 0);

  /// Silent.
  final bool? silent;

  /// If [silent] exists.
  bool get hasSilentField => _bit(flags, 1);

  /// Mute Until.
  final int? muteUntil;

  /// If [muteUntil] exists.
  bool get hasMuteUntilField => _bit(flags, 2);

  /// Sound.
  final NotificationSoundBase? sound;

  /// If [sound] exists.
  bool get hasSoundField => _bit(flags, 3);

  /// Stories Muted.
  final bool? storiesMuted;

  /// If [storiesMuted] exists.
  bool get hasStoriesMutedField => _bit(flags, 6);

  /// Stories Hide Sender.
  final bool? storiesHideSender;

  /// If [storiesHideSender] exists.
  bool get hasStoriesHideSenderField => _bit(flags, 7);

  /// Stories Sound.
  final NotificationSoundBase? storiesSound;

  /// If [storiesSound] exists.
  bool get hasStoriesSoundField => _bit(flags, 8);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Peer Notify Settings.
abstract class PeerNotifySettingsBase extends TlConstructor {
  /// Predicate Peer Notify Settings constructor.
  const PeerNotifySettingsBase._() : super._();
}

/// Peer Notify Settings.
///
/// ID: `99622c0c`.
class PeerNotifySettings extends PeerNotifySettingsBase {
  /// Peer Notify Settings constructor.
  const PeerNotifySettings({
    required this.flags,
    required this.showPreviews,
    required this.silent,
    required this.muteUntil,
    required this.iosSound,
    required this.androidSound,
    required this.otherSound,
    required this.storiesMuted,
    required this.storiesHideSender,
    required this.storiesIosSound,
    required this.storiesAndroidSound,
    required this.storiesOtherSound,
  }) : super._();

  /// Deserialize.
  factory PeerNotifySettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Show Previews.
  final bool? showPreviews;

  /// If [showPreviews] exists.
  bool get hasShowPreviewsField => _bit(flags, 0);

  /// Silent.
  final bool? silent;

  /// If [silent] exists.
  bool get hasSilentField => _bit(flags, 1);

  /// Mute Until.
  final int? muteUntil;

  /// If [muteUntil] exists.
  bool get hasMuteUntilField => _bit(flags, 2);

  /// Ios Sound.
  final NotificationSoundBase? iosSound;

  /// If [iosSound] exists.
  bool get hasIosSoundField => _bit(flags, 3);

  /// Android Sound.
  final NotificationSoundBase? androidSound;

  /// If [androidSound] exists.
  bool get hasAndroidSoundField => _bit(flags, 4);

  /// Other Sound.
  final NotificationSoundBase? otherSound;

  /// If [otherSound] exists.
  bool get hasOtherSoundField => _bit(flags, 5);

  /// Stories Muted.
  final bool? storiesMuted;

  /// If [storiesMuted] exists.
  bool get hasStoriesMutedField => _bit(flags, 6);

  /// Stories Hide Sender.
  final bool? storiesHideSender;

  /// If [storiesHideSender] exists.
  bool get hasStoriesHideSenderField => _bit(flags, 7);

  /// Stories Ios Sound.
  final NotificationSoundBase? storiesIosSound;

  /// If [storiesIosSound] exists.
  bool get hasStoriesIosSoundField => _bit(flags, 8);

  /// Stories Android Sound.
  final NotificationSoundBase? storiesAndroidSound;

  /// If [storiesAndroidSound] exists.
  bool get hasStoriesAndroidSoundField => _bit(flags, 9);

  /// Stories Other Sound.
  final NotificationSoundBase? storiesOtherSound;

  /// If [storiesOtherSound] exists.
  bool get hasStoriesOtherSoundField => _bit(flags, 10);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Peer Settings.
abstract class PeerSettingsBase extends TlConstructor {
  /// Predicate Peer Settings constructor.
  const PeerSettingsBase._() : super._();
}

/// Peer Settings.
///
/// ID: `a518110d`.
class PeerSettings extends PeerSettingsBase {
  /// Peer Settings constructor.
  const PeerSettings({
    required this.flags,
    required this.geoDistance,
    required this.requestChatTitle,
    required this.requestChatDate,
  }) : super._();

  /// Deserialize.
  factory PeerSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// report_spam: bit
  bool get reportSpam => _bit(flags, 0);

  /// add_contact: bit
  bool get addContact => _bit(flags, 1);

  /// block_contact: bit
  bool get blockContact => _bit(flags, 2);

  /// share_contact: bit
  bool get shareContact => _bit(flags, 3);

  /// need_contacts_exception: bit
  bool get needContactsException => _bit(flags, 4);

  /// report_geo: bit
  bool get reportGeo => _bit(flags, 5);

  /// autoarchived: bit
  bool get autoarchived => _bit(flags, 7);

  /// invite_members: bit
  bool get inviteMembers => _bit(flags, 8);

  /// request_chat_broadcast: bit
  bool get requestChatBroadcast => _bit(flags, 10);

  /// Geo Distance.
  final int? geoDistance;

  /// If [geoDistance] exists.
  bool get hasGeoDistanceField => _bit(flags, 6);

  /// Request Chat Title.
  final String? requestChatTitle;

  /// If [requestChatTitle] exists.
  bool get hasRequestChatTitleField => _bit(flags, 9);

  /// Request Chat Date.
  final int? requestChatDate;

  /// If [requestChatDate] exists.
  bool get hasRequestChatDateField => _bit(flags, 9);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Wall Paper.
abstract class WallPaperBase extends TlConstructor {
  /// Predicate Wall Paper constructor.
  const WallPaperBase._() : super._();
}

/// Wall Paper.
///
/// ID: `a437c3ed`.
class WallPaper extends WallPaperBase {
  /// Wall Paper constructor.
  const WallPaper({
    required this.id,
    required this.flags,
    required this.accessHash,
    required this.slug,
    required this.document,
    required this.settings,
  }) : super._();

  /// Deserialize.
  factory WallPaper.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Flags.
  final int flags;

  /// creator: bit
  bool get creator => _bit(flags, 0);

  /// default: bit
  bool get ddefault => _bit(flags, 1);

  /// pattern: bit
  bool get pattern => _bit(flags, 3);

  /// dark: bit
  bool get dark => _bit(flags, 4);

  /// Access Hash.
  final int accessHash;

  /// Slug.
  final String slug;

  /// Document.
  final DocumentBase document;

  /// Settings.
  final WallPaperSettingsBase? settings;

  /// If [settings] exists.
  bool get hasSettingsField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Wall Paper No File.
///
/// ID: `e0804116`.
class WallPaperNoFile extends WallPaperBase {
  /// Wall Paper No File constructor.
  const WallPaperNoFile({
    required this.id,
    required this.flags,
    required this.settings,
  }) : super._();

  /// Deserialize.
  factory WallPaperNoFile.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Flags.
  final int flags;

  /// default: bit
  bool get ddefault => _bit(flags, 1);

  /// dark: bit
  bool get dark => _bit(flags, 4);

  /// Settings.
  final WallPaperSettingsBase? settings;

  /// If [settings] exists.
  bool get hasSettingsField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Report Reason.
abstract class ReportReasonBase extends TlConstructor {
  /// Predicate Report Reason constructor.
  const ReportReasonBase._() : super._();
}

/// Input Report Reason Spam.
///
/// ID: `58dbcab8`.
class InputReportReasonSpam extends ReportReasonBase {
  /// Input Report Reason Spam constructor.
  const InputReportReasonSpam() : super._();

  /// Deserialize.
  factory InputReportReasonSpam.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Report Reason Violence.
///
/// ID: `1e22c78d`.
class InputReportReasonViolence extends ReportReasonBase {
  /// Input Report Reason Violence constructor.
  const InputReportReasonViolence() : super._();

  /// Deserialize.
  factory InputReportReasonViolence.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Report Reason Pornography.
///
/// ID: `2e59d922`.
class InputReportReasonPornography extends ReportReasonBase {
  /// Input Report Reason Pornography constructor.
  const InputReportReasonPornography() : super._();

  /// Deserialize.
  factory InputReportReasonPornography.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Report Reason Child Abuse.
///
/// ID: `adf44ee3`.
class InputReportReasonChildAbuse extends ReportReasonBase {
  /// Input Report Reason Child Abuse constructor.
  const InputReportReasonChildAbuse() : super._();

  /// Deserialize.
  factory InputReportReasonChildAbuse.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Report Reason Other.
///
/// ID: `c1e4a2b1`.
class InputReportReasonOther extends ReportReasonBase {
  /// Input Report Reason Other constructor.
  const InputReportReasonOther() : super._();

  /// Deserialize.
  factory InputReportReasonOther.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Report Reason Copyright.
///
/// ID: `9b89f93a`.
class InputReportReasonCopyright extends ReportReasonBase {
  /// Input Report Reason Copyright constructor.
  const InputReportReasonCopyright() : super._();

  /// Deserialize.
  factory InputReportReasonCopyright.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Report Reason Geo Irrelevant.
///
/// ID: `dbd4feed`.
class InputReportReasonGeoIrrelevant extends ReportReasonBase {
  /// Input Report Reason Geo Irrelevant constructor.
  const InputReportReasonGeoIrrelevant() : super._();

  /// Deserialize.
  factory InputReportReasonGeoIrrelevant.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Report Reason Fake.
///
/// ID: `f5ddd6e7`.
class InputReportReasonFake extends ReportReasonBase {
  /// Input Report Reason Fake constructor.
  const InputReportReasonFake() : super._();

  /// Deserialize.
  factory InputReportReasonFake.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Report Reason Illegal Drugs.
///
/// ID: `0a8eb2be`.
class InputReportReasonIllegalDrugs extends ReportReasonBase {
  /// Input Report Reason Illegal Drugs constructor.
  const InputReportReasonIllegalDrugs() : super._();

  /// Deserialize.
  factory InputReportReasonIllegalDrugs.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Report Reason Personal Details.
///
/// ID: `9ec7863d`.
class InputReportReasonPersonalDetails extends ReportReasonBase {
  /// Input Report Reason Personal Details constructor.
  const InputReportReasonPersonalDetails() : super._();

  /// Deserialize.
  factory InputReportReasonPersonalDetails.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate User Full.
abstract class UserFullBase extends TlConstructor {
  /// Predicate User Full constructor.
  const UserFullBase._() : super._();
}

/// User Full.
///
/// ID: `b9b12c6c`.
class UserFull extends UserFullBase {
  /// User Full constructor.
  const UserFull({
    required this.flags,
    required this.id,
    required this.about,
    required this.settings,
    required this.personalPhoto,
    required this.profilePhoto,
    required this.fallbackPhoto,
    required this.notifySettings,
    required this.botInfo,
    required this.pinnedMsgId,
    required this.commonChatsCount,
    required this.folderId,
    required this.ttlPeriod,
    required this.themeEmoticon,
    required this.privateForwardName,
    required this.botGroupAdminRights,
    required this.botBroadcastAdminRights,
    required this.premiumGifts,
    required this.wallpaper,
    required this.stories,
  }) : super._();

  /// Deserialize.
  factory UserFull.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// blocked: bit
  bool get blocked => _bit(flags, 0);

  /// phone_calls_available: bit
  bool get phoneCallsAvailable => _bit(flags, 4);

  /// phone_calls_private: bit
  bool get phoneCallsPrivate => _bit(flags, 5);

  /// can_pin_message: bit
  bool get canPinMessage => _bit(flags, 7);

  /// has_scheduled: bit
  bool get hasScheduled => _bit(flags, 12);

  /// video_calls_available: bit
  bool get videoCallsAvailable => _bit(flags, 13);

  /// voice_messages_forbidden: bit
  bool get voiceMessagesForbidden => _bit(flags, 20);

  /// translations_disabled: bit
  bool get translationsDisabled => _bit(flags, 23);

  /// stories_pinned_available: bit
  bool get storiesPinnedAvailable => _bit(flags, 26);

  /// blocked_my_stories_from: bit
  bool get blockedMyStoriesFrom => _bit(flags, 27);

  /// wallpaper_overridden: bit
  bool get wallpaperOverridden => _bit(flags, 28);

  /// Id.
  final int id;

  /// About.
  final String? about;

  /// If [about] exists.
  bool get hasAboutField => _bit(flags, 1);

  /// Settings.
  final PeerSettingsBase settings;

  /// Personal Photo.
  final PhotoBase? personalPhoto;

  /// If [personalPhoto] exists.
  bool get hasPersonalPhotoField => _bit(flags, 21);

  /// Profile Photo.
  final PhotoBase? profilePhoto;

  /// If [profilePhoto] exists.
  bool get hasProfilePhotoField => _bit(flags, 2);

  /// Fallback Photo.
  final PhotoBase? fallbackPhoto;

  /// If [fallbackPhoto] exists.
  bool get hasFallbackPhotoField => _bit(flags, 22);

  /// Notify Settings.
  final PeerNotifySettingsBase notifySettings;

  /// Bot Info.
  final BotInfoBase? botInfo;

  /// If [botInfo] exists.
  bool get hasBotInfoField => _bit(flags, 3);

  /// Pinned Msg Id.
  final int? pinnedMsgId;

  /// If [pinnedMsgId] exists.
  bool get hasPinnedMsgIdField => _bit(flags, 6);

  /// Common Chats Count.
  final int commonChatsCount;

  /// Folder Id.
  final int? folderId;

  /// If [folderId] exists.
  bool get hasFolderIdField => _bit(flags, 11);

  /// Ttl Period.
  final int? ttlPeriod;

  /// If [ttlPeriod] exists.
  bool get hasTtlPeriodField => _bit(flags, 14);

  /// Theme Emoticon.
  final String? themeEmoticon;

  /// If [themeEmoticon] exists.
  bool get hasThemeEmoticonField => _bit(flags, 15);

  /// Private Forward Name.
  final String? privateForwardName;

  /// If [privateForwardName] exists.
  bool get hasPrivateForwardNameField => _bit(flags, 16);

  /// Bot Group Admin Rights.
  final ChatAdminRightsBase? botGroupAdminRights;

  /// If [botGroupAdminRights] exists.
  bool get hasBotGroupAdminRightsField => _bit(flags, 17);

  /// Bot Broadcast Admin Rights.
  final ChatAdminRightsBase? botBroadcastAdminRights;

  /// If [botBroadcastAdminRights] exists.
  bool get hasBotBroadcastAdminRightsField => _bit(flags, 18);

  /// Premium Gifts.
  final List<PremiumGiftOptionBase>? premiumGifts;

  /// If [premiumGifts] exists.
  bool get hasPremiumGiftsField => _bit(flags, 19);

  /// Wallpaper.
  final WallPaperBase? wallpaper;

  /// If [wallpaper] exists.
  bool get hasWallpaperField => _bit(flags, 24);

  /// Stories.
  final PeerStoriesBase? stories;

  /// If [stories] exists.
  bool get hasStoriesField => _bit(flags, 25);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Contact.
abstract class ContactBase extends TlConstructor {
  /// Predicate Contact constructor.
  const ContactBase._() : super._();
}

/// Contact.
///
/// ID: `145ade0b`.
class Contact extends ContactBase {
  /// Contact constructor.
  const Contact({
    required this.userId,
    required this.mutual,
  }) : super._();

  /// Deserialize.
  factory Contact.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final int userId;

  /// Mutual.
  final bool mutual;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Imported Contact.
abstract class ImportedContactBase extends TlConstructor {
  /// Predicate Imported Contact constructor.
  const ImportedContactBase._() : super._();
}

/// Imported Contact.
///
/// ID: `c13e3c50`.
class ImportedContact extends ImportedContactBase {
  /// Imported Contact constructor.
  const ImportedContact({
    required this.userId,
    required this.clientId,
  }) : super._();

  /// Deserialize.
  factory ImportedContact.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final int userId;

  /// Client Id.
  final int clientId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Contact Status.
abstract class ContactStatusBase extends TlConstructor {
  /// Predicate Contact Status constructor.
  const ContactStatusBase._() : super._();
}

/// Contact Status.
///
/// ID: `16d9703b`.
class ContactStatus extends ContactStatusBase {
  /// Contact Status constructor.
  const ContactStatus({
    required this.userId,
    required this.status,
  }) : super._();

  /// Deserialize.
  factory ContactStatus.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final int userId;

  /// Status.
  final UserStatusBase status;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Contacts Contacts.
abstract class ContactsContactsBase extends TlConstructor {
  /// Predicate Contacts Contacts constructor.
  const ContactsContactsBase._() : super._();
}

/// Contacts Contacts Not Modified.
///
/// ID: `b74ba9d2`.
class ContactsContactsNotModified extends ContactsContactsBase {
  /// Contacts Contacts Not Modified constructor.
  const ContactsContactsNotModified() : super._();

  /// Deserialize.
  factory ContactsContactsNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Contacts.
///
/// ID: `eae87e42`.
class ContactsContacts extends ContactsContactsBase {
  /// Contacts Contacts constructor.
  const ContactsContacts({
    required this.contacts,
    required this.savedCount,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory ContactsContacts.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Contacts.
  final List<ContactBase> contacts;

  /// Saved Count.
  final int savedCount;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Contacts Imported Contacts.
abstract class ContactsImportedContactsBase extends TlConstructor {
  /// Predicate Contacts Imported Contacts constructor.
  const ContactsImportedContactsBase._() : super._();
}

/// Contacts Imported Contacts.
///
/// ID: `77d01c3b`.
class ContactsImportedContacts extends ContactsImportedContactsBase {
  /// Contacts Imported Contacts constructor.
  const ContactsImportedContacts({
    required this.imported,
    required this.popularInvites,
    required this.retryContacts,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory ContactsImportedContacts.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Imported.
  final List<ImportedContactBase> imported;

  /// Popular Invites.
  final List<PopularContactBase> popularInvites;

  /// Retry Contacts.
  final List<int> retryContacts;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Contacts Blocked.
abstract class ContactsBlockedBase extends TlConstructor {
  /// Predicate Contacts Blocked constructor.
  const ContactsBlockedBase._() : super._();
}

/// Contacts Blocked.
///
/// ID: `0ade1591`.
class ContactsBlocked extends ContactsBlockedBase {
  /// Contacts Blocked constructor.
  const ContactsBlocked({
    required this.blocked,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory ContactsBlocked.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Blocked.
  final List<PeerBlockedBase> blocked;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Blocked Slice.
///
/// ID: `e1664194`.
class ContactsBlockedSlice extends ContactsBlockedBase {
  /// Contacts Blocked Slice constructor.
  const ContactsBlockedSlice({
    required this.count,
    required this.blocked,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory ContactsBlockedSlice.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Count.
  final int count;

  /// Blocked.
  final List<PeerBlockedBase> blocked;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Dialogs.
abstract class MessagesDialogsBase extends TlConstructor {
  /// Predicate Messages Dialogs constructor.
  const MessagesDialogsBase._() : super._();
}

/// Messages Dialogs.
///
/// ID: `15ba6c40`.
class MessagesDialogs extends MessagesDialogsBase {
  /// Messages Dialogs constructor.
  const MessagesDialogs({
    required this.dialogs,
    required this.messages,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory MessagesDialogs.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Dialogs.
  final List<DialogBase> dialogs;

  /// Messages.
  final List<MessageBase> messages;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Dialogs Slice.
///
/// ID: `71e094f3`.
class MessagesDialogsSlice extends MessagesDialogsBase {
  /// Messages Dialogs Slice constructor.
  const MessagesDialogsSlice({
    required this.count,
    required this.dialogs,
    required this.messages,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory MessagesDialogsSlice.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Count.
  final int count;

  /// Dialogs.
  final List<DialogBase> dialogs;

  /// Messages.
  final List<MessageBase> messages;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Dialogs Not Modified.
///
/// ID: `f0e3e596`.
class MessagesDialogsNotModified extends MessagesDialogsBase {
  /// Messages Dialogs Not Modified constructor.
  const MessagesDialogsNotModified({
    required this.count,
  }) : super._();

  /// Deserialize.
  factory MessagesDialogsNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Count.
  final int count;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Messages.
abstract class MessagesMessagesBase extends TlConstructor {
  /// Predicate Messages Messages constructor.
  const MessagesMessagesBase._() : super._();
}

/// Messages Messages.
///
/// ID: `8c718e87`.
class MessagesMessages extends MessagesMessagesBase {
  /// Messages Messages constructor.
  const MessagesMessages({
    required this.messages,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory MessagesMessages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Messages.
  final List<MessageBase> messages;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Messages Slice.
///
/// ID: `3a54685e`.
class MessagesMessagesSlice extends MessagesMessagesBase {
  /// Messages Messages Slice constructor.
  const MessagesMessagesSlice({
    required this.flags,
    required this.count,
    required this.nextRate,
    required this.offsetIdOffset,
    required this.messages,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory MessagesMessagesSlice.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// inexact: bit
  bool get inexact => _bit(flags, 1);

  /// Count.
  final int count;

  /// Next Rate.
  final int? nextRate;

  /// If [nextRate] exists.
  bool get hasNextRateField => _bit(flags, 0);

  /// Offset Id Offset.
  final int? offsetIdOffset;

  /// If [offsetIdOffset] exists.
  bool get hasOffsetIdOffsetField => _bit(flags, 2);

  /// Messages.
  final List<MessageBase> messages;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Channel Messages.
///
/// ID: `c776ba4e`.
class MessagesChannelMessages extends MessagesMessagesBase {
  /// Messages Channel Messages constructor.
  const MessagesChannelMessages({
    required this.flags,
    required this.pts,
    required this.count,
    required this.offsetIdOffset,
    required this.messages,
    required this.topics,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory MessagesChannelMessages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// inexact: bit
  bool get inexact => _bit(flags, 1);

  /// Pts.
  final int pts;

  /// Count.
  final int count;

  /// Offset Id Offset.
  final int? offsetIdOffset;

  /// If [offsetIdOffset] exists.
  bool get hasOffsetIdOffsetField => _bit(flags, 2);

  /// Messages.
  final List<MessageBase> messages;

  /// Topics.
  final List<ForumTopicBase> topics;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Messages Not Modified.
///
/// ID: `74535f21`.
class MessagesMessagesNotModified extends MessagesMessagesBase {
  /// Messages Messages Not Modified constructor.
  const MessagesMessagesNotModified({
    required this.count,
  }) : super._();

  /// Deserialize.
  factory MessagesMessagesNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Count.
  final int count;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Chats.
abstract class MessagesChatsBase extends TlConstructor {
  /// Predicate Messages Chats constructor.
  const MessagesChatsBase._() : super._();
}

/// Messages Chats.
///
/// ID: `64ff9fd5`.
class MessagesChats extends MessagesChatsBase {
  /// Messages Chats constructor.
  const MessagesChats({
    required this.chats,
  }) : super._();

  /// Deserialize.
  factory MessagesChats.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chats.
  final List<ChatBase> chats;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Chats Slice.
///
/// ID: `9cd81144`.
class MessagesChatsSlice extends MessagesChatsBase {
  /// Messages Chats Slice constructor.
  const MessagesChatsSlice({
    required this.count,
    required this.chats,
  }) : super._();

  /// Deserialize.
  factory MessagesChatsSlice.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Count.
  final int count;

  /// Chats.
  final List<ChatBase> chats;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Chat Full.
abstract class MessagesChatFullBase extends TlConstructor {
  /// Predicate Messages Chat Full constructor.
  const MessagesChatFullBase._() : super._();
}

/// Messages Chat Full.
///
/// ID: `e5d7d19c`.
class MessagesChatFull extends MessagesChatFullBase {
  /// Messages Chat Full constructor.
  const MessagesChatFull({
    required this.fullChat,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory MessagesChatFull.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Full Chat.
  final ChatFullBase fullChat;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Affected History.
abstract class MessagesAffectedHistoryBase extends TlConstructor {
  /// Predicate Messages Affected History constructor.
  const MessagesAffectedHistoryBase._() : super._();
}

/// Messages Affected History.
///
/// ID: `b45c69d1`.
class MessagesAffectedHistory extends MessagesAffectedHistoryBase {
  /// Messages Affected History constructor.
  const MessagesAffectedHistory({
    required this.pts,
    required this.ptsCount,
    required this.offset,
  }) : super._();

  /// Deserialize.
  factory MessagesAffectedHistory.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Pts.
  final int pts;

  /// Pts Count.
  final int ptsCount;

  /// Offset.
  final int offset;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Filter.
abstract class MessagesFilterBase extends TlConstructor {
  /// Predicate Messages Filter constructor.
  const MessagesFilterBase._() : super._();
}

/// Input Messages Filter Empty.
///
/// ID: `57e2f66c`.
class InputMessagesFilterEmpty extends MessagesFilterBase {
  /// Input Messages Filter Empty constructor.
  const InputMessagesFilterEmpty() : super._();

  /// Deserialize.
  factory InputMessagesFilterEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Messages Filter Photos.
///
/// ID: `9609a51c`.
class InputMessagesFilterPhotos extends MessagesFilterBase {
  /// Input Messages Filter Photos constructor.
  const InputMessagesFilterPhotos() : super._();

  /// Deserialize.
  factory InputMessagesFilterPhotos.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Messages Filter Video.
///
/// ID: `9fc00e65`.
class InputMessagesFilterVideo extends MessagesFilterBase {
  /// Input Messages Filter Video constructor.
  const InputMessagesFilterVideo() : super._();

  /// Deserialize.
  factory InputMessagesFilterVideo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Messages Filter Photo Video.
///
/// ID: `56e9f0e4`.
class InputMessagesFilterPhotoVideo extends MessagesFilterBase {
  /// Input Messages Filter Photo Video constructor.
  const InputMessagesFilterPhotoVideo() : super._();

  /// Deserialize.
  factory InputMessagesFilterPhotoVideo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Messages Filter Document.
///
/// ID: `9eddf188`.
class InputMessagesFilterDocument extends MessagesFilterBase {
  /// Input Messages Filter Document constructor.
  const InputMessagesFilterDocument() : super._();

  /// Deserialize.
  factory InputMessagesFilterDocument.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Messages Filter Url.
///
/// ID: `7ef0dd87`.
class InputMessagesFilterUrl extends MessagesFilterBase {
  /// Input Messages Filter Url constructor.
  const InputMessagesFilterUrl() : super._();

  /// Deserialize.
  factory InputMessagesFilterUrl.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Messages Filter Gif.
///
/// ID: `ffc86587`.
class InputMessagesFilterGif extends MessagesFilterBase {
  /// Input Messages Filter Gif constructor.
  const InputMessagesFilterGif() : super._();

  /// Deserialize.
  factory InputMessagesFilterGif.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Messages Filter Voice.
///
/// ID: `50f5c392`.
class InputMessagesFilterVoice extends MessagesFilterBase {
  /// Input Messages Filter Voice constructor.
  const InputMessagesFilterVoice() : super._();

  /// Deserialize.
  factory InputMessagesFilterVoice.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Messages Filter Music.
///
/// ID: `3751b49e`.
class InputMessagesFilterMusic extends MessagesFilterBase {
  /// Input Messages Filter Music constructor.
  const InputMessagesFilterMusic() : super._();

  /// Deserialize.
  factory InputMessagesFilterMusic.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Messages Filter Chat Photos.
///
/// ID: `3a20ecb8`.
class InputMessagesFilterChatPhotos extends MessagesFilterBase {
  /// Input Messages Filter Chat Photos constructor.
  const InputMessagesFilterChatPhotos() : super._();

  /// Deserialize.
  factory InputMessagesFilterChatPhotos.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Messages Filter Phone Calls.
///
/// ID: `80c99768`.
class InputMessagesFilterPhoneCalls extends MessagesFilterBase {
  /// Input Messages Filter Phone Calls constructor.
  const InputMessagesFilterPhoneCalls({
    required this.flags,
  }) : super._();

  /// Deserialize.
  factory InputMessagesFilterPhoneCalls.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// missed: bit
  bool get missed => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Messages Filter Round Voice.
///
/// ID: `7a7c17a4`.
class InputMessagesFilterRoundVoice extends MessagesFilterBase {
  /// Input Messages Filter Round Voice constructor.
  const InputMessagesFilterRoundVoice() : super._();

  /// Deserialize.
  factory InputMessagesFilterRoundVoice.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Messages Filter Round Video.
///
/// ID: `b549da53`.
class InputMessagesFilterRoundVideo extends MessagesFilterBase {
  /// Input Messages Filter Round Video constructor.
  const InputMessagesFilterRoundVideo() : super._();

  /// Deserialize.
  factory InputMessagesFilterRoundVideo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Messages Filter My Mentions.
///
/// ID: `c1f8e69a`.
class InputMessagesFilterMyMentions extends MessagesFilterBase {
  /// Input Messages Filter My Mentions constructor.
  const InputMessagesFilterMyMentions() : super._();

  /// Deserialize.
  factory InputMessagesFilterMyMentions.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Messages Filter Geo.
///
/// ID: `e7026d0d`.
class InputMessagesFilterGeo extends MessagesFilterBase {
  /// Input Messages Filter Geo constructor.
  const InputMessagesFilterGeo() : super._();

  /// Deserialize.
  factory InputMessagesFilterGeo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Messages Filter Contacts.
///
/// ID: `e062db83`.
class InputMessagesFilterContacts extends MessagesFilterBase {
  /// Input Messages Filter Contacts constructor.
  const InputMessagesFilterContacts() : super._();

  /// Deserialize.
  factory InputMessagesFilterContacts.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Messages Filter Pinned.
///
/// ID: `1bb00451`.
class InputMessagesFilterPinned extends MessagesFilterBase {
  /// Input Messages Filter Pinned constructor.
  const InputMessagesFilterPinned() : super._();

  /// Deserialize.
  factory InputMessagesFilterPinned.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Update.
abstract class UpdateBase extends TlConstructor {
  /// Predicate Update constructor.
  const UpdateBase._() : super._();
}

/// Update New Message.
///
/// ID: `1f2b0afd`.
class UpdateNewMessage extends UpdateBase {
  /// Update New Message constructor.
  const UpdateNewMessage({
    required this.message,
    required this.pts,
    required this.ptsCount,
  }) : super._();

  /// Deserialize.
  factory UpdateNewMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Message.
  final MessageBase message;

  /// Pts.
  final int pts;

  /// Pts Count.
  final int ptsCount;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Message I D.
///
/// ID: `4e90bfd6`.
class UpdateMessageID extends UpdateBase {
  /// Update Message I D constructor.
  const UpdateMessageID({
    required this.id,
    required this.randomId,
  }) : super._();

  /// Deserialize.
  factory UpdateMessageID.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Random Id.
  final int randomId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Delete Messages.
///
/// ID: `a20db0e5`.
class UpdateDeleteMessages extends UpdateBase {
  /// Update Delete Messages constructor.
  const UpdateDeleteMessages({
    required this.messages,
    required this.pts,
    required this.ptsCount,
  }) : super._();

  /// Deserialize.
  factory UpdateDeleteMessages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Messages.
  final List<int> messages;

  /// Pts.
  final int pts;

  /// Pts Count.
  final int ptsCount;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update User Typing.
///
/// ID: `c01e857f`.
class UpdateUserTyping extends UpdateBase {
  /// Update User Typing constructor.
  const UpdateUserTyping({
    required this.userId,
    required this.action,
  }) : super._();

  /// Deserialize.
  factory UpdateUserTyping.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final int userId;

  /// Action.
  final SendMessageActionBase action;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Chat User Typing.
///
/// ID: `83487af0`.
class UpdateChatUserTyping extends UpdateBase {
  /// Update Chat User Typing constructor.
  const UpdateChatUserTyping({
    required this.chatId,
    required this.fromId,
    required this.action,
  }) : super._();

  /// Deserialize.
  factory UpdateChatUserTyping.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chat Id.
  final int chatId;

  /// From Id.
  final PeerBase fromId;

  /// Action.
  final SendMessageActionBase action;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Chat Participants.
///
/// ID: `07761198`.
class UpdateChatParticipants extends UpdateBase {
  /// Update Chat Participants constructor.
  const UpdateChatParticipants({
    required this.participants,
  }) : super._();

  /// Deserialize.
  factory UpdateChatParticipants.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Participants.
  final ChatParticipantsBase participants;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update User Status.
///
/// ID: `e5bdf8de`.
class UpdateUserStatus extends UpdateBase {
  /// Update User Status constructor.
  const UpdateUserStatus({
    required this.userId,
    required this.status,
  }) : super._();

  /// Deserialize.
  factory UpdateUserStatus.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final int userId;

  /// Status.
  final UserStatusBase status;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update User Name.
///
/// ID: `a7848924`.
class UpdateUserName extends UpdateBase {
  /// Update User Name constructor.
  const UpdateUserName({
    required this.userId,
    required this.firstName,
    required this.lastName,
    required this.usernames,
  }) : super._();

  /// Deserialize.
  factory UpdateUserName.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final int userId;

  /// First Name.
  final String firstName;

  /// Last Name.
  final String lastName;

  /// Usernames.
  final List<UsernameBase> usernames;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update New Authorization.
///
/// ID: `8951abef`.
class UpdateNewAuthorization extends UpdateBase {
  /// Update New Authorization constructor.
  const UpdateNewAuthorization({
    required this.flags,
    required this.hash,
    required this.date,
    required this.device,
    required this.location,
  }) : super._();

  /// Deserialize.
  factory UpdateNewAuthorization.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// unconfirmed: bit
  bool get unconfirmed => _bit(flags, 0);

  /// Hash.
  final int hash;

  /// Date.
  final int? date;

  /// If [date] exists.
  bool get hasDateField => _bit(flags, 0);

  /// Device.
  final String? device;

  /// If [device] exists.
  bool get hasDeviceField => _bit(flags, 0);

  /// Location.
  final String? location;

  /// If [location] exists.
  bool get hasLocationField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update New Encrypted Message.
///
/// ID: `12bcbd9a`.
class UpdateNewEncryptedMessage extends UpdateBase {
  /// Update New Encrypted Message constructor.
  const UpdateNewEncryptedMessage({
    required this.message,
    required this.qts,
  }) : super._();

  /// Deserialize.
  factory UpdateNewEncryptedMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Message.
  final EncryptedMessageBase message;

  /// Qts.
  final int qts;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Encrypted Chat Typing.
///
/// ID: `1710f156`.
class UpdateEncryptedChatTyping extends UpdateBase {
  /// Update Encrypted Chat Typing constructor.
  const UpdateEncryptedChatTyping({
    required this.chatId,
  }) : super._();

  /// Deserialize.
  factory UpdateEncryptedChatTyping.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chat Id.
  final int chatId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Encryption.
///
/// ID: `b4a2e88d`.
class UpdateEncryption extends UpdateBase {
  /// Update Encryption constructor.
  const UpdateEncryption({
    required this.chat,
    required this.date,
  }) : super._();

  /// Deserialize.
  factory UpdateEncryption.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chat.
  final EncryptedChatBase chat;

  /// Date.
  final int date;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Encrypted Messages Read.
///
/// ID: `38fe25b7`.
class UpdateEncryptedMessagesRead extends UpdateBase {
  /// Update Encrypted Messages Read constructor.
  const UpdateEncryptedMessagesRead({
    required this.chatId,
    required this.maxDate,
    required this.date,
  }) : super._();

  /// Deserialize.
  factory UpdateEncryptedMessagesRead.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chat Id.
  final int chatId;

  /// Max Date.
  final int maxDate;

  /// Date.
  final int date;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Chat Participant Add.
///
/// ID: `3dda5451`.
class UpdateChatParticipantAdd extends UpdateBase {
  /// Update Chat Participant Add constructor.
  const UpdateChatParticipantAdd({
    required this.chatId,
    required this.userId,
    required this.inviterId,
    required this.date,
    required this.version,
  }) : super._();

  /// Deserialize.
  factory UpdateChatParticipantAdd.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chat Id.
  final int chatId;

  /// User Id.
  final int userId;

  /// Inviter Id.
  final int inviterId;

  /// Date.
  final int date;

  /// Version.
  final int version;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Chat Participant Delete.
///
/// ID: `e32f3d77`.
class UpdateChatParticipantDelete extends UpdateBase {
  /// Update Chat Participant Delete constructor.
  const UpdateChatParticipantDelete({
    required this.chatId,
    required this.userId,
    required this.version,
  }) : super._();

  /// Deserialize.
  factory UpdateChatParticipantDelete.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chat Id.
  final int chatId;

  /// User Id.
  final int userId;

  /// Version.
  final int version;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Dc Options.
///
/// ID: `8e5e9873`.
class UpdateDcOptions extends UpdateBase {
  /// Update Dc Options constructor.
  const UpdateDcOptions({
    required this.dcOptions,
  }) : super._();

  /// Deserialize.
  factory UpdateDcOptions.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Dc Options.
  final List<DcOptionBase> dcOptions;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Notify Settings.
///
/// ID: `bec268ef`.
class UpdateNotifySettings extends UpdateBase {
  /// Update Notify Settings constructor.
  const UpdateNotifySettings({
    required this.peer,
    required this.notifySettings,
  }) : super._();

  /// Deserialize.
  factory UpdateNotifySettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final NotifyPeerBase peer;

  /// Notify Settings.
  final PeerNotifySettingsBase notifySettings;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Service Notification.
///
/// ID: `ebe46819`.
class UpdateServiceNotification extends UpdateBase {
  /// Update Service Notification constructor.
  const UpdateServiceNotification({
    required this.flags,
    required this.inboxDate,
    required this.type,
    required this.message,
    required this.media,
    required this.entities,
  }) : super._();

  /// Deserialize.
  factory UpdateServiceNotification.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// popup: bit
  bool get popup => _bit(flags, 0);

  /// invert_media: bit
  bool get invertMedia => _bit(flags, 2);

  /// Inbox Date.
  final int? inboxDate;

  /// If [inboxDate] exists.
  bool get hasInboxDateField => _bit(flags, 1);

  /// Type.
  final String type;

  /// Message.
  final String message;

  /// Media.
  final MessageMediaBase media;

  /// Entities.
  final List<MessageEntityBase> entities;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Privacy.
///
/// ID: `ee3b272a`.
class UpdatePrivacy extends UpdateBase {
  /// Update Privacy constructor.
  const UpdatePrivacy({
    required this.key,
    required this.rules,
  }) : super._();

  /// Deserialize.
  factory UpdatePrivacy.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Key.
  final PrivacyKeyBase key;

  /// Rules.
  final List<PrivacyRuleBase> rules;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update User Phone.
///
/// ID: `05492a13`.
class UpdateUserPhone extends UpdateBase {
  /// Update User Phone constructor.
  const UpdateUserPhone({
    required this.userId,
    required this.phone,
  }) : super._();

  /// Deserialize.
  factory UpdateUserPhone.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final int userId;

  /// Phone.
  final String phone;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Read History Inbox.
///
/// ID: `9c974fdf`.
class UpdateReadHistoryInbox extends UpdateBase {
  /// Update Read History Inbox constructor.
  const UpdateReadHistoryInbox({
    required this.flags,
    required this.folderId,
    required this.peer,
    required this.maxId,
    required this.stillUnreadCount,
    required this.pts,
    required this.ptsCount,
  }) : super._();

  /// Deserialize.
  factory UpdateReadHistoryInbox.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Folder Id.
  final int? folderId;

  /// If [folderId] exists.
  bool get hasFolderIdField => _bit(flags, 0);

  /// Peer.
  final PeerBase peer;

  /// Max Id.
  final int maxId;

  /// Still Unread Count.
  final int stillUnreadCount;

  /// Pts.
  final int pts;

  /// Pts Count.
  final int ptsCount;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Read History Outbox.
///
/// ID: `2f2f21bf`.
class UpdateReadHistoryOutbox extends UpdateBase {
  /// Update Read History Outbox constructor.
  const UpdateReadHistoryOutbox({
    required this.peer,
    required this.maxId,
    required this.pts,
    required this.ptsCount,
  }) : super._();

  /// Deserialize.
  factory UpdateReadHistoryOutbox.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Max Id.
  final int maxId;

  /// Pts.
  final int pts;

  /// Pts Count.
  final int ptsCount;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Web Page.
///
/// ID: `7f891213`.
class UpdateWebPage extends UpdateBase {
  /// Update Web Page constructor.
  const UpdateWebPage({
    required this.webpage,
    required this.pts,
    required this.ptsCount,
  }) : super._();

  /// Deserialize.
  factory UpdateWebPage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Webpage.
  final WebPageBase webpage;

  /// Pts.
  final int pts;

  /// Pts Count.
  final int ptsCount;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Read Messages Contents.
///
/// ID: `f8227181`.
class UpdateReadMessagesContents extends UpdateBase {
  /// Update Read Messages Contents constructor.
  const UpdateReadMessagesContents({
    required this.flags,
    required this.messages,
    required this.pts,
    required this.ptsCount,
    required this.date,
  }) : super._();

  /// Deserialize.
  factory UpdateReadMessagesContents.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Messages.
  final List<int> messages;

  /// Pts.
  final int pts;

  /// Pts Count.
  final int ptsCount;

  /// Date.
  final int? date;

  /// If [date] exists.
  bool get hasDateField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Channel Too Long.
///
/// ID: `108d941f`.
class UpdateChannelTooLong extends UpdateBase {
  /// Update Channel Too Long constructor.
  const UpdateChannelTooLong({
    required this.flags,
    required this.channelId,
    required this.pts,
  }) : super._();

  /// Deserialize.
  factory UpdateChannelTooLong.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Channel Id.
  final int channelId;

  /// Pts.
  final int? pts;

  /// If [pts] exists.
  bool get hasPtsField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Channel.
///
/// ID: `635b4c09`.
class UpdateChannel extends UpdateBase {
  /// Update Channel constructor.
  const UpdateChannel({
    required this.channelId,
  }) : super._();

  /// Deserialize.
  factory UpdateChannel.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel Id.
  final int channelId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update New Channel Message.
///
/// ID: `62ba04d9`.
class UpdateNewChannelMessage extends UpdateBase {
  /// Update New Channel Message constructor.
  const UpdateNewChannelMessage({
    required this.message,
    required this.pts,
    required this.ptsCount,
  }) : super._();

  /// Deserialize.
  factory UpdateNewChannelMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Message.
  final MessageBase message;

  /// Pts.
  final int pts;

  /// Pts Count.
  final int ptsCount;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Read Channel Inbox.
///
/// ID: `922e6e10`.
class UpdateReadChannelInbox extends UpdateBase {
  /// Update Read Channel Inbox constructor.
  const UpdateReadChannelInbox({
    required this.flags,
    required this.folderId,
    required this.channelId,
    required this.maxId,
    required this.stillUnreadCount,
    required this.pts,
  }) : super._();

  /// Deserialize.
  factory UpdateReadChannelInbox.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Folder Id.
  final int? folderId;

  /// If [folderId] exists.
  bool get hasFolderIdField => _bit(flags, 0);

  /// Channel Id.
  final int channelId;

  /// Max Id.
  final int maxId;

  /// Still Unread Count.
  final int stillUnreadCount;

  /// Pts.
  final int pts;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Delete Channel Messages.
///
/// ID: `c32d5b12`.
class UpdateDeleteChannelMessages extends UpdateBase {
  /// Update Delete Channel Messages constructor.
  const UpdateDeleteChannelMessages({
    required this.channelId,
    required this.messages,
    required this.pts,
    required this.ptsCount,
  }) : super._();

  /// Deserialize.
  factory UpdateDeleteChannelMessages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel Id.
  final int channelId;

  /// Messages.
  final List<int> messages;

  /// Pts.
  final int pts;

  /// Pts Count.
  final int ptsCount;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Channel Message Views.
///
/// ID: `f226ac08`.
class UpdateChannelMessageViews extends UpdateBase {
  /// Update Channel Message Views constructor.
  const UpdateChannelMessageViews({
    required this.channelId,
    required this.id,
    required this.views,
  }) : super._();

  /// Deserialize.
  factory UpdateChannelMessageViews.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel Id.
  final int channelId;

  /// Id.
  final int id;

  /// Views.
  final int views;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Chat Participant Admin.
///
/// ID: `d7ca61a2`.
class UpdateChatParticipantAdmin extends UpdateBase {
  /// Update Chat Participant Admin constructor.
  const UpdateChatParticipantAdmin({
    required this.chatId,
    required this.userId,
    required this.isAdmin,
    required this.version,
  }) : super._();

  /// Deserialize.
  factory UpdateChatParticipantAdmin.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chat Id.
  final int chatId;

  /// User Id.
  final int userId;

  /// Is Admin.
  final bool isAdmin;

  /// Version.
  final int version;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update New Sticker Set.
///
/// ID: `688a30aa`.
class UpdateNewStickerSet extends UpdateBase {
  /// Update New Sticker Set constructor.
  const UpdateNewStickerSet({
    required this.stickerset,
  }) : super._();

  /// Deserialize.
  factory UpdateNewStickerSet.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Stickerset.
  final MessagesStickerSetBase stickerset;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Sticker Sets Order.
///
/// ID: `0bb2d201`.
class UpdateStickerSetsOrder extends UpdateBase {
  /// Update Sticker Sets Order constructor.
  const UpdateStickerSetsOrder({
    required this.flags,
    required this.order,
  }) : super._();

  /// Deserialize.
  factory UpdateStickerSetsOrder.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// masks: bit
  bool get masks => _bit(flags, 0);

  /// emojis: bit
  bool get emojis => _bit(flags, 1);

  /// Order.
  final List<int> order;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Sticker Sets.
///
/// ID: `31c24808`.
class UpdateStickerSets extends UpdateBase {
  /// Update Sticker Sets constructor.
  const UpdateStickerSets({
    required this.flags,
  }) : super._();

  /// Deserialize.
  factory UpdateStickerSets.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// masks: bit
  bool get masks => _bit(flags, 0);

  /// emojis: bit
  bool get emojis => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Saved Gifs.
///
/// ID: `9375341e`.
class UpdateSavedGifs extends UpdateBase {
  /// Update Saved Gifs constructor.
  const UpdateSavedGifs() : super._();

  /// Deserialize.
  factory UpdateSavedGifs.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Bot Inline Query.
///
/// ID: `496f379c`.
class UpdateBotInlineQuery extends UpdateBase {
  /// Update Bot Inline Query constructor.
  const UpdateBotInlineQuery({
    required this.flags,
    required this.queryId,
    required this.userId,
    required this.query,
    required this.geo,
    required this.peerType,
    required this.offset,
  }) : super._();

  /// Deserialize.
  factory UpdateBotInlineQuery.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Query Id.
  final int queryId;

  /// User Id.
  final int userId;

  /// Query.
  final String query;

  /// Geo.
  final GeoPointBase? geo;

  /// If [geo] exists.
  bool get hasGeoField => _bit(flags, 0);

  /// Peer Type.
  final InlineQueryPeerTypeBase? peerType;

  /// If [peerType] exists.
  bool get hasPeerTypeField => _bit(flags, 1);

  /// Offset.
  final String offset;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Bot Inline Send.
///
/// ID: `12f12a07`.
class UpdateBotInlineSend extends UpdateBase {
  /// Update Bot Inline Send constructor.
  const UpdateBotInlineSend({
    required this.flags,
    required this.userId,
    required this.query,
    required this.geo,
    required this.id,
    required this.msgId,
  }) : super._();

  /// Deserialize.
  factory UpdateBotInlineSend.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// User Id.
  final int userId;

  /// Query.
  final String query;

  /// Geo.
  final GeoPointBase? geo;

  /// If [geo] exists.
  bool get hasGeoField => _bit(flags, 0);

  /// Id.
  final String id;

  /// Msg Id.
  final InputBotInlineMessageIDBase? msgId;

  /// If [msgId] exists.
  bool get hasMsgIdField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Edit Channel Message.
///
/// ID: `1b3f4df7`.
class UpdateEditChannelMessage extends UpdateBase {
  /// Update Edit Channel Message constructor.
  const UpdateEditChannelMessage({
    required this.message,
    required this.pts,
    required this.ptsCount,
  }) : super._();

  /// Deserialize.
  factory UpdateEditChannelMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Message.
  final MessageBase message;

  /// Pts.
  final int pts;

  /// Pts Count.
  final int ptsCount;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Bot Callback Query.
///
/// ID: `b9cfc48d`.
class UpdateBotCallbackQuery extends UpdateBase {
  /// Update Bot Callback Query constructor.
  const UpdateBotCallbackQuery({
    required this.flags,
    required this.queryId,
    required this.userId,
    required this.peer,
    required this.msgId,
    required this.chatInstance,
    required this.data,
    required this.gameShortName,
  }) : super._();

  /// Deserialize.
  factory UpdateBotCallbackQuery.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Query Id.
  final int queryId;

  /// User Id.
  final int userId;

  /// Peer.
  final PeerBase peer;

  /// Msg Id.
  final int msgId;

  /// Chat Instance.
  final int chatInstance;

  /// Data.
  final Uint8List? data;

  /// If [data] exists.
  bool get hasDataField => _bit(flags, 0);

  /// Game Short Name.
  final String? gameShortName;

  /// If [gameShortName] exists.
  bool get hasGameShortNameField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Edit Message.
///
/// ID: `e40370a3`.
class UpdateEditMessage extends UpdateBase {
  /// Update Edit Message constructor.
  const UpdateEditMessage({
    required this.message,
    required this.pts,
    required this.ptsCount,
  }) : super._();

  /// Deserialize.
  factory UpdateEditMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Message.
  final MessageBase message;

  /// Pts.
  final int pts;

  /// Pts Count.
  final int ptsCount;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Inline Bot Callback Query.
///
/// ID: `691e9052`.
class UpdateInlineBotCallbackQuery extends UpdateBase {
  /// Update Inline Bot Callback Query constructor.
  const UpdateInlineBotCallbackQuery({
    required this.flags,
    required this.queryId,
    required this.userId,
    required this.msgId,
    required this.chatInstance,
    required this.data,
    required this.gameShortName,
  }) : super._();

  /// Deserialize.
  factory UpdateInlineBotCallbackQuery.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Query Id.
  final int queryId;

  /// User Id.
  final int userId;

  /// Msg Id.
  final InputBotInlineMessageIDBase msgId;

  /// Chat Instance.
  final int chatInstance;

  /// Data.
  final Uint8List? data;

  /// If [data] exists.
  bool get hasDataField => _bit(flags, 0);

  /// Game Short Name.
  final String? gameShortName;

  /// If [gameShortName] exists.
  bool get hasGameShortNameField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Read Channel Outbox.
///
/// ID: `b75f99a9`.
class UpdateReadChannelOutbox extends UpdateBase {
  /// Update Read Channel Outbox constructor.
  const UpdateReadChannelOutbox({
    required this.channelId,
    required this.maxId,
  }) : super._();

  /// Deserialize.
  factory UpdateReadChannelOutbox.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel Id.
  final int channelId;

  /// Max Id.
  final int maxId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Draft Message.
///
/// ID: `1b49ec6d`.
class UpdateDraftMessage extends UpdateBase {
  /// Update Draft Message constructor.
  const UpdateDraftMessage({
    required this.flags,
    required this.peer,
    required this.topMsgId,
    required this.draft,
  }) : super._();

  /// Deserialize.
  factory UpdateDraftMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Peer.
  final PeerBase peer;

  /// Top Msg Id.
  final int? topMsgId;

  /// If [topMsgId] exists.
  bool get hasTopMsgIdField => _bit(flags, 0);

  /// Draft.
  final DraftMessageBase draft;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Read Featured Stickers.
///
/// ID: `571d2742`.
class UpdateReadFeaturedStickers extends UpdateBase {
  /// Update Read Featured Stickers constructor.
  const UpdateReadFeaturedStickers() : super._();

  /// Deserialize.
  factory UpdateReadFeaturedStickers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Recent Stickers.
///
/// ID: `9a422c20`.
class UpdateRecentStickers extends UpdateBase {
  /// Update Recent Stickers constructor.
  const UpdateRecentStickers() : super._();

  /// Deserialize.
  factory UpdateRecentStickers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Config.
///
/// ID: `a229dd06`.
class UpdateConfig extends UpdateBase {
  /// Update Config constructor.
  const UpdateConfig() : super._();

  /// Deserialize.
  factory UpdateConfig.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Pts Changed.
///
/// ID: `3354678f`.
class UpdatePtsChanged extends UpdateBase {
  /// Update Pts Changed constructor.
  const UpdatePtsChanged() : super._();

  /// Deserialize.
  factory UpdatePtsChanged.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Channel Web Page.
///
/// ID: `2f2ba99f`.
class UpdateChannelWebPage extends UpdateBase {
  /// Update Channel Web Page constructor.
  const UpdateChannelWebPage({
    required this.channelId,
    required this.webpage,
    required this.pts,
    required this.ptsCount,
  }) : super._();

  /// Deserialize.
  factory UpdateChannelWebPage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel Id.
  final int channelId;

  /// Webpage.
  final WebPageBase webpage;

  /// Pts.
  final int pts;

  /// Pts Count.
  final int ptsCount;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Dialog Pinned.
///
/// ID: `6e6fe51c`.
class UpdateDialogPinned extends UpdateBase {
  /// Update Dialog Pinned constructor.
  const UpdateDialogPinned({
    required this.flags,
    required this.folderId,
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory UpdateDialogPinned.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// pinned: bit
  bool get pinned => _bit(flags, 0);

  /// Folder Id.
  final int? folderId;

  /// If [folderId] exists.
  bool get hasFolderIdField => _bit(flags, 1);

  /// Peer.
  final DialogPeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Pinned Dialogs.
///
/// ID: `fa0f3ca2`.
class UpdatePinnedDialogs extends UpdateBase {
  /// Update Pinned Dialogs constructor.
  const UpdatePinnedDialogs({
    required this.flags,
    required this.folderId,
    required this.order,
  }) : super._();

  /// Deserialize.
  factory UpdatePinnedDialogs.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Folder Id.
  final int? folderId;

  /// If [folderId] exists.
  bool get hasFolderIdField => _bit(flags, 1);

  /// Order.
  final List<DialogPeerBase>? order;

  /// If [order] exists.
  bool get hasOrderField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Bot Webhook J S O N.
///
/// ID: `8317c0c3`.
class UpdateBotWebhookJSON extends UpdateBase {
  /// Update Bot Webhook J S O N constructor.
  const UpdateBotWebhookJSON({
    required this.data,
  }) : super._();

  /// Deserialize.
  factory UpdateBotWebhookJSON.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Data.
  final DataJSONBase data;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Bot Webhook J S O N Query.
///
/// ID: `9b9240a6`.
class UpdateBotWebhookJSONQuery extends UpdateBase {
  /// Update Bot Webhook J S O N Query constructor.
  const UpdateBotWebhookJSONQuery({
    required this.queryId,
    required this.data,
    required this.timeout,
  }) : super._();

  /// Deserialize.
  factory UpdateBotWebhookJSONQuery.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Query Id.
  final int queryId;

  /// Data.
  final DataJSONBase data;

  /// Timeout.
  final int timeout;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Bot Shipping Query.
///
/// ID: `b5aefd7d`.
class UpdateBotShippingQuery extends UpdateBase {
  /// Update Bot Shipping Query constructor.
  const UpdateBotShippingQuery({
    required this.queryId,
    required this.userId,
    required this.payload,
    required this.shippingAddress,
  }) : super._();

  /// Deserialize.
  factory UpdateBotShippingQuery.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Query Id.
  final int queryId;

  /// User Id.
  final int userId;

  /// Payload.
  final Uint8List payload;

  /// Shipping Address.
  final PostAddressBase shippingAddress;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Bot Precheckout Query.
///
/// ID: `8caa9a96`.
class UpdateBotPrecheckoutQuery extends UpdateBase {
  /// Update Bot Precheckout Query constructor.
  const UpdateBotPrecheckoutQuery({
    required this.flags,
    required this.queryId,
    required this.userId,
    required this.payload,
    required this.info,
    required this.shippingOptionId,
    required this.currency,
    required this.totalAmount,
  }) : super._();

  /// Deserialize.
  factory UpdateBotPrecheckoutQuery.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Query Id.
  final int queryId;

  /// User Id.
  final int userId;

  /// Payload.
  final Uint8List payload;

  /// Info.
  final PaymentRequestedInfoBase? info;

  /// If [info] exists.
  bool get hasInfoField => _bit(flags, 0);

  /// Shipping Option Id.
  final String? shippingOptionId;

  /// If [shippingOptionId] exists.
  bool get hasShippingOptionIdField => _bit(flags, 1);

  /// Currency.
  final String currency;

  /// Total Amount.
  final int totalAmount;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Phone Call.
///
/// ID: `ab0f6b1e`.
class UpdatePhoneCall extends UpdateBase {
  /// Update Phone Call constructor.
  const UpdatePhoneCall({
    required this.phoneCall,
  }) : super._();

  /// Deserialize.
  factory UpdatePhoneCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Phone Call.
  final PhoneCallBase phoneCall;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Lang Pack Too Long.
///
/// ID: `46560264`.
class UpdateLangPackTooLong extends UpdateBase {
  /// Update Lang Pack Too Long constructor.
  const UpdateLangPackTooLong({
    required this.langCode,
  }) : super._();

  /// Deserialize.
  factory UpdateLangPackTooLong.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Lang Code.
  final String langCode;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Lang Pack.
///
/// ID: `56022f4d`.
class UpdateLangPack extends UpdateBase {
  /// Update Lang Pack constructor.
  const UpdateLangPack({
    required this.difference,
  }) : super._();

  /// Deserialize.
  factory UpdateLangPack.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Difference.
  final LangPackDifferenceBase difference;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Faved Stickers.
///
/// ID: `e511996d`.
class UpdateFavedStickers extends UpdateBase {
  /// Update Faved Stickers constructor.
  const UpdateFavedStickers() : super._();

  /// Deserialize.
  factory UpdateFavedStickers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Channel Read Messages Contents.
///
/// ID: `ea29055d`.
class UpdateChannelReadMessagesContents extends UpdateBase {
  /// Update Channel Read Messages Contents constructor.
  const UpdateChannelReadMessagesContents({
    required this.flags,
    required this.channelId,
    required this.topMsgId,
    required this.messages,
  }) : super._();

  /// Deserialize.
  factory UpdateChannelReadMessagesContents.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Channel Id.
  final int channelId;

  /// Top Msg Id.
  final int? topMsgId;

  /// If [topMsgId] exists.
  bool get hasTopMsgIdField => _bit(flags, 0);

  /// Messages.
  final List<int> messages;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Contacts Reset.
///
/// ID: `7084a7be`.
class UpdateContactsReset extends UpdateBase {
  /// Update Contacts Reset constructor.
  const UpdateContactsReset() : super._();

  /// Deserialize.
  factory UpdateContactsReset.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Channel Available Messages.
///
/// ID: `b23fc698`.
class UpdateChannelAvailableMessages extends UpdateBase {
  /// Update Channel Available Messages constructor.
  const UpdateChannelAvailableMessages({
    required this.channelId,
    required this.availableMinId,
  }) : super._();

  /// Deserialize.
  factory UpdateChannelAvailableMessages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel Id.
  final int channelId;

  /// Available Min Id.
  final int availableMinId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Dialog Unread Mark.
///
/// ID: `e16459c3`.
class UpdateDialogUnreadMark extends UpdateBase {
  /// Update Dialog Unread Mark constructor.
  const UpdateDialogUnreadMark({
    required this.flags,
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory UpdateDialogUnreadMark.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// unread: bit
  bool get unread => _bit(flags, 0);

  /// Peer.
  final DialogPeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Message Poll.
///
/// ID: `aca1657b`.
class UpdateMessagePoll extends UpdateBase {
  /// Update Message Poll constructor.
  const UpdateMessagePoll({
    required this.flags,
    required this.pollId,
    required this.poll,
    required this.results,
  }) : super._();

  /// Deserialize.
  factory UpdateMessagePoll.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Poll Id.
  final int pollId;

  /// Poll.
  final PollBase? poll;

  /// If [poll] exists.
  bool get hasPollField => _bit(flags, 0);

  /// Results.
  final PollResultsBase results;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Chat Default Banned Rights.
///
/// ID: `54c01850`.
class UpdateChatDefaultBannedRights extends UpdateBase {
  /// Update Chat Default Banned Rights constructor.
  const UpdateChatDefaultBannedRights({
    required this.peer,
    required this.defaultBannedRights,
    required this.version,
  }) : super._();

  /// Deserialize.
  factory UpdateChatDefaultBannedRights.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Default Banned Rights.
  final ChatBannedRightsBase defaultBannedRights;

  /// Version.
  final int version;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Folder Peers.
///
/// ID: `19360dc0`.
class UpdateFolderPeers extends UpdateBase {
  /// Update Folder Peers constructor.
  const UpdateFolderPeers({
    required this.folderPeers,
    required this.pts,
    required this.ptsCount,
  }) : super._();

  /// Deserialize.
  factory UpdateFolderPeers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Folder Peers.
  final List<FolderPeerBase> folderPeers;

  /// Pts.
  final int pts;

  /// Pts Count.
  final int ptsCount;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Peer Settings.
///
/// ID: `6a7e7366`.
class UpdatePeerSettings extends UpdateBase {
  /// Update Peer Settings constructor.
  const UpdatePeerSettings({
    required this.peer,
    required this.settings,
  }) : super._();

  /// Deserialize.
  factory UpdatePeerSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Settings.
  final PeerSettingsBase settings;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Peer Located.
///
/// ID: `b4afcfb0`.
class UpdatePeerLocated extends UpdateBase {
  /// Update Peer Located constructor.
  const UpdatePeerLocated({
    required this.peers,
  }) : super._();

  /// Deserialize.
  factory UpdatePeerLocated.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peers.
  final List<PeerLocatedBase> peers;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update New Scheduled Message.
///
/// ID: `39a51dfb`.
class UpdateNewScheduledMessage extends UpdateBase {
  /// Update New Scheduled Message constructor.
  const UpdateNewScheduledMessage({
    required this.message,
  }) : super._();

  /// Deserialize.
  factory UpdateNewScheduledMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Message.
  final MessageBase message;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Delete Scheduled Messages.
///
/// ID: `90866cee`.
class UpdateDeleteScheduledMessages extends UpdateBase {
  /// Update Delete Scheduled Messages constructor.
  const UpdateDeleteScheduledMessages({
    required this.peer,
    required this.messages,
  }) : super._();

  /// Deserialize.
  factory UpdateDeleteScheduledMessages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Messages.
  final List<int> messages;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Theme.
///
/// ID: `8216fba3`.
class UpdateTheme extends UpdateBase {
  /// Update Theme constructor.
  const UpdateTheme({
    required this.theme,
  }) : super._();

  /// Deserialize.
  factory UpdateTheme.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Theme.
  final ThemeBase theme;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Geo Live Viewed.
///
/// ID: `871fb939`.
class UpdateGeoLiveViewed extends UpdateBase {
  /// Update Geo Live Viewed constructor.
  const UpdateGeoLiveViewed({
    required this.peer,
    required this.msgId,
  }) : super._();

  /// Deserialize.
  factory UpdateGeoLiveViewed.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Msg Id.
  final int msgId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Login Token.
///
/// ID: `564fe691`.
class UpdateLoginToken extends UpdateBase {
  /// Update Login Token constructor.
  const UpdateLoginToken() : super._();

  /// Deserialize.
  factory UpdateLoginToken.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Message Poll Vote.
///
/// ID: `24f40e77`.
class UpdateMessagePollVote extends UpdateBase {
  /// Update Message Poll Vote constructor.
  const UpdateMessagePollVote({
    required this.pollId,
    required this.peer,
    required this.options,
    required this.qts,
  }) : super._();

  /// Deserialize.
  factory UpdateMessagePollVote.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Poll Id.
  final int pollId;

  /// Peer.
  final PeerBase peer;

  /// Options.
  final List<Uint8List> options;

  /// Qts.
  final int qts;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Dialog Filter.
///
/// ID: `26ffde7d`.
class UpdateDialogFilter extends UpdateBase {
  /// Update Dialog Filter constructor.
  const UpdateDialogFilter({
    required this.flags,
    required this.id,
    required this.filter,
  }) : super._();

  /// Deserialize.
  factory UpdateDialogFilter.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Id.
  final int id;

  /// Filter.
  final DialogFilterBase? filter;

  /// If [filter] exists.
  bool get hasFilterField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Dialog Filter Order.
///
/// ID: `a5d72105`.
class UpdateDialogFilterOrder extends UpdateBase {
  /// Update Dialog Filter Order constructor.
  const UpdateDialogFilterOrder({
    required this.order,
  }) : super._();

  /// Deserialize.
  factory UpdateDialogFilterOrder.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Order.
  final List<int> order;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Dialog Filters.
///
/// ID: `3504914f`.
class UpdateDialogFilters extends UpdateBase {
  /// Update Dialog Filters constructor.
  const UpdateDialogFilters() : super._();

  /// Deserialize.
  factory UpdateDialogFilters.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Phone Call Signaling Data.
///
/// ID: `2661bf09`.
class UpdatePhoneCallSignalingData extends UpdateBase {
  /// Update Phone Call Signaling Data constructor.
  const UpdatePhoneCallSignalingData({
    required this.phoneCallId,
    required this.data,
  }) : super._();

  /// Deserialize.
  factory UpdatePhoneCallSignalingData.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Phone Call Id.
  final int phoneCallId;

  /// Data.
  final Uint8List data;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Channel Message Forwards.
///
/// ID: `d29a27f4`.
class UpdateChannelMessageForwards extends UpdateBase {
  /// Update Channel Message Forwards constructor.
  const UpdateChannelMessageForwards({
    required this.channelId,
    required this.id,
    required this.forwards,
  }) : super._();

  /// Deserialize.
  factory UpdateChannelMessageForwards.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel Id.
  final int channelId;

  /// Id.
  final int id;

  /// Forwards.
  final int forwards;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Read Channel Discussion Inbox.
///
/// ID: `d6b19546`.
class UpdateReadChannelDiscussionInbox extends UpdateBase {
  /// Update Read Channel Discussion Inbox constructor.
  const UpdateReadChannelDiscussionInbox({
    required this.flags,
    required this.channelId,
    required this.topMsgId,
    required this.readMaxId,
    required this.broadcastId,
    required this.broadcastPost,
  }) : super._();

  /// Deserialize.
  factory UpdateReadChannelDiscussionInbox.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Channel Id.
  final int channelId;

  /// Top Msg Id.
  final int topMsgId;

  /// Read Max Id.
  final int readMaxId;

  /// Broadcast Id.
  final int? broadcastId;

  /// If [broadcastId] exists.
  bool get hasBroadcastIdField => _bit(flags, 0);

  /// Broadcast Post.
  final int? broadcastPost;

  /// If [broadcastPost] exists.
  bool get hasBroadcastPostField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Read Channel Discussion Outbox.
///
/// ID: `695c9e7c`.
class UpdateReadChannelDiscussionOutbox extends UpdateBase {
  /// Update Read Channel Discussion Outbox constructor.
  const UpdateReadChannelDiscussionOutbox({
    required this.channelId,
    required this.topMsgId,
    required this.readMaxId,
  }) : super._();

  /// Deserialize.
  factory UpdateReadChannelDiscussionOutbox.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel Id.
  final int channelId;

  /// Top Msg Id.
  final int topMsgId;

  /// Read Max Id.
  final int readMaxId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Peer Blocked.
///
/// ID: `ebe07752`.
class UpdatePeerBlocked extends UpdateBase {
  /// Update Peer Blocked constructor.
  const UpdatePeerBlocked({
    required this.flags,
    required this.peerId,
  }) : super._();

  /// Deserialize.
  factory UpdatePeerBlocked.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// blocked: bit
  bool get blocked => _bit(flags, 0);

  /// blocked_my_stories_from: bit
  bool get blockedMyStoriesFrom => _bit(flags, 1);

  /// Peer Id.
  final PeerBase peerId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Channel User Typing.
///
/// ID: `8c88c923`.
class UpdateChannelUserTyping extends UpdateBase {
  /// Update Channel User Typing constructor.
  const UpdateChannelUserTyping({
    required this.flags,
    required this.channelId,
    required this.topMsgId,
    required this.fromId,
    required this.action,
  }) : super._();

  /// Deserialize.
  factory UpdateChannelUserTyping.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Channel Id.
  final int channelId;

  /// Top Msg Id.
  final int? topMsgId;

  /// If [topMsgId] exists.
  bool get hasTopMsgIdField => _bit(flags, 0);

  /// From Id.
  final PeerBase fromId;

  /// Action.
  final SendMessageActionBase action;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Pinned Messages.
///
/// ID: `ed85eab5`.
class UpdatePinnedMessages extends UpdateBase {
  /// Update Pinned Messages constructor.
  const UpdatePinnedMessages({
    required this.flags,
    required this.peer,
    required this.messages,
    required this.pts,
    required this.ptsCount,
  }) : super._();

  /// Deserialize.
  factory UpdatePinnedMessages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// pinned: bit
  bool get pinned => _bit(flags, 0);

  /// Peer.
  final PeerBase peer;

  /// Messages.
  final List<int> messages;

  /// Pts.
  final int pts;

  /// Pts Count.
  final int ptsCount;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Pinned Channel Messages.
///
/// ID: `5bb98608`.
class UpdatePinnedChannelMessages extends UpdateBase {
  /// Update Pinned Channel Messages constructor.
  const UpdatePinnedChannelMessages({
    required this.flags,
    required this.channelId,
    required this.messages,
    required this.pts,
    required this.ptsCount,
  }) : super._();

  /// Deserialize.
  factory UpdatePinnedChannelMessages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// pinned: bit
  bool get pinned => _bit(flags, 0);

  /// Channel Id.
  final int channelId;

  /// Messages.
  final List<int> messages;

  /// Pts.
  final int pts;

  /// Pts Count.
  final int ptsCount;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Chat.
///
/// ID: `f89a6a4e`.
class UpdateChat extends UpdateBase {
  /// Update Chat constructor.
  const UpdateChat({
    required this.chatId,
  }) : super._();

  /// Deserialize.
  factory UpdateChat.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chat Id.
  final int chatId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Group Call Participants.
///
/// ID: `f2ebdb4e`.
class UpdateGroupCallParticipants extends UpdateBase {
  /// Update Group Call Participants constructor.
  const UpdateGroupCallParticipants({
    required this.call,
    required this.participants,
    required this.version,
  }) : super._();

  /// Deserialize.
  factory UpdateGroupCallParticipants.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Call.
  final InputGroupCallBase call;

  /// Participants.
  final List<GroupCallParticipantBase> participants;

  /// Version.
  final int version;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Group Call.
///
/// ID: `14b24500`.
class UpdateGroupCall extends UpdateBase {
  /// Update Group Call constructor.
  const UpdateGroupCall({
    required this.chatId,
    required this.call,
  }) : super._();

  /// Deserialize.
  factory UpdateGroupCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chat Id.
  final int chatId;

  /// Call.
  final GroupCallBase call;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Peer History T T L.
///
/// ID: `bb9bb9a5`.
class UpdatePeerHistoryTTL extends UpdateBase {
  /// Update Peer History T T L constructor.
  const UpdatePeerHistoryTTL({
    required this.flags,
    required this.peer,
    required this.ttlPeriod,
  }) : super._();

  /// Deserialize.
  factory UpdatePeerHistoryTTL.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Peer.
  final PeerBase peer;

  /// Ttl Period.
  final int? ttlPeriod;

  /// If [ttlPeriod] exists.
  bool get hasTtlPeriodField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Chat Participant.
///
/// ID: `d087663a`.
class UpdateChatParticipant extends UpdateBase {
  /// Update Chat Participant constructor.
  const UpdateChatParticipant({
    required this.flags,
    required this.chatId,
    required this.date,
    required this.actorId,
    required this.userId,
    required this.prevParticipant,
    required this.newParticipant,
    required this.invite,
    required this.qts,
  }) : super._();

  /// Deserialize.
  factory UpdateChatParticipant.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Chat Id.
  final int chatId;

  /// Date.
  final int date;

  /// Actor Id.
  final int actorId;

  /// User Id.
  final int userId;

  /// Prev Participant.
  final ChatParticipantBase? prevParticipant;

  /// If [prevParticipant] exists.
  bool get hasPrevParticipantField => _bit(flags, 0);

  /// New Participant.
  final ChatParticipantBase? newParticipant;

  /// If [newParticipant] exists.
  bool get hasNewParticipantField => _bit(flags, 1);

  /// Invite.
  final ExportedChatInviteBase? invite;

  /// If [invite] exists.
  bool get hasInviteField => _bit(flags, 2);

  /// Qts.
  final int qts;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Channel Participant.
///
/// ID: `985d3abb`.
class UpdateChannelParticipant extends UpdateBase {
  /// Update Channel Participant constructor.
  const UpdateChannelParticipant({
    required this.flags,
    required this.channelId,
    required this.date,
    required this.actorId,
    required this.userId,
    required this.prevParticipant,
    required this.newParticipant,
    required this.invite,
    required this.qts,
  }) : super._();

  /// Deserialize.
  factory UpdateChannelParticipant.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// via_chatlist: bit
  bool get viaChatlist => _bit(flags, 3);

  /// Channel Id.
  final int channelId;

  /// Date.
  final int date;

  /// Actor Id.
  final int actorId;

  /// User Id.
  final int userId;

  /// Prev Participant.
  final ChannelParticipantBase? prevParticipant;

  /// If [prevParticipant] exists.
  bool get hasPrevParticipantField => _bit(flags, 0);

  /// New Participant.
  final ChannelParticipantBase? newParticipant;

  /// If [newParticipant] exists.
  bool get hasNewParticipantField => _bit(flags, 1);

  /// Invite.
  final ExportedChatInviteBase? invite;

  /// If [invite] exists.
  bool get hasInviteField => _bit(flags, 2);

  /// Qts.
  final int qts;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Bot Stopped.
///
/// ID: `c4870a49`.
class UpdateBotStopped extends UpdateBase {
  /// Update Bot Stopped constructor.
  const UpdateBotStopped({
    required this.userId,
    required this.date,
    required this.stopped,
    required this.qts,
  }) : super._();

  /// Deserialize.
  factory UpdateBotStopped.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final int userId;

  /// Date.
  final int date;

  /// Stopped.
  final bool stopped;

  /// Qts.
  final int qts;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Group Call Connection.
///
/// ID: `0b783982`.
class UpdateGroupCallConnection extends UpdateBase {
  /// Update Group Call Connection constructor.
  const UpdateGroupCallConnection({
    required this.flags,
    required this.params,
  }) : super._();

  /// Deserialize.
  factory UpdateGroupCallConnection.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// presentation: bit
  bool get presentation => _bit(flags, 0);

  /// Params.
  final DataJSONBase params;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Bot Commands.
///
/// ID: `4d712f2e`.
class UpdateBotCommands extends UpdateBase {
  /// Update Bot Commands constructor.
  const UpdateBotCommands({
    required this.peer,
    required this.botId,
    required this.commands,
  }) : super._();

  /// Deserialize.
  factory UpdateBotCommands.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Bot Id.
  final int botId;

  /// Commands.
  final List<BotCommandBase> commands;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Pending Join Requests.
///
/// ID: `7063c3db`.
class UpdatePendingJoinRequests extends UpdateBase {
  /// Update Pending Join Requests constructor.
  const UpdatePendingJoinRequests({
    required this.peer,
    required this.requestsPending,
    required this.recentRequesters,
  }) : super._();

  /// Deserialize.
  factory UpdatePendingJoinRequests.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Requests Pending.
  final int requestsPending;

  /// Recent Requesters.
  final List<int> recentRequesters;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Bot Chat Invite Requester.
///
/// ID: `11dfa986`.
class UpdateBotChatInviteRequester extends UpdateBase {
  /// Update Bot Chat Invite Requester constructor.
  const UpdateBotChatInviteRequester({
    required this.peer,
    required this.date,
    required this.userId,
    required this.about,
    required this.invite,
    required this.qts,
  }) : super._();

  /// Deserialize.
  factory UpdateBotChatInviteRequester.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Date.
  final int date;

  /// User Id.
  final int userId;

  /// About.
  final String about;

  /// Invite.
  final ExportedChatInviteBase invite;

  /// Qts.
  final int qts;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Message Reactions.
///
/// ID: `5e1b3cb8`.
class UpdateMessageReactions extends UpdateBase {
  /// Update Message Reactions constructor.
  const UpdateMessageReactions({
    required this.flags,
    required this.peer,
    required this.msgId,
    required this.topMsgId,
    required this.reactions,
  }) : super._();

  /// Deserialize.
  factory UpdateMessageReactions.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Peer.
  final PeerBase peer;

  /// Msg Id.
  final int msgId;

  /// Top Msg Id.
  final int? topMsgId;

  /// If [topMsgId] exists.
  bool get hasTopMsgIdField => _bit(flags, 0);

  /// Reactions.
  final MessageReactionsBase reactions;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Attach Menu Bots.
///
/// ID: `17b7a20b`.
class UpdateAttachMenuBots extends UpdateBase {
  /// Update Attach Menu Bots constructor.
  const UpdateAttachMenuBots() : super._();

  /// Deserialize.
  factory UpdateAttachMenuBots.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Web View Result Sent.
///
/// ID: `1592b79d`.
class UpdateWebViewResultSent extends UpdateBase {
  /// Update Web View Result Sent constructor.
  const UpdateWebViewResultSent({
    required this.queryId,
  }) : super._();

  /// Deserialize.
  factory UpdateWebViewResultSent.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Query Id.
  final int queryId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Bot Menu Button.
///
/// ID: `14b85813`.
class UpdateBotMenuButton extends UpdateBase {
  /// Update Bot Menu Button constructor.
  const UpdateBotMenuButton({
    required this.botId,
    required this.button,
  }) : super._();

  /// Deserialize.
  factory UpdateBotMenuButton.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Bot Id.
  final int botId;

  /// Button.
  final BotMenuButtonBase button;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Saved Ringtones.
///
/// ID: `74d8be99`.
class UpdateSavedRingtones extends UpdateBase {
  /// Update Saved Ringtones constructor.
  const UpdateSavedRingtones() : super._();

  /// Deserialize.
  factory UpdateSavedRingtones.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Transcribed Audio.
///
/// ID: `0084cd5a`.
class UpdateTranscribedAudio extends UpdateBase {
  /// Update Transcribed Audio constructor.
  const UpdateTranscribedAudio({
    required this.flags,
    required this.peer,
    required this.msgId,
    required this.transcriptionId,
    required this.text,
  }) : super._();

  /// Deserialize.
  factory UpdateTranscribedAudio.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// pending: bit
  bool get pending => _bit(flags, 0);

  /// Peer.
  final PeerBase peer;

  /// Msg Id.
  final int msgId;

  /// Transcription Id.
  final int transcriptionId;

  /// Text.
  final String text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Read Featured Emoji Stickers.
///
/// ID: `fb4c496c`.
class UpdateReadFeaturedEmojiStickers extends UpdateBase {
  /// Update Read Featured Emoji Stickers constructor.
  const UpdateReadFeaturedEmojiStickers() : super._();

  /// Deserialize.
  factory UpdateReadFeaturedEmojiStickers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update User Emoji Status.
///
/// ID: `28373599`.
class UpdateUserEmojiStatus extends UpdateBase {
  /// Update User Emoji Status constructor.
  const UpdateUserEmojiStatus({
    required this.userId,
    required this.emojiStatus,
  }) : super._();

  /// Deserialize.
  factory UpdateUserEmojiStatus.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final int userId;

  /// Emoji Status.
  final EmojiStatusBase emojiStatus;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Recent Emoji Statuses.
///
/// ID: `30f443db`.
class UpdateRecentEmojiStatuses extends UpdateBase {
  /// Update Recent Emoji Statuses constructor.
  const UpdateRecentEmojiStatuses() : super._();

  /// Deserialize.
  factory UpdateRecentEmojiStatuses.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Recent Reactions.
///
/// ID: `6f7863f4`.
class UpdateRecentReactions extends UpdateBase {
  /// Update Recent Reactions constructor.
  const UpdateRecentReactions() : super._();

  /// Deserialize.
  factory UpdateRecentReactions.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Move Sticker Set To Top.
///
/// ID: `86fccf85`.
class UpdateMoveStickerSetToTop extends UpdateBase {
  /// Update Move Sticker Set To Top constructor.
  const UpdateMoveStickerSetToTop({
    required this.flags,
    required this.stickerset,
  }) : super._();

  /// Deserialize.
  factory UpdateMoveStickerSetToTop.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// masks: bit
  bool get masks => _bit(flags, 0);

  /// emojis: bit
  bool get emojis => _bit(flags, 1);

  /// Stickerset.
  final int stickerset;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Message Extended Media.
///
/// ID: `5a73a98c`.
class UpdateMessageExtendedMedia extends UpdateBase {
  /// Update Message Extended Media constructor.
  const UpdateMessageExtendedMedia({
    required this.peer,
    required this.msgId,
    required this.extendedMedia,
  }) : super._();

  /// Deserialize.
  factory UpdateMessageExtendedMedia.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Msg Id.
  final int msgId;

  /// Extended Media.
  final MessageExtendedMediaBase extendedMedia;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Channel Pinned Topic.
///
/// ID: `192efbe3`.
class UpdateChannelPinnedTopic extends UpdateBase {
  /// Update Channel Pinned Topic constructor.
  const UpdateChannelPinnedTopic({
    required this.flags,
    required this.channelId,
    required this.topicId,
  }) : super._();

  /// Deserialize.
  factory UpdateChannelPinnedTopic.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// pinned: bit
  bool get pinned => _bit(flags, 0);

  /// Channel Id.
  final int channelId;

  /// Topic Id.
  final int topicId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Channel Pinned Topics.
///
/// ID: `fe198602`.
class UpdateChannelPinnedTopics extends UpdateBase {
  /// Update Channel Pinned Topics constructor.
  const UpdateChannelPinnedTopics({
    required this.flags,
    required this.channelId,
    required this.order,
  }) : super._();

  /// Deserialize.
  factory UpdateChannelPinnedTopics.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Channel Id.
  final int channelId;

  /// Order.
  final List<int>? order;

  /// If [order] exists.
  bool get hasOrderField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update User.
///
/// ID: `20529438`.
class UpdateUser extends UpdateBase {
  /// Update User constructor.
  const UpdateUser({
    required this.userId,
  }) : super._();

  /// Deserialize.
  factory UpdateUser.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final int userId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Auto Save Settings.
///
/// ID: `ec05b097`.
class UpdateAutoSaveSettings extends UpdateBase {
  /// Update Auto Save Settings constructor.
  const UpdateAutoSaveSettings() : super._();

  /// Deserialize.
  factory UpdateAutoSaveSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Group Invite Privacy Forbidden.
///
/// ID: `ccf08ad6`.
class UpdateGroupInvitePrivacyForbidden extends UpdateBase {
  /// Update Group Invite Privacy Forbidden constructor.
  const UpdateGroupInvitePrivacyForbidden({
    required this.userId,
  }) : super._();

  /// Deserialize.
  factory UpdateGroupInvitePrivacyForbidden.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final int userId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Story.
///
/// ID: `75b3b798`.
class UpdateStory extends UpdateBase {
  /// Update Story constructor.
  const UpdateStory({
    required this.peer,
    required this.story,
  }) : super._();

  /// Deserialize.
  factory UpdateStory.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Story.
  final StoryItemBase story;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Read Stories.
///
/// ID: `f74e932b`.
class UpdateReadStories extends UpdateBase {
  /// Update Read Stories constructor.
  const UpdateReadStories({
    required this.peer,
    required this.maxId,
  }) : super._();

  /// Deserialize.
  factory UpdateReadStories.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Max Id.
  final int maxId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Story I D.
///
/// ID: `1bf335b9`.
class UpdateStoryID extends UpdateBase {
  /// Update Story I D constructor.
  const UpdateStoryID({
    required this.id,
    required this.randomId,
  }) : super._();

  /// Deserialize.
  factory UpdateStoryID.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Random Id.
  final int randomId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Stories Stealth Mode.
///
/// ID: `2c084dc1`.
class UpdateStoriesStealthMode extends UpdateBase {
  /// Update Stories Stealth Mode constructor.
  const UpdateStoriesStealthMode({
    required this.stealthMode,
  }) : super._();

  /// Deserialize.
  factory UpdateStoriesStealthMode.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Stealth Mode.
  final StoriesStealthModeBase stealthMode;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Sent Story Reaction.
///
/// ID: `7d627683`.
class UpdateSentStoryReaction extends UpdateBase {
  /// Update Sent Story Reaction constructor.
  const UpdateSentStoryReaction({
    required this.peer,
    required this.storyId,
    required this.reaction,
  }) : super._();

  /// Deserialize.
  factory UpdateSentStoryReaction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Story Id.
  final int storyId;

  /// Reaction.
  final ReactionBase reaction;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Bot Chat Boost.
///
/// ID: `904dd49c`.
class UpdateBotChatBoost extends UpdateBase {
  /// Update Bot Chat Boost constructor.
  const UpdateBotChatBoost({
    required this.peer,
    required this.boost,
    required this.qts,
  }) : super._();

  /// Deserialize.
  factory UpdateBotChatBoost.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Boost.
  final BoostBase boost;

  /// Qts.
  final int qts;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Channel View Forum As Messages.
///
/// ID: `07b68920`.
class UpdateChannelViewForumAsMessages extends UpdateBase {
  /// Update Channel View Forum As Messages constructor.
  const UpdateChannelViewForumAsMessages({
    required this.channelId,
    required this.enabled,
  }) : super._();

  /// Deserialize.
  factory UpdateChannelViewForumAsMessages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel Id.
  final int channelId;

  /// Enabled.
  final bool enabled;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Peer Wallpaper.
///
/// ID: `ae3f101d`.
class UpdatePeerWallpaper extends UpdateBase {
  /// Update Peer Wallpaper constructor.
  const UpdatePeerWallpaper({
    required this.flags,
    required this.peer,
    required this.wallpaper,
  }) : super._();

  /// Deserialize.
  factory UpdatePeerWallpaper.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// wallpaper_overridden: bit
  bool get wallpaperOverridden => _bit(flags, 1);

  /// Peer.
  final PeerBase peer;

  /// Wallpaper.
  final WallPaperBase? wallpaper;

  /// If [wallpaper] exists.
  bool get hasWallpaperField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Bot Message Reaction.
///
/// ID: `ac21d3ce`.
class UpdateBotMessageReaction extends UpdateBase {
  /// Update Bot Message Reaction constructor.
  const UpdateBotMessageReaction({
    required this.peer,
    required this.msgId,
    required this.date,
    required this.actor,
    required this.oldReactions,
    required this.newReactions,
    required this.qts,
  }) : super._();

  /// Deserialize.
  factory UpdateBotMessageReaction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Msg Id.
  final int msgId;

  /// Date.
  final int date;

  /// Actor.
  final PeerBase actor;

  /// Old Reactions.
  final List<ReactionBase> oldReactions;

  /// New Reactions.
  final List<ReactionBase> newReactions;

  /// Qts.
  final int qts;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Bot Message Reactions.
///
/// ID: `09cb7759`.
class UpdateBotMessageReactions extends UpdateBase {
  /// Update Bot Message Reactions constructor.
  const UpdateBotMessageReactions({
    required this.peer,
    required this.msgId,
    required this.date,
    required this.reactions,
    required this.qts,
  }) : super._();

  /// Deserialize.
  factory UpdateBotMessageReactions.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Msg Id.
  final int msgId;

  /// Date.
  final int date;

  /// Reactions.
  final List<ReactionCountBase> reactions;

  /// Qts.
  final int qts;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Saved Dialog Pinned.
///
/// ID: `aeaf9e74`.
class UpdateSavedDialogPinned extends UpdateBase {
  /// Update Saved Dialog Pinned constructor.
  const UpdateSavedDialogPinned({
    required this.flags,
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory UpdateSavedDialogPinned.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// pinned: bit
  bool get pinned => _bit(flags, 0);

  /// Peer.
  final DialogPeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Pinned Saved Dialogs.
///
/// ID: `686c85a6`.
class UpdatePinnedSavedDialogs extends UpdateBase {
  /// Update Pinned Saved Dialogs constructor.
  const UpdatePinnedSavedDialogs({
    required this.flags,
    required this.order,
  }) : super._();

  /// Deserialize.
  factory UpdatePinnedSavedDialogs.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Order.
  final List<DialogPeerBase>? order;

  /// If [order] exists.
  bool get hasOrderField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Updates State.
abstract class UpdatesStateBase extends TlConstructor {
  /// Predicate Updates State constructor.
  const UpdatesStateBase._() : super._();
}

/// Updates State.
///
/// ID: `a56c2a3e`.
class UpdatesState extends UpdatesStateBase {
  /// Updates State constructor.
  const UpdatesState({
    required this.pts,
    required this.qts,
    required this.date,
    required this.seq,
    required this.unreadCount,
  }) : super._();

  /// Deserialize.
  factory UpdatesState.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Pts.
  final int pts;

  /// Qts.
  final int qts;

  /// Date.
  final int date;

  /// Seq.
  final int seq;

  /// Unread Count.
  final int unreadCount;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Updates Difference.
abstract class UpdatesDifferenceBase extends TlConstructor {
  /// Predicate Updates Difference constructor.
  const UpdatesDifferenceBase._() : super._();
}

/// Updates Difference Empty.
///
/// ID: `5d75a138`.
class UpdatesDifferenceEmpty extends UpdatesDifferenceBase {
  /// Updates Difference Empty constructor.
  const UpdatesDifferenceEmpty({
    required this.date,
    required this.seq,
  }) : super._();

  /// Deserialize.
  factory UpdatesDifferenceEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Date.
  final int date;

  /// Seq.
  final int seq;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Updates Difference.
///
/// ID: `00f49ca0`.
class UpdatesDifference extends UpdatesDifferenceBase {
  /// Updates Difference constructor.
  const UpdatesDifference({
    required this.newMessages,
    required this.newEncryptedMessages,
    required this.otherUpdates,
    required this.chats,
    required this.users,
    required this.state,
  }) : super._();

  /// Deserialize.
  factory UpdatesDifference.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// New Messages.
  final List<MessageBase> newMessages;

  /// New Encrypted Messages.
  final List<EncryptedMessageBase> newEncryptedMessages;

  /// Other Updates.
  final List<UpdateBase> otherUpdates;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// State.
  final UpdatesStateBase state;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Updates Difference Slice.
///
/// ID: `a8fb1981`.
class UpdatesDifferenceSlice extends UpdatesDifferenceBase {
  /// Updates Difference Slice constructor.
  const UpdatesDifferenceSlice({
    required this.newMessages,
    required this.newEncryptedMessages,
    required this.otherUpdates,
    required this.chats,
    required this.users,
    required this.intermediateState,
  }) : super._();

  /// Deserialize.
  factory UpdatesDifferenceSlice.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// New Messages.
  final List<MessageBase> newMessages;

  /// New Encrypted Messages.
  final List<EncryptedMessageBase> newEncryptedMessages;

  /// Other Updates.
  final List<UpdateBase> otherUpdates;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Intermediate State.
  final UpdatesStateBase intermediateState;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Updates Difference Too Long.
///
/// ID: `4afe8f6d`.
class UpdatesDifferenceTooLong extends UpdatesDifferenceBase {
  /// Updates Difference Too Long constructor.
  const UpdatesDifferenceTooLong({
    required this.pts,
  }) : super._();

  /// Deserialize.
  factory UpdatesDifferenceTooLong.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Pts.
  final int pts;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Updates.
abstract class UpdatesBase extends TlConstructor {
  /// Predicate Updates constructor.
  const UpdatesBase._() : super._();
}

/// Updates Too Long.
///
/// ID: `e317af7e`.
class UpdatesTooLong extends UpdatesBase {
  /// Updates Too Long constructor.
  const UpdatesTooLong() : super._();

  /// Deserialize.
  factory UpdatesTooLong.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Short Message.
///
/// ID: `313bc7f8`.
class UpdateShortMessage extends UpdatesBase {
  /// Update Short Message constructor.
  const UpdateShortMessage({
    required this.flags,
    required this.id,
    required this.userId,
    required this.message,
    required this.pts,
    required this.ptsCount,
    required this.date,
    required this.fwdFrom,
    required this.viaBotId,
    required this.replyTo,
    required this.entities,
    required this.ttlPeriod,
  }) : super._();

  /// Deserialize.
  factory UpdateShortMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// out: bit
  bool get out => _bit(flags, 1);

  /// mentioned: bit
  bool get mentioned => _bit(flags, 4);

  /// media_unread: bit
  bool get mediaUnread => _bit(flags, 5);

  /// silent: bit
  bool get silent => _bit(flags, 13);

  /// Id.
  final int id;

  /// User Id.
  final int userId;

  /// Message.
  final String message;

  /// Pts.
  final int pts;

  /// Pts Count.
  final int ptsCount;

  /// Date.
  final int date;

  /// Fwd From.
  final MessageFwdHeaderBase? fwdFrom;

  /// If [fwdFrom] exists.
  bool get hasFwdFromField => _bit(flags, 2);

  /// Via Bot Id.
  final int? viaBotId;

  /// If [viaBotId] exists.
  bool get hasViaBotIdField => _bit(flags, 11);

  /// Reply To.
  final MessageReplyHeaderBase? replyTo;

  /// If [replyTo] exists.
  bool get hasReplyToField => _bit(flags, 3);

  /// Entities.
  final List<MessageEntityBase>? entities;

  /// If [entities] exists.
  bool get hasEntitiesField => _bit(flags, 7);

  /// Ttl Period.
  final int? ttlPeriod;

  /// If [ttlPeriod] exists.
  bool get hasTtlPeriodField => _bit(flags, 25);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Short Chat Message.
///
/// ID: `4d6deea5`.
class UpdateShortChatMessage extends UpdatesBase {
  /// Update Short Chat Message constructor.
  const UpdateShortChatMessage({
    required this.flags,
    required this.id,
    required this.fromId,
    required this.chatId,
    required this.message,
    required this.pts,
    required this.ptsCount,
    required this.date,
    required this.fwdFrom,
    required this.viaBotId,
    required this.replyTo,
    required this.entities,
    required this.ttlPeriod,
  }) : super._();

  /// Deserialize.
  factory UpdateShortChatMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// out: bit
  bool get out => _bit(flags, 1);

  /// mentioned: bit
  bool get mentioned => _bit(flags, 4);

  /// media_unread: bit
  bool get mediaUnread => _bit(flags, 5);

  /// silent: bit
  bool get silent => _bit(flags, 13);

  /// Id.
  final int id;

  /// From Id.
  final int fromId;

  /// Chat Id.
  final int chatId;

  /// Message.
  final String message;

  /// Pts.
  final int pts;

  /// Pts Count.
  final int ptsCount;

  /// Date.
  final int date;

  /// Fwd From.
  final MessageFwdHeaderBase? fwdFrom;

  /// If [fwdFrom] exists.
  bool get hasFwdFromField => _bit(flags, 2);

  /// Via Bot Id.
  final int? viaBotId;

  /// If [viaBotId] exists.
  bool get hasViaBotIdField => _bit(flags, 11);

  /// Reply To.
  final MessageReplyHeaderBase? replyTo;

  /// If [replyTo] exists.
  bool get hasReplyToField => _bit(flags, 3);

  /// Entities.
  final List<MessageEntityBase>? entities;

  /// If [entities] exists.
  bool get hasEntitiesField => _bit(flags, 7);

  /// Ttl Period.
  final int? ttlPeriod;

  /// If [ttlPeriod] exists.
  bool get hasTtlPeriodField => _bit(flags, 25);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Short.
///
/// ID: `78d4dec1`.
class UpdateShort extends UpdatesBase {
  /// Update Short constructor.
  const UpdateShort({
    required this.update,
    required this.date,
  }) : super._();

  /// Deserialize.
  factory UpdateShort.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Update.
  final UpdateBase update;

  /// Date.
  final int date;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Updates Combined.
///
/// ID: `725b04c3`.
class UpdatesCombined extends UpdatesBase {
  /// Updates Combined constructor.
  const UpdatesCombined({
    required this.updates,
    required this.users,
    required this.chats,
    required this.date,
    required this.seqStart,
    required this.seq,
  }) : super._();

  /// Deserialize.
  factory UpdatesCombined.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Updates.
  final List<UpdateBase> updates;

  /// Users.
  final List<UserBase> users;

  /// Chats.
  final List<ChatBase> chats;

  /// Date.
  final int date;

  /// Seq Start.
  final int seqStart;

  /// Seq.
  final int seq;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Updates.
///
/// ID: `74ae4240`.
class Updates extends UpdatesBase {
  /// Updates constructor.
  const Updates({
    required this.updates,
    required this.users,
    required this.chats,
    required this.date,
    required this.seq,
  }) : super._();

  /// Deserialize.
  factory Updates.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Updates.
  final List<UpdateBase> updates;

  /// Users.
  final List<UserBase> users;

  /// Chats.
  final List<ChatBase> chats;

  /// Date.
  final int date;

  /// Seq.
  final int seq;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Update Short Sent Message.
///
/// ID: `9015e101`.
class UpdateShortSentMessage extends UpdatesBase {
  /// Update Short Sent Message constructor.
  const UpdateShortSentMessage({
    required this.flags,
    required this.id,
    required this.pts,
    required this.ptsCount,
    required this.date,
    required this.media,
    required this.entities,
    required this.ttlPeriod,
  }) : super._();

  /// Deserialize.
  factory UpdateShortSentMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// out: bit
  bool get out => _bit(flags, 1);

  /// Id.
  final int id;

  /// Pts.
  final int pts;

  /// Pts Count.
  final int ptsCount;

  /// Date.
  final int date;

  /// Media.
  final MessageMediaBase? media;

  /// If [media] exists.
  bool get hasMediaField => _bit(flags, 9);

  /// Entities.
  final List<MessageEntityBase>? entities;

  /// If [entities] exists.
  bool get hasEntitiesField => _bit(flags, 7);

  /// Ttl Period.
  final int? ttlPeriod;

  /// If [ttlPeriod] exists.
  bool get hasTtlPeriodField => _bit(flags, 25);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Photos Photos.
abstract class PhotosPhotosBase extends TlConstructor {
  /// Predicate Photos Photos constructor.
  const PhotosPhotosBase._() : super._();
}

/// Photos Photos.
///
/// ID: `8dca6aa5`.
class PhotosPhotos extends PhotosPhotosBase {
  /// Photos Photos constructor.
  const PhotosPhotos({
    required this.photos,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory PhotosPhotos.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Photos.
  final List<PhotoBase> photos;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Photos Photos Slice.
///
/// ID: `15051f54`.
class PhotosPhotosSlice extends PhotosPhotosBase {
  /// Photos Photos Slice constructor.
  const PhotosPhotosSlice({
    required this.count,
    required this.photos,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory PhotosPhotosSlice.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Count.
  final int count;

  /// Photos.
  final List<PhotoBase> photos;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Photos Photo.
abstract class PhotosPhotoBase extends TlConstructor {
  /// Predicate Photos Photo constructor.
  const PhotosPhotoBase._() : super._();
}

/// Photos Photo.
///
/// ID: `20212ca8`.
class PhotosPhoto extends PhotosPhotoBase {
  /// Photos Photo constructor.
  const PhotosPhoto({
    required this.photo,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory PhotosPhoto.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Photo.
  final PhotoBase photo;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Upload File.
abstract class UploadFileBase extends TlConstructor {
  /// Predicate Upload File constructor.
  const UploadFileBase._() : super._();
}

/// Upload File.
///
/// ID: `096a18d5`.
class UploadFile extends UploadFileBase {
  /// Upload File constructor.
  const UploadFile({
    required this.type,
    required this.mtime,
    required this.bytes,
  }) : super._();

  /// Deserialize.
  factory UploadFile.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Type.
  final StorageFileTypeBase type;

  /// Mtime.
  final int mtime;

  /// Bytes.
  final Uint8List bytes;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Upload File Cdn Redirect.
///
/// ID: `f18cda44`.
class UploadFileCdnRedirect extends UploadFileBase {
  /// Upload File Cdn Redirect constructor.
  const UploadFileCdnRedirect({
    required this.dcId,
    required this.fileToken,
    required this.encryptionKey,
    required this.encryptionIv,
    required this.fileHashes,
  }) : super._();

  /// Deserialize.
  factory UploadFileCdnRedirect.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Dc Id.
  final int dcId;

  /// File Token.
  final Uint8List fileToken;

  /// Encryption Key.
  final Uint8List encryptionKey;

  /// Encryption Iv.
  final Uint8List encryptionIv;

  /// File Hashes.
  final List<FileHashBase> fileHashes;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Dc Option.
abstract class DcOptionBase extends TlConstructor {
  /// Predicate Dc Option constructor.
  const DcOptionBase._() : super._();
}

/// Dc Option.
///
/// ID: `18b7a10d`.
class DcOption extends DcOptionBase {
  /// Dc Option constructor.
  const DcOption({
    required this.flags,
    required this.id,
    required this.ipAddress,
    required this.port,
    required this.secret,
  }) : super._();

  /// Deserialize.
  factory DcOption.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// ipv6: bit
  bool get ipv6 => _bit(flags, 0);

  /// media_only: bit
  bool get mediaOnly => _bit(flags, 1);

  /// tcpo_only: bit
  bool get tcpoOnly => _bit(flags, 2);

  /// cdn: bit
  bool get cdn => _bit(flags, 3);

  /// static: bit
  bool get static => _bit(flags, 4);

  /// this_port_only: bit
  bool get thisPortOnly => _bit(flags, 5);

  /// Id.
  final int id;

  /// Ip Address.
  final String ipAddress;

  /// Port.
  final int port;

  /// Secret.
  final Uint8List? secret;

  /// If [secret] exists.
  bool get hasSecretField => _bit(flags, 10);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Config.
abstract class ConfigBase extends TlConstructor {
  /// Predicate Config constructor.
  const ConfigBase._() : super._();
}

/// Config.
///
/// ID: `cc1a241e`.
class Config extends ConfigBase {
  /// Config constructor.
  const Config({
    required this.flags,
    required this.date,
    required this.expires,
    required this.testMode,
    required this.thisDc,
    required this.dcOptions,
    required this.dcTxtDomainName,
    required this.chatSizeMax,
    required this.megagroupSizeMax,
    required this.forwardedCountMax,
    required this.onlineUpdatePeriodMs,
    required this.offlineBlurTimeoutMs,
    required this.offlineIdleTimeoutMs,
    required this.onlineCloudTimeoutMs,
    required this.notifyCloudDelayMs,
    required this.notifyDefaultDelayMs,
    required this.pushChatPeriodMs,
    required this.pushChatLimit,
    required this.editTimeLimit,
    required this.revokeTimeLimit,
    required this.revokePmTimeLimit,
    required this.ratingEDecay,
    required this.stickersRecentLimit,
    required this.channelsReadMediaPeriod,
    required this.tmpSessions,
    required this.callReceiveTimeoutMs,
    required this.callRingTimeoutMs,
    required this.callConnectTimeoutMs,
    required this.callPacketTimeoutMs,
    required this.meUrlPrefix,
    required this.autoupdateUrlPrefix,
    required this.gifSearchUsername,
    required this.venueSearchUsername,
    required this.imgSearchUsername,
    required this.staticMapsProvider,
    required this.captionLengthMax,
    required this.messageLengthMax,
    required this.webfileDcId,
    required this.suggestedLangCode,
    required this.langPackVersion,
    required this.baseLangPackVersion,
    required this.reactionsDefault,
    required this.autologinToken,
  }) : super._();

  /// Deserialize.
  factory Config.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// default_p2p_contacts: bit
  bool get defaultP2pContacts => _bit(flags, 3);

  /// preload_featured_stickers: bit
  bool get preloadFeaturedStickers => _bit(flags, 4);

  /// revoke_pm_inbox: bit
  bool get revokePmInbox => _bit(flags, 6);

  /// blocked_mode: bit
  bool get blockedMode => _bit(flags, 8);

  /// force_try_ipv6: bit
  bool get forceTryIpv6 => _bit(flags, 14);

  /// Date.
  final int date;

  /// Expires.
  final int expires;

  /// Test Mode.
  final bool testMode;

  /// This Dc.
  final int thisDc;

  /// Dc Options.
  final List<DcOptionBase> dcOptions;

  /// Dc Txt Domain Name.
  final String dcTxtDomainName;

  /// Chat Size Max.
  final int chatSizeMax;

  /// Megagroup Size Max.
  final int megagroupSizeMax;

  /// Forwarded Count Max.
  final int forwardedCountMax;

  /// Online Update Period Ms.
  final int onlineUpdatePeriodMs;

  /// Offline Blur Timeout Ms.
  final int offlineBlurTimeoutMs;

  /// Offline Idle Timeout Ms.
  final int offlineIdleTimeoutMs;

  /// Online Cloud Timeout Ms.
  final int onlineCloudTimeoutMs;

  /// Notify Cloud Delay Ms.
  final int notifyCloudDelayMs;

  /// Notify Default Delay Ms.
  final int notifyDefaultDelayMs;

  /// Push Chat Period Ms.
  final int pushChatPeriodMs;

  /// Push Chat Limit.
  final int pushChatLimit;

  /// Edit Time Limit.
  final int editTimeLimit;

  /// Revoke Time Limit.
  final int revokeTimeLimit;

  /// Revoke Pm Time Limit.
  final int revokePmTimeLimit;

  /// Rating E Decay.
  final int ratingEDecay;

  /// Stickers Recent Limit.
  final int stickersRecentLimit;

  /// Channels Read Media Period.
  final int channelsReadMediaPeriod;

  /// Tmp Sessions.
  final int? tmpSessions;

  /// If [tmpSessions] exists.
  bool get hasTmpSessionsField => _bit(flags, 0);

  /// Call Receive Timeout Ms.
  final int callReceiveTimeoutMs;

  /// Call Ring Timeout Ms.
  final int callRingTimeoutMs;

  /// Call Connect Timeout Ms.
  final int callConnectTimeoutMs;

  /// Call Packet Timeout Ms.
  final int callPacketTimeoutMs;

  /// Me Url Prefix.
  final String meUrlPrefix;

  /// Autoupdate Url Prefix.
  final String? autoupdateUrlPrefix;

  /// If [autoupdateUrlPrefix] exists.
  bool get hasAutoupdateUrlPrefixField => _bit(flags, 7);

  /// Gif Search Username.
  final String? gifSearchUsername;

  /// If [gifSearchUsername] exists.
  bool get hasGifSearchUsernameField => _bit(flags, 9);

  /// Venue Search Username.
  final String? venueSearchUsername;

  /// If [venueSearchUsername] exists.
  bool get hasVenueSearchUsernameField => _bit(flags, 10);

  /// Img Search Username.
  final String? imgSearchUsername;

  /// If [imgSearchUsername] exists.
  bool get hasImgSearchUsernameField => _bit(flags, 11);

  /// Static Maps Provider.
  final String? staticMapsProvider;

  /// If [staticMapsProvider] exists.
  bool get hasStaticMapsProviderField => _bit(flags, 12);

  /// Caption Length Max.
  final int captionLengthMax;

  /// Message Length Max.
  final int messageLengthMax;

  /// Webfile Dc Id.
  final int webfileDcId;

  /// Suggested Lang Code.
  final String? suggestedLangCode;

  /// If [suggestedLangCode] exists.
  bool get hasSuggestedLangCodeField => _bit(flags, 2);

  /// Lang Pack Version.
  final int? langPackVersion;

  /// If [langPackVersion] exists.
  bool get hasLangPackVersionField => _bit(flags, 2);

  /// Base Lang Pack Version.
  final int? baseLangPackVersion;

  /// If [baseLangPackVersion] exists.
  bool get hasBaseLangPackVersionField => _bit(flags, 2);

  /// Reactions Default.
  final ReactionBase? reactionsDefault;

  /// If [reactionsDefault] exists.
  bool get hasReactionsDefaultField => _bit(flags, 15);

  /// Autologin Token.
  final String? autologinToken;

  /// If [autologinToken] exists.
  bool get hasAutologinTokenField => _bit(flags, 16);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Nearest Dc.
abstract class NearestDcBase extends TlConstructor {
  /// Predicate Nearest Dc constructor.
  const NearestDcBase._() : super._();
}

/// Nearest Dc.
///
/// ID: `8e1a1775`.
class NearestDc extends NearestDcBase {
  /// Nearest Dc constructor.
  const NearestDc({
    required this.country,
    required this.thisDc,
    required this.nearestDc,
  }) : super._();

  /// Deserialize.
  factory NearestDc.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Country.
  final String country;

  /// This Dc.
  final int thisDc;

  /// Nearest Dc.
  final int nearestDc;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Help App Update.
abstract class HelpAppUpdateBase extends TlConstructor {
  /// Predicate Help App Update constructor.
  const HelpAppUpdateBase._() : super._();
}

/// Help App Update.
///
/// ID: `ccbbce30`.
class HelpAppUpdate extends HelpAppUpdateBase {
  /// Help App Update constructor.
  const HelpAppUpdate({
    required this.flags,
    required this.id,
    required this.version,
    required this.text,
    required this.entities,
    required this.document,
    required this.url,
    required this.sticker,
  }) : super._();

  /// Deserialize.
  factory HelpAppUpdate.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// can_not_skip: bit
  bool get canNotSkip => _bit(flags, 0);

  /// Id.
  final int id;

  /// Version.
  final String version;

  /// Text.
  final String text;

  /// Entities.
  final List<MessageEntityBase> entities;

  /// Document.
  final DocumentBase? document;

  /// If [document] exists.
  bool get hasDocumentField => _bit(flags, 1);

  /// Url.
  final String? url;

  /// If [url] exists.
  bool get hasUrlField => _bit(flags, 2);

  /// Sticker.
  final DocumentBase? sticker;

  /// If [sticker] exists.
  bool get hasStickerField => _bit(flags, 3);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help No App Update.
///
/// ID: `c45a6536`.
class HelpNoAppUpdate extends HelpAppUpdateBase {
  /// Help No App Update constructor.
  const HelpNoAppUpdate() : super._();

  /// Deserialize.
  factory HelpNoAppUpdate.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Help Invite Text.
abstract class HelpInviteTextBase extends TlConstructor {
  /// Predicate Help Invite Text constructor.
  const HelpInviteTextBase._() : super._();
}

/// Help Invite Text.
///
/// ID: `18cb9f78`.
class HelpInviteText extends HelpInviteTextBase {
  /// Help Invite Text constructor.
  const HelpInviteText({
    required this.message,
  }) : super._();

  /// Deserialize.
  factory HelpInviteText.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Message.
  final String message;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Encrypted Chat.
abstract class EncryptedChatBase extends TlConstructor {
  /// Predicate Encrypted Chat constructor.
  const EncryptedChatBase._() : super._();
}

/// Encrypted Chat Empty.
///
/// ID: `ab7ec0a0`.
class EncryptedChatEmpty extends EncryptedChatBase {
  /// Encrypted Chat Empty constructor.
  const EncryptedChatEmpty({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory EncryptedChatEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Encrypted Chat Waiting.
///
/// ID: `66b25953`.
class EncryptedChatWaiting extends EncryptedChatBase {
  /// Encrypted Chat Waiting constructor.
  const EncryptedChatWaiting({
    required this.id,
    required this.accessHash,
    required this.date,
    required this.adminId,
    required this.participantId,
  }) : super._();

  /// Deserialize.
  factory EncryptedChatWaiting.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Date.
  final int date;

  /// Admin Id.
  final int adminId;

  /// Participant Id.
  final int participantId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Encrypted Chat Requested.
///
/// ID: `48f1d94c`.
class EncryptedChatRequested extends EncryptedChatBase {
  /// Encrypted Chat Requested constructor.
  const EncryptedChatRequested({
    required this.flags,
    required this.folderId,
    required this.id,
    required this.accessHash,
    required this.date,
    required this.adminId,
    required this.participantId,
    required this.gA,
  }) : super._();

  /// Deserialize.
  factory EncryptedChatRequested.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Folder Id.
  final int? folderId;

  /// If [folderId] exists.
  bool get hasFolderIdField => _bit(flags, 0);

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Date.
  final int date;

  /// Admin Id.
  final int adminId;

  /// Participant Id.
  final int participantId;

  /// G A.
  final Uint8List gA;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Encrypted Chat.
///
/// ID: `61f0d4c7`.
class EncryptedChat extends EncryptedChatBase {
  /// Encrypted Chat constructor.
  const EncryptedChat({
    required this.id,
    required this.accessHash,
    required this.date,
    required this.adminId,
    required this.participantId,
    required this.gAOrB,
    required this.keyFingerprint,
  }) : super._();

  /// Deserialize.
  factory EncryptedChat.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Date.
  final int date;

  /// Admin Id.
  final int adminId;

  /// Participant Id.
  final int participantId;

  /// G A Or B.
  final Uint8List gAOrB;

  /// Key Fingerprint.
  final int keyFingerprint;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Encrypted Chat Discarded.
///
/// ID: `1e1c7c45`.
class EncryptedChatDiscarded extends EncryptedChatBase {
  /// Encrypted Chat Discarded constructor.
  const EncryptedChatDiscarded({
    required this.flags,
    required this.id,
  }) : super._();

  /// Deserialize.
  factory EncryptedChatDiscarded.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// history_deleted: bit
  bool get historyDeleted => _bit(flags, 0);

  /// Id.
  final int id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Encrypted Chat.
abstract class InputEncryptedChatBase extends TlConstructor {
  /// Predicate Input Encrypted Chat constructor.
  const InputEncryptedChatBase._() : super._();
}

/// Input Encrypted Chat.
///
/// ID: `f141b5e1`.
class InputEncryptedChat extends InputEncryptedChatBase {
  /// Input Encrypted Chat constructor.
  const InputEncryptedChat({
    required this.chatId,
    required this.accessHash,
  }) : super._();

  /// Deserialize.
  factory InputEncryptedChat.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chat Id.
  final int chatId;

  /// Access Hash.
  final int accessHash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Encrypted File.
abstract class EncryptedFileBase extends TlConstructor {
  /// Predicate Encrypted File constructor.
  const EncryptedFileBase._() : super._();
}

/// Encrypted File Empty.
///
/// ID: `c21f497e`.
class EncryptedFileEmpty extends EncryptedFileBase {
  /// Encrypted File Empty constructor.
  const EncryptedFileEmpty() : super._();

  /// Deserialize.
  factory EncryptedFileEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Encrypted File.
///
/// ID: `a8008cd8`.
class EncryptedFile extends EncryptedFileBase {
  /// Encrypted File constructor.
  const EncryptedFile({
    required this.id,
    required this.accessHash,
    required this.size,
    required this.dcId,
    required this.keyFingerprint,
  }) : super._();

  /// Deserialize.
  factory EncryptedFile.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Size.
  final int size;

  /// Dc Id.
  final int dcId;

  /// Key Fingerprint.
  final int keyFingerprint;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Encrypted File.
abstract class InputEncryptedFileBase extends TlConstructor {
  /// Predicate Input Encrypted File constructor.
  const InputEncryptedFileBase._() : super._();
}

/// Input Encrypted File Empty.
///
/// ID: `1837c364`.
class InputEncryptedFileEmpty extends InputEncryptedFileBase {
  /// Input Encrypted File Empty constructor.
  const InputEncryptedFileEmpty() : super._();

  /// Deserialize.
  factory InputEncryptedFileEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Encrypted File Uploaded.
///
/// ID: `64bd0306`.
class InputEncryptedFileUploaded extends InputEncryptedFileBase {
  /// Input Encrypted File Uploaded constructor.
  const InputEncryptedFileUploaded({
    required this.id,
    required this.parts,
    required this.md5Checksum,
    required this.keyFingerprint,
  }) : super._();

  /// Deserialize.
  factory InputEncryptedFileUploaded.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Parts.
  final int parts;

  /// Md5 Checksum.
  final String md5Checksum;

  /// Key Fingerprint.
  final int keyFingerprint;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Encrypted File.
///
/// ID: `5a17b5e5`.
class InputEncryptedFile extends InputEncryptedFileBase {
  /// Input Encrypted File constructor.
  const InputEncryptedFile({
    required this.id,
    required this.accessHash,
  }) : super._();

  /// Deserialize.
  factory InputEncryptedFile.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Encrypted File Big Uploaded.
///
/// ID: `2dc173c8`.
class InputEncryptedFileBigUploaded extends InputEncryptedFileBase {
  /// Input Encrypted File Big Uploaded constructor.
  const InputEncryptedFileBigUploaded({
    required this.id,
    required this.parts,
    required this.keyFingerprint,
  }) : super._();

  /// Deserialize.
  factory InputEncryptedFileBigUploaded.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Parts.
  final int parts;

  /// Key Fingerprint.
  final int keyFingerprint;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Encrypted Message.
abstract class EncryptedMessageBase extends TlConstructor {
  /// Predicate Encrypted Message constructor.
  const EncryptedMessageBase._() : super._();
}

/// Encrypted Message.
///
/// ID: `ed18c118`.
class EncryptedMessage extends EncryptedMessageBase {
  /// Encrypted Message constructor.
  const EncryptedMessage({
    required this.randomId,
    required this.chatId,
    required this.date,
    required this.bytes,
    required this.file,
  }) : super._();

  /// Deserialize.
  factory EncryptedMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Random Id.
  final int randomId;

  /// Chat Id.
  final int chatId;

  /// Date.
  final int date;

  /// Bytes.
  final Uint8List bytes;

  /// File.
  final EncryptedFileBase file;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Encrypted Message Service.
///
/// ID: `23734b06`.
class EncryptedMessageService extends EncryptedMessageBase {
  /// Encrypted Message Service constructor.
  const EncryptedMessageService({
    required this.randomId,
    required this.chatId,
    required this.date,
    required this.bytes,
  }) : super._();

  /// Deserialize.
  factory EncryptedMessageService.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Random Id.
  final int randomId;

  /// Chat Id.
  final int chatId;

  /// Date.
  final int date;

  /// Bytes.
  final Uint8List bytes;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Dh Config.
abstract class MessagesDhConfigBase extends TlConstructor {
  /// Predicate Messages Dh Config constructor.
  const MessagesDhConfigBase._() : super._();
}

/// Messages Dh Config Not Modified.
///
/// ID: `c0e24635`.
class MessagesDhConfigNotModified extends MessagesDhConfigBase {
  /// Messages Dh Config Not Modified constructor.
  const MessagesDhConfigNotModified({
    required this.random,
  }) : super._();

  /// Deserialize.
  factory MessagesDhConfigNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Random.
  final Uint8List random;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Dh Config.
///
/// ID: `2c221edd`.
class MessagesDhConfig extends MessagesDhConfigBase {
  /// Messages Dh Config constructor.
  const MessagesDhConfig({
    required this.g,
    required this.p,
    required this.version,
    required this.random,
  }) : super._();

  /// Deserialize.
  factory MessagesDhConfig.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// G.
  final int g;

  /// P.
  final Uint8List p;

  /// Version.
  final int version;

  /// Random.
  final Uint8List random;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Sent Encrypted Message.
abstract class MessagesSentEncryptedMessageBase extends TlConstructor {
  /// Predicate Messages Sent Encrypted Message constructor.
  const MessagesSentEncryptedMessageBase._() : super._();
}

/// Messages Sent Encrypted Message.
///
/// ID: `560f8935`.
class MessagesSentEncryptedMessage extends MessagesSentEncryptedMessageBase {
  /// Messages Sent Encrypted Message constructor.
  const MessagesSentEncryptedMessage({
    required this.date,
  }) : super._();

  /// Deserialize.
  factory MessagesSentEncryptedMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Date.
  final int date;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Sent Encrypted File.
///
/// ID: `9493ff32`.
class MessagesSentEncryptedFile extends MessagesSentEncryptedMessageBase {
  /// Messages Sent Encrypted File constructor.
  const MessagesSentEncryptedFile({
    required this.date,
    required this.file,
  }) : super._();

  /// Deserialize.
  factory MessagesSentEncryptedFile.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Date.
  final int date;

  /// File.
  final EncryptedFileBase file;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Document.
abstract class InputDocumentBase extends TlConstructor {
  /// Predicate Input Document constructor.
  const InputDocumentBase._() : super._();
}

/// Input Document Empty.
///
/// ID: `72f0eaae`.
class InputDocumentEmpty extends InputDocumentBase {
  /// Input Document Empty constructor.
  const InputDocumentEmpty() : super._();

  /// Deserialize.
  factory InputDocumentEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Document.
///
/// ID: `1abfb575`.
class InputDocument extends InputDocumentBase {
  /// Input Document constructor.
  const InputDocument({
    required this.id,
    required this.accessHash,
    required this.fileReference,
  }) : super._();

  /// Deserialize.
  factory InputDocument.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// File Reference.
  final Uint8List fileReference;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Document.
abstract class DocumentBase extends TlConstructor {
  /// Predicate Document constructor.
  const DocumentBase._() : super._();
}

/// Document Empty.
///
/// ID: `36f8c871`.
class DocumentEmpty extends DocumentBase {
  /// Document Empty constructor.
  const DocumentEmpty({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory DocumentEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Document.
///
/// ID: `8fd4c4d8`.
class Document extends DocumentBase {
  /// Document constructor.
  const Document({
    required this.flags,
    required this.id,
    required this.accessHash,
    required this.fileReference,
    required this.date,
    required this.mimeType,
    required this.size,
    required this.thumbs,
    required this.videoThumbs,
    required this.dcId,
    required this.attributes,
  }) : super._();

  /// Deserialize.
  factory Document.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// File Reference.
  final Uint8List fileReference;

  /// Date.
  final int date;

  /// Mime Type.
  final String mimeType;

  /// Size.
  final int size;

  /// Thumbs.
  final List<PhotoSizeBase>? thumbs;

  /// If [thumbs] exists.
  bool get hasThumbsField => _bit(flags, 0);

  /// Video Thumbs.
  final List<VideoSizeBase>? videoThumbs;

  /// If [videoThumbs] exists.
  bool get hasVideoThumbsField => _bit(flags, 1);

  /// Dc Id.
  final int dcId;

  /// Attributes.
  final List<DocumentAttributeBase> attributes;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Help Support.
abstract class HelpSupportBase extends TlConstructor {
  /// Predicate Help Support constructor.
  const HelpSupportBase._() : super._();
}

/// Help Support.
///
/// ID: `17c6b5f6`.
class HelpSupport extends HelpSupportBase {
  /// Help Support constructor.
  const HelpSupport({
    required this.phoneNumber,
    required this.user,
  }) : super._();

  /// Deserialize.
  factory HelpSupport.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Phone Number.
  final String phoneNumber;

  /// User.
  final UserBase user;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Notify Peer.
abstract class NotifyPeerBase extends TlConstructor {
  /// Predicate Notify Peer constructor.
  const NotifyPeerBase._() : super._();
}

/// Notify Peer.
///
/// ID: `9fd40bd8`.
class NotifyPeer extends NotifyPeerBase {
  /// Notify Peer constructor.
  const NotifyPeer({
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory NotifyPeer.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Notify Users.
///
/// ID: `b4c83b4c`.
class NotifyUsers extends NotifyPeerBase {
  /// Notify Users constructor.
  const NotifyUsers() : super._();

  /// Deserialize.
  factory NotifyUsers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Notify Chats.
///
/// ID: `c007cec3`.
class NotifyChats extends NotifyPeerBase {
  /// Notify Chats constructor.
  const NotifyChats() : super._();

  /// Deserialize.
  factory NotifyChats.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Notify Broadcasts.
///
/// ID: `d612e8ef`.
class NotifyBroadcasts extends NotifyPeerBase {
  /// Notify Broadcasts constructor.
  const NotifyBroadcasts() : super._();

  /// Deserialize.
  factory NotifyBroadcasts.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Notify Forum Topic.
///
/// ID: `226e6308`.
class NotifyForumTopic extends NotifyPeerBase {
  /// Notify Forum Topic constructor.
  const NotifyForumTopic({
    required this.peer,
    required this.topMsgId,
  }) : super._();

  /// Deserialize.
  factory NotifyForumTopic.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Top Msg Id.
  final int topMsgId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Send Message Action.
abstract class SendMessageActionBase extends TlConstructor {
  /// Predicate Send Message Action constructor.
  const SendMessageActionBase._() : super._();
}

/// Send Message Typing Action.
///
/// ID: `16bf744e`.
class SendMessageTypingAction extends SendMessageActionBase {
  /// Send Message Typing Action constructor.
  const SendMessageTypingAction() : super._();

  /// Deserialize.
  factory SendMessageTypingAction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Send Message Cancel Action.
///
/// ID: `fd5ec8f5`.
class SendMessageCancelAction extends SendMessageActionBase {
  /// Send Message Cancel Action constructor.
  const SendMessageCancelAction() : super._();

  /// Deserialize.
  factory SendMessageCancelAction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Send Message Record Video Action.
///
/// ID: `a187d66f`.
class SendMessageRecordVideoAction extends SendMessageActionBase {
  /// Send Message Record Video Action constructor.
  const SendMessageRecordVideoAction() : super._();

  /// Deserialize.
  factory SendMessageRecordVideoAction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Send Message Upload Video Action.
///
/// ID: `e9763aec`.
class SendMessageUploadVideoAction extends SendMessageActionBase {
  /// Send Message Upload Video Action constructor.
  const SendMessageUploadVideoAction({
    required this.progress,
  }) : super._();

  /// Deserialize.
  factory SendMessageUploadVideoAction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Progress.
  final int progress;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Send Message Record Audio Action.
///
/// ID: `d52f73f7`.
class SendMessageRecordAudioAction extends SendMessageActionBase {
  /// Send Message Record Audio Action constructor.
  const SendMessageRecordAudioAction() : super._();

  /// Deserialize.
  factory SendMessageRecordAudioAction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Send Message Upload Audio Action.
///
/// ID: `f351d7ab`.
class SendMessageUploadAudioAction extends SendMessageActionBase {
  /// Send Message Upload Audio Action constructor.
  const SendMessageUploadAudioAction({
    required this.progress,
  }) : super._();

  /// Deserialize.
  factory SendMessageUploadAudioAction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Progress.
  final int progress;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Send Message Upload Photo Action.
///
/// ID: `d1d34a26`.
class SendMessageUploadPhotoAction extends SendMessageActionBase {
  /// Send Message Upload Photo Action constructor.
  const SendMessageUploadPhotoAction({
    required this.progress,
  }) : super._();

  /// Deserialize.
  factory SendMessageUploadPhotoAction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Progress.
  final int progress;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Send Message Upload Document Action.
///
/// ID: `aa0cd9e4`.
class SendMessageUploadDocumentAction extends SendMessageActionBase {
  /// Send Message Upload Document Action constructor.
  const SendMessageUploadDocumentAction({
    required this.progress,
  }) : super._();

  /// Deserialize.
  factory SendMessageUploadDocumentAction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Progress.
  final int progress;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Send Message Geo Location Action.
///
/// ID: `176f8ba1`.
class SendMessageGeoLocationAction extends SendMessageActionBase {
  /// Send Message Geo Location Action constructor.
  const SendMessageGeoLocationAction() : super._();

  /// Deserialize.
  factory SendMessageGeoLocationAction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Send Message Choose Contact Action.
///
/// ID: `628cbc6f`.
class SendMessageChooseContactAction extends SendMessageActionBase {
  /// Send Message Choose Contact Action constructor.
  const SendMessageChooseContactAction() : super._();

  /// Deserialize.
  factory SendMessageChooseContactAction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Send Message Game Play Action.
///
/// ID: `dd6a8f48`.
class SendMessageGamePlayAction extends SendMessageActionBase {
  /// Send Message Game Play Action constructor.
  const SendMessageGamePlayAction() : super._();

  /// Deserialize.
  factory SendMessageGamePlayAction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Send Message Record Round Action.
///
/// ID: `88f27fbc`.
class SendMessageRecordRoundAction extends SendMessageActionBase {
  /// Send Message Record Round Action constructor.
  const SendMessageRecordRoundAction() : super._();

  /// Deserialize.
  factory SendMessageRecordRoundAction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Send Message Upload Round Action.
///
/// ID: `243e1c66`.
class SendMessageUploadRoundAction extends SendMessageActionBase {
  /// Send Message Upload Round Action constructor.
  const SendMessageUploadRoundAction({
    required this.progress,
  }) : super._();

  /// Deserialize.
  factory SendMessageUploadRoundAction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Progress.
  final int progress;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Speaking In Group Call Action.
///
/// ID: `d92c2285`.
class SpeakingInGroupCallAction extends SendMessageActionBase {
  /// Speaking In Group Call Action constructor.
  const SpeakingInGroupCallAction() : super._();

  /// Deserialize.
  factory SpeakingInGroupCallAction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Send Message History Import Action.
///
/// ID: `dbda9246`.
class SendMessageHistoryImportAction extends SendMessageActionBase {
  /// Send Message History Import Action constructor.
  const SendMessageHistoryImportAction({
    required this.progress,
  }) : super._();

  /// Deserialize.
  factory SendMessageHistoryImportAction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Progress.
  final int progress;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Send Message Choose Sticker Action.
///
/// ID: `b05ac6b1`.
class SendMessageChooseStickerAction extends SendMessageActionBase {
  /// Send Message Choose Sticker Action constructor.
  const SendMessageChooseStickerAction() : super._();

  /// Deserialize.
  factory SendMessageChooseStickerAction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Send Message Emoji Interaction.
///
/// ID: `25972bcb`.
class SendMessageEmojiInteraction extends SendMessageActionBase {
  /// Send Message Emoji Interaction constructor.
  const SendMessageEmojiInteraction({
    required this.emoticon,
    required this.msgId,
    required this.interaction,
  }) : super._();

  /// Deserialize.
  factory SendMessageEmojiInteraction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Emoticon.
  final String emoticon;

  /// Msg Id.
  final int msgId;

  /// Interaction.
  final DataJSONBase interaction;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Send Message Emoji Interaction Seen.
///
/// ID: `b665902e`.
class SendMessageEmojiInteractionSeen extends SendMessageActionBase {
  /// Send Message Emoji Interaction Seen constructor.
  const SendMessageEmojiInteractionSeen({
    required this.emoticon,
  }) : super._();

  /// Deserialize.
  factory SendMessageEmojiInteractionSeen.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Emoticon.
  final String emoticon;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Contacts Found.
abstract class ContactsFoundBase extends TlConstructor {
  /// Predicate Contacts Found constructor.
  const ContactsFoundBase._() : super._();
}

/// Contacts Found.
///
/// ID: `b3134d9d`.
class ContactsFound extends ContactsFoundBase {
  /// Contacts Found constructor.
  const ContactsFound({
    required this.myResults,
    required this.results,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory ContactsFound.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// My Results.
  final List<PeerBase> myResults;

  /// Results.
  final List<PeerBase> results;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Privacy Key.
abstract class InputPrivacyKeyBase extends TlConstructor {
  /// Predicate Input Privacy Key constructor.
  const InputPrivacyKeyBase._() : super._();
}

/// Input Privacy Key Status Timestamp.
///
/// ID: `4f96cb18`.
class InputPrivacyKeyStatusTimestamp extends InputPrivacyKeyBase {
  /// Input Privacy Key Status Timestamp constructor.
  const InputPrivacyKeyStatusTimestamp() : super._();

  /// Deserialize.
  factory InputPrivacyKeyStatusTimestamp.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Privacy Key Chat Invite.
///
/// ID: `bdfb0426`.
class InputPrivacyKeyChatInvite extends InputPrivacyKeyBase {
  /// Input Privacy Key Chat Invite constructor.
  const InputPrivacyKeyChatInvite() : super._();

  /// Deserialize.
  factory InputPrivacyKeyChatInvite.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Privacy Key Phone Call.
///
/// ID: `fabadc5f`.
class InputPrivacyKeyPhoneCall extends InputPrivacyKeyBase {
  /// Input Privacy Key Phone Call constructor.
  const InputPrivacyKeyPhoneCall() : super._();

  /// Deserialize.
  factory InputPrivacyKeyPhoneCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Privacy Key Phone P2 P.
///
/// ID: `db9e70d2`.
class InputPrivacyKeyPhoneP2P extends InputPrivacyKeyBase {
  /// Input Privacy Key Phone P2 P constructor.
  const InputPrivacyKeyPhoneP2P() : super._();

  /// Deserialize.
  factory InputPrivacyKeyPhoneP2P.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Privacy Key Forwards.
///
/// ID: `a4dd4c08`.
class InputPrivacyKeyForwards extends InputPrivacyKeyBase {
  /// Input Privacy Key Forwards constructor.
  const InputPrivacyKeyForwards() : super._();

  /// Deserialize.
  factory InputPrivacyKeyForwards.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Privacy Key Profile Photo.
///
/// ID: `5719bacc`.
class InputPrivacyKeyProfilePhoto extends InputPrivacyKeyBase {
  /// Input Privacy Key Profile Photo constructor.
  const InputPrivacyKeyProfilePhoto() : super._();

  /// Deserialize.
  factory InputPrivacyKeyProfilePhoto.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Privacy Key Phone Number.
///
/// ID: `0352dafa`.
class InputPrivacyKeyPhoneNumber extends InputPrivacyKeyBase {
  /// Input Privacy Key Phone Number constructor.
  const InputPrivacyKeyPhoneNumber() : super._();

  /// Deserialize.
  factory InputPrivacyKeyPhoneNumber.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Privacy Key Added By Phone.
///
/// ID: `d1219bdd`.
class InputPrivacyKeyAddedByPhone extends InputPrivacyKeyBase {
  /// Input Privacy Key Added By Phone constructor.
  const InputPrivacyKeyAddedByPhone() : super._();

  /// Deserialize.
  factory InputPrivacyKeyAddedByPhone.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Privacy Key Voice Messages.
///
/// ID: `aee69d68`.
class InputPrivacyKeyVoiceMessages extends InputPrivacyKeyBase {
  /// Input Privacy Key Voice Messages constructor.
  const InputPrivacyKeyVoiceMessages() : super._();

  /// Deserialize.
  factory InputPrivacyKeyVoiceMessages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Privacy Key About.
///
/// ID: `3823cc40`.
class InputPrivacyKeyAbout extends InputPrivacyKeyBase {
  /// Input Privacy Key About constructor.
  const InputPrivacyKeyAbout() : super._();

  /// Deserialize.
  factory InputPrivacyKeyAbout.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Privacy Key.
abstract class PrivacyKeyBase extends TlConstructor {
  /// Predicate Privacy Key constructor.
  const PrivacyKeyBase._() : super._();
}

/// Privacy Key Status Timestamp.
///
/// ID: `bc2eab30`.
class PrivacyKeyStatusTimestamp extends PrivacyKeyBase {
  /// Privacy Key Status Timestamp constructor.
  const PrivacyKeyStatusTimestamp() : super._();

  /// Deserialize.
  factory PrivacyKeyStatusTimestamp.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Privacy Key Chat Invite.
///
/// ID: `500e6dfa`.
class PrivacyKeyChatInvite extends PrivacyKeyBase {
  /// Privacy Key Chat Invite constructor.
  const PrivacyKeyChatInvite() : super._();

  /// Deserialize.
  factory PrivacyKeyChatInvite.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Privacy Key Phone Call.
///
/// ID: `3d662b7b`.
class PrivacyKeyPhoneCall extends PrivacyKeyBase {
  /// Privacy Key Phone Call constructor.
  const PrivacyKeyPhoneCall() : super._();

  /// Deserialize.
  factory PrivacyKeyPhoneCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Privacy Key Phone P2 P.
///
/// ID: `39491cc8`.
class PrivacyKeyPhoneP2P extends PrivacyKeyBase {
  /// Privacy Key Phone P2 P constructor.
  const PrivacyKeyPhoneP2P() : super._();

  /// Deserialize.
  factory PrivacyKeyPhoneP2P.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Privacy Key Forwards.
///
/// ID: `69ec56a3`.
class PrivacyKeyForwards extends PrivacyKeyBase {
  /// Privacy Key Forwards constructor.
  const PrivacyKeyForwards() : super._();

  /// Deserialize.
  factory PrivacyKeyForwards.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Privacy Key Profile Photo.
///
/// ID: `96151fed`.
class PrivacyKeyProfilePhoto extends PrivacyKeyBase {
  /// Privacy Key Profile Photo constructor.
  const PrivacyKeyProfilePhoto() : super._();

  /// Deserialize.
  factory PrivacyKeyProfilePhoto.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Privacy Key Phone Number.
///
/// ID: `d19ae46d`.
class PrivacyKeyPhoneNumber extends PrivacyKeyBase {
  /// Privacy Key Phone Number constructor.
  const PrivacyKeyPhoneNumber() : super._();

  /// Deserialize.
  factory PrivacyKeyPhoneNumber.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Privacy Key Added By Phone.
///
/// ID: `42ffd42b`.
class PrivacyKeyAddedByPhone extends PrivacyKeyBase {
  /// Privacy Key Added By Phone constructor.
  const PrivacyKeyAddedByPhone() : super._();

  /// Deserialize.
  factory PrivacyKeyAddedByPhone.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Privacy Key Voice Messages.
///
/// ID: `0697f414`.
class PrivacyKeyVoiceMessages extends PrivacyKeyBase {
  /// Privacy Key Voice Messages constructor.
  const PrivacyKeyVoiceMessages() : super._();

  /// Deserialize.
  factory PrivacyKeyVoiceMessages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Privacy Key About.
///
/// ID: `a486b761`.
class PrivacyKeyAbout extends PrivacyKeyBase {
  /// Privacy Key About constructor.
  const PrivacyKeyAbout() : super._();

  /// Deserialize.
  factory PrivacyKeyAbout.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Privacy Rule.
abstract class InputPrivacyRuleBase extends TlConstructor {
  /// Predicate Input Privacy Rule constructor.
  const InputPrivacyRuleBase._() : super._();
}

/// Input Privacy Value Allow Contacts.
///
/// ID: `0d09e07b`.
class InputPrivacyValueAllowContacts extends InputPrivacyRuleBase {
  /// Input Privacy Value Allow Contacts constructor.
  const InputPrivacyValueAllowContacts() : super._();

  /// Deserialize.
  factory InputPrivacyValueAllowContacts.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Privacy Value Allow All.
///
/// ID: `184b35ce`.
class InputPrivacyValueAllowAll extends InputPrivacyRuleBase {
  /// Input Privacy Value Allow All constructor.
  const InputPrivacyValueAllowAll() : super._();

  /// Deserialize.
  factory InputPrivacyValueAllowAll.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Privacy Value Allow Users.
///
/// ID: `131cc67f`.
class InputPrivacyValueAllowUsers extends InputPrivacyRuleBase {
  /// Input Privacy Value Allow Users constructor.
  const InputPrivacyValueAllowUsers({
    required this.users,
  }) : super._();

  /// Deserialize.
  factory InputPrivacyValueAllowUsers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Users.
  final List<InputUserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Privacy Value Disallow Contacts.
///
/// ID: `0ba52007`.
class InputPrivacyValueDisallowContacts extends InputPrivacyRuleBase {
  /// Input Privacy Value Disallow Contacts constructor.
  const InputPrivacyValueDisallowContacts() : super._();

  /// Deserialize.
  factory InputPrivacyValueDisallowContacts.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Privacy Value Disallow All.
///
/// ID: `d66b66c9`.
class InputPrivacyValueDisallowAll extends InputPrivacyRuleBase {
  /// Input Privacy Value Disallow All constructor.
  const InputPrivacyValueDisallowAll() : super._();

  /// Deserialize.
  factory InputPrivacyValueDisallowAll.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Privacy Value Disallow Users.
///
/// ID: `90110467`.
class InputPrivacyValueDisallowUsers extends InputPrivacyRuleBase {
  /// Input Privacy Value Disallow Users constructor.
  const InputPrivacyValueDisallowUsers({
    required this.users,
  }) : super._();

  /// Deserialize.
  factory InputPrivacyValueDisallowUsers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Users.
  final List<InputUserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Privacy Value Allow Chat Participants.
///
/// ID: `840649cf`.
class InputPrivacyValueAllowChatParticipants extends InputPrivacyRuleBase {
  /// Input Privacy Value Allow Chat Participants constructor.
  const InputPrivacyValueAllowChatParticipants({
    required this.chats,
  }) : super._();

  /// Deserialize.
  factory InputPrivacyValueAllowChatParticipants.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chats.
  final List<int> chats;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Privacy Value Disallow Chat Participants.
///
/// ID: `e94f0f86`.
class InputPrivacyValueDisallowChatParticipants extends InputPrivacyRuleBase {
  /// Input Privacy Value Disallow Chat Participants constructor.
  const InputPrivacyValueDisallowChatParticipants({
    required this.chats,
  }) : super._();

  /// Deserialize.
  factory InputPrivacyValueDisallowChatParticipants.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Chats.
  final List<int> chats;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Privacy Value Allow Close Friends.
///
/// ID: `2f453e49`.
class InputPrivacyValueAllowCloseFriends extends InputPrivacyRuleBase {
  /// Input Privacy Value Allow Close Friends constructor.
  const InputPrivacyValueAllowCloseFriends() : super._();

  /// Deserialize.
  factory InputPrivacyValueAllowCloseFriends.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Privacy Rule.
abstract class PrivacyRuleBase extends TlConstructor {
  /// Predicate Privacy Rule constructor.
  const PrivacyRuleBase._() : super._();
}

/// Privacy Value Allow Contacts.
///
/// ID: `fffe1bac`.
class PrivacyValueAllowContacts extends PrivacyRuleBase {
  /// Privacy Value Allow Contacts constructor.
  const PrivacyValueAllowContacts() : super._();

  /// Deserialize.
  factory PrivacyValueAllowContacts.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Privacy Value Allow All.
///
/// ID: `65427b82`.
class PrivacyValueAllowAll extends PrivacyRuleBase {
  /// Privacy Value Allow All constructor.
  const PrivacyValueAllowAll() : super._();

  /// Deserialize.
  factory PrivacyValueAllowAll.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Privacy Value Allow Users.
///
/// ID: `b8905fb2`.
class PrivacyValueAllowUsers extends PrivacyRuleBase {
  /// Privacy Value Allow Users constructor.
  const PrivacyValueAllowUsers({
    required this.users,
  }) : super._();

  /// Deserialize.
  factory PrivacyValueAllowUsers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Users.
  final List<int> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Privacy Value Disallow Contacts.
///
/// ID: `f888fa1a`.
class PrivacyValueDisallowContacts extends PrivacyRuleBase {
  /// Privacy Value Disallow Contacts constructor.
  const PrivacyValueDisallowContacts() : super._();

  /// Deserialize.
  factory PrivacyValueDisallowContacts.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Privacy Value Disallow All.
///
/// ID: `8b73e763`.
class PrivacyValueDisallowAll extends PrivacyRuleBase {
  /// Privacy Value Disallow All constructor.
  const PrivacyValueDisallowAll() : super._();

  /// Deserialize.
  factory PrivacyValueDisallowAll.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Privacy Value Disallow Users.
///
/// ID: `e4621141`.
class PrivacyValueDisallowUsers extends PrivacyRuleBase {
  /// Privacy Value Disallow Users constructor.
  const PrivacyValueDisallowUsers({
    required this.users,
  }) : super._();

  /// Deserialize.
  factory PrivacyValueDisallowUsers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Users.
  final List<int> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Privacy Value Allow Chat Participants.
///
/// ID: `6b134e8e`.
class PrivacyValueAllowChatParticipants extends PrivacyRuleBase {
  /// Privacy Value Allow Chat Participants constructor.
  const PrivacyValueAllowChatParticipants({
    required this.chats,
  }) : super._();

  /// Deserialize.
  factory PrivacyValueAllowChatParticipants.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chats.
  final List<int> chats;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Privacy Value Disallow Chat Participants.
///
/// ID: `41c87565`.
class PrivacyValueDisallowChatParticipants extends PrivacyRuleBase {
  /// Privacy Value Disallow Chat Participants constructor.
  const PrivacyValueDisallowChatParticipants({
    required this.chats,
  }) : super._();

  /// Deserialize.
  factory PrivacyValueDisallowChatParticipants.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chats.
  final List<int> chats;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Privacy Value Allow Close Friends.
///
/// ID: `f7e8d89b`.
class PrivacyValueAllowCloseFriends extends PrivacyRuleBase {
  /// Privacy Value Allow Close Friends constructor.
  const PrivacyValueAllowCloseFriends() : super._();

  /// Deserialize.
  factory PrivacyValueAllowCloseFriends.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Account Privacy Rules.
abstract class AccountPrivacyRulesBase extends TlConstructor {
  /// Predicate Account Privacy Rules constructor.
  const AccountPrivacyRulesBase._() : super._();
}

/// Account Privacy Rules.
///
/// ID: `50a04e45`.
class AccountPrivacyRules extends AccountPrivacyRulesBase {
  /// Account Privacy Rules constructor.
  const AccountPrivacyRules({
    required this.rules,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory AccountPrivacyRules.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Rules.
  final List<PrivacyRuleBase> rules;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Account Days T T L.
abstract class AccountDaysTTLBase extends TlConstructor {
  /// Predicate Account Days T T L constructor.
  const AccountDaysTTLBase._() : super._();
}

/// Account Days T T L.
///
/// ID: `b8d0afdf`.
class AccountDaysTTL extends AccountDaysTTLBase {
  /// Account Days T T L constructor.
  const AccountDaysTTL({
    required this.days,
  }) : super._();

  /// Deserialize.
  factory AccountDaysTTL.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Days.
  final int days;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Document Attribute.
abstract class DocumentAttributeBase extends TlConstructor {
  /// Predicate Document Attribute constructor.
  const DocumentAttributeBase._() : super._();
}

/// Document Attribute Image Size.
///
/// ID: `6c37c15c`.
class DocumentAttributeImageSize extends DocumentAttributeBase {
  /// Document Attribute Image Size constructor.
  const DocumentAttributeImageSize({
    required this.w,
    required this.h,
  }) : super._();

  /// Deserialize.
  factory DocumentAttributeImageSize.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// W.
  final int w;

  /// H.
  final int h;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Document Attribute Animated.
///
/// ID: `11b58939`.
class DocumentAttributeAnimated extends DocumentAttributeBase {
  /// Document Attribute Animated constructor.
  const DocumentAttributeAnimated() : super._();

  /// Deserialize.
  factory DocumentAttributeAnimated.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Document Attribute Sticker.
///
/// ID: `6319d612`.
class DocumentAttributeSticker extends DocumentAttributeBase {
  /// Document Attribute Sticker constructor.
  const DocumentAttributeSticker({
    required this.flags,
    required this.alt,
    required this.stickerset,
    required this.maskCoords,
  }) : super._();

  /// Deserialize.
  factory DocumentAttributeSticker.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// mask: bit
  bool get mask => _bit(flags, 1);

  /// Alt.
  final String alt;

  /// Stickerset.
  final InputStickerSetBase stickerset;

  /// Mask Coords.
  final MaskCoordsBase? maskCoords;

  /// If [maskCoords] exists.
  bool get hasMaskCoordsField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Document Attribute Video.
///
/// ID: `d38ff1c2`.
class DocumentAttributeVideo extends DocumentAttributeBase {
  /// Document Attribute Video constructor.
  const DocumentAttributeVideo({
    required this.flags,
    required this.duration,
    required this.w,
    required this.h,
    required this.preloadPrefixSize,
  }) : super._();

  /// Deserialize.
  factory DocumentAttributeVideo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// round_message: bit
  bool get roundMessage => _bit(flags, 0);

  /// supports_streaming: bit
  bool get supportsStreaming => _bit(flags, 1);

  /// nosound: bit
  bool get nosound => _bit(flags, 3);

  /// Duration.
  final double duration;

  /// W.
  final int w;

  /// H.
  final int h;

  /// Preload Prefix Size.
  final int? preloadPrefixSize;

  /// If [preloadPrefixSize] exists.
  bool get hasPreloadPrefixSizeField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Document Attribute Audio.
///
/// ID: `9852f9c6`.
class DocumentAttributeAudio extends DocumentAttributeBase {
  /// Document Attribute Audio constructor.
  const DocumentAttributeAudio({
    required this.flags,
    required this.duration,
    required this.title,
    required this.performer,
    required this.waveform,
  }) : super._();

  /// Deserialize.
  factory DocumentAttributeAudio.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// voice: bit
  bool get voice => _bit(flags, 10);

  /// Duration.
  final int duration;

  /// Title.
  final String? title;

  /// If [title] exists.
  bool get hasTitleField => _bit(flags, 0);

  /// Performer.
  final String? performer;

  /// If [performer] exists.
  bool get hasPerformerField => _bit(flags, 1);

  /// Waveform.
  final Uint8List? waveform;

  /// If [waveform] exists.
  bool get hasWaveformField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Document Attribute Filename.
///
/// ID: `15590068`.
class DocumentAttributeFilename extends DocumentAttributeBase {
  /// Document Attribute Filename constructor.
  const DocumentAttributeFilename({
    required this.fileName,
  }) : super._();

  /// Deserialize.
  factory DocumentAttributeFilename.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// File Name.
  final String fileName;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Document Attribute Has Stickers.
///
/// ID: `9801d2f7`.
class DocumentAttributeHasStickers extends DocumentAttributeBase {
  /// Document Attribute Has Stickers constructor.
  const DocumentAttributeHasStickers() : super._();

  /// Deserialize.
  factory DocumentAttributeHasStickers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Document Attribute Custom Emoji.
///
/// ID: `fd149899`.
class DocumentAttributeCustomEmoji extends DocumentAttributeBase {
  /// Document Attribute Custom Emoji constructor.
  const DocumentAttributeCustomEmoji({
    required this.flags,
    required this.alt,
    required this.stickerset,
  }) : super._();

  /// Deserialize.
  factory DocumentAttributeCustomEmoji.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// free: bit
  bool get free => _bit(flags, 0);

  /// text_color: bit
  bool get textColor => _bit(flags, 1);

  /// Alt.
  final String alt;

  /// Stickerset.
  final InputStickerSetBase stickerset;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Stickers.
abstract class MessagesStickersBase extends TlConstructor {
  /// Predicate Messages Stickers constructor.
  const MessagesStickersBase._() : super._();
}

/// Messages Stickers Not Modified.
///
/// ID: `f1749a22`.
class MessagesStickersNotModified extends MessagesStickersBase {
  /// Messages Stickers Not Modified constructor.
  const MessagesStickersNotModified() : super._();

  /// Deserialize.
  factory MessagesStickersNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Stickers.
///
/// ID: `30a6ec7e`.
class MessagesStickers extends MessagesStickersBase {
  /// Messages Stickers constructor.
  const MessagesStickers({
    required this.hash,
    required this.stickers,
  }) : super._();

  /// Deserialize.
  factory MessagesStickers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Stickers.
  final List<DocumentBase> stickers;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Sticker Pack.
abstract class StickerPackBase extends TlConstructor {
  /// Predicate Sticker Pack constructor.
  const StickerPackBase._() : super._();
}

/// Sticker Pack.
///
/// ID: `12b299d4`.
class StickerPack extends StickerPackBase {
  /// Sticker Pack constructor.
  const StickerPack({
    required this.emoticon,
    required this.documents,
  }) : super._();

  /// Deserialize.
  factory StickerPack.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Emoticon.
  final String emoticon;

  /// Documents.
  final List<int> documents;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages All Stickers.
abstract class MessagesAllStickersBase extends TlConstructor {
  /// Predicate Messages All Stickers constructor.
  const MessagesAllStickersBase._() : super._();
}

/// Messages All Stickers Not Modified.
///
/// ID: `e86602c3`.
class MessagesAllStickersNotModified extends MessagesAllStickersBase {
  /// Messages All Stickers Not Modified constructor.
  const MessagesAllStickersNotModified() : super._();

  /// Deserialize.
  factory MessagesAllStickersNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages All Stickers.
///
/// ID: `cdbbcebb`.
class MessagesAllStickers extends MessagesAllStickersBase {
  /// Messages All Stickers constructor.
  const MessagesAllStickers({
    required this.hash,
    required this.sets,
  }) : super._();

  /// Deserialize.
  factory MessagesAllStickers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Sets.
  final List<StickerSetBase> sets;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Affected Messages.
abstract class MessagesAffectedMessagesBase extends TlConstructor {
  /// Predicate Messages Affected Messages constructor.
  const MessagesAffectedMessagesBase._() : super._();
}

/// Messages Affected Messages.
///
/// ID: `84d19185`.
class MessagesAffectedMessages extends MessagesAffectedMessagesBase {
  /// Messages Affected Messages constructor.
  const MessagesAffectedMessages({
    required this.pts,
    required this.ptsCount,
  }) : super._();

  /// Deserialize.
  factory MessagesAffectedMessages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Pts.
  final int pts;

  /// Pts Count.
  final int ptsCount;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Web Page.
abstract class WebPageBase extends TlConstructor {
  /// Predicate Web Page constructor.
  const WebPageBase._() : super._();
}

/// Web Page Empty.
///
/// ID: `211a1788`.
class WebPageEmpty extends WebPageBase {
  /// Web Page Empty constructor.
  const WebPageEmpty({
    required this.flags,
    required this.id,
    required this.url,
  }) : super._();

  /// Deserialize.
  factory WebPageEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Id.
  final int id;

  /// Url.
  final String? url;

  /// If [url] exists.
  bool get hasUrlField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Web Page Pending.
///
/// ID: `b0d13e47`.
class WebPagePending extends WebPageBase {
  /// Web Page Pending constructor.
  const WebPagePending({
    required this.flags,
    required this.id,
    required this.url,
    required this.date,
  }) : super._();

  /// Deserialize.
  factory WebPagePending.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Id.
  final int id;

  /// Url.
  final String? url;

  /// If [url] exists.
  bool get hasUrlField => _bit(flags, 0);

  /// Date.
  final int date;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Web Page.
///
/// ID: `e89c45b2`.
class WebPage extends WebPageBase {
  /// Web Page constructor.
  const WebPage({
    required this.flags,
    required this.id,
    required this.url,
    required this.displayUrl,
    required this.hash,
    required this.type,
    required this.siteName,
    required this.title,
    required this.description,
    required this.photo,
    required this.embedUrl,
    required this.embedType,
    required this.embedWidth,
    required this.embedHeight,
    required this.duration,
    required this.author,
    required this.document,
    required this.cachedPage,
    required this.attributes,
  }) : super._();

  /// Deserialize.
  factory WebPage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// has_large_media: bit
  bool get hasLargeMedia => _bit(flags, 13);

  /// Id.
  final int id;

  /// Url.
  final String url;

  /// Display Url.
  final String displayUrl;

  /// Hash.
  final int hash;

  /// Type.
  final String? type;

  /// If [type] exists.
  bool get hasTypeField => _bit(flags, 0);

  /// Site Name.
  final String? siteName;

  /// If [siteName] exists.
  bool get hasSiteNameField => _bit(flags, 1);

  /// Title.
  final String? title;

  /// If [title] exists.
  bool get hasTitleField => _bit(flags, 2);

  /// Description.
  final String? description;

  /// If [description] exists.
  bool get hasDescriptionField => _bit(flags, 3);

  /// Photo.
  final PhotoBase? photo;

  /// If [photo] exists.
  bool get hasPhotoField => _bit(flags, 4);

  /// Embed Url.
  final String? embedUrl;

  /// If [embedUrl] exists.
  bool get hasEmbedUrlField => _bit(flags, 5);

  /// Embed Type.
  final String? embedType;

  /// If [embedType] exists.
  bool get hasEmbedTypeField => _bit(flags, 5);

  /// Embed Width.
  final int? embedWidth;

  /// If [embedWidth] exists.
  bool get hasEmbedWidthField => _bit(flags, 6);

  /// Embed Height.
  final int? embedHeight;

  /// If [embedHeight] exists.
  bool get hasEmbedHeightField => _bit(flags, 6);

  /// Duration.
  final int? duration;

  /// If [duration] exists.
  bool get hasDurationField => _bit(flags, 7);

  /// Author.
  final String? author;

  /// If [author] exists.
  bool get hasAuthorField => _bit(flags, 8);

  /// Document.
  final DocumentBase? document;

  /// If [document] exists.
  bool get hasDocumentField => _bit(flags, 9);

  /// Cached Page.
  final PageBase? cachedPage;

  /// If [cachedPage] exists.
  bool get hasCachedPageField => _bit(flags, 10);

  /// Attributes.
  final List<WebPageAttributeBase>? attributes;

  /// If [attributes] exists.
  bool get hasAttributesField => _bit(flags, 12);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Web Page Not Modified.
///
/// ID: `7311ca11`.
class WebPageNotModified extends WebPageBase {
  /// Web Page Not Modified constructor.
  const WebPageNotModified({
    required this.flags,
    required this.cachedPageViews,
  }) : super._();

  /// Deserialize.
  factory WebPageNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Cached Page Views.
  final int? cachedPageViews;

  /// If [cachedPageViews] exists.
  bool get hasCachedPageViewsField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Authorization.
abstract class AuthorizationBase extends TlConstructor {
  /// Predicate Authorization constructor.
  const AuthorizationBase._() : super._();
}

/// Authorization.
///
/// ID: `ad01d61d`.
class Authorization extends AuthorizationBase {
  /// Authorization constructor.
  const Authorization({
    required this.flags,
    required this.hash,
    required this.deviceModel,
    required this.platform,
    required this.systemVersion,
    required this.apiId,
    required this.appName,
    required this.appVersion,
    required this.dateCreated,
    required this.dateActive,
    required this.ip,
    required this.country,
    required this.region,
  }) : super._();

  /// Deserialize.
  factory Authorization.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// current: bit
  bool get current => _bit(flags, 0);

  /// official_app: bit
  bool get officialApp => _bit(flags, 1);

  /// password_pending: bit
  bool get passwordPending => _bit(flags, 2);

  /// encrypted_requests_disabled: bit
  bool get encryptedRequestsDisabled => _bit(flags, 3);

  /// call_requests_disabled: bit
  bool get callRequestsDisabled => _bit(flags, 4);

  /// unconfirmed: bit
  bool get unconfirmed => _bit(flags, 5);

  /// Hash.
  final int hash;

  /// Device Model.
  final String deviceModel;

  /// Platform.
  final String platform;

  /// System Version.
  final String systemVersion;

  /// Api Id.
  final int apiId;

  /// App Name.
  final String appName;

  /// App Version.
  final String appVersion;

  /// Date Created.
  final int dateCreated;

  /// Date Active.
  final int dateActive;

  /// Ip.
  final String ip;

  /// Country.
  final String country;

  /// Region.
  final String region;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Account Authorizations.
abstract class AccountAuthorizationsBase extends TlConstructor {
  /// Predicate Account Authorizations constructor.
  const AccountAuthorizationsBase._() : super._();
}

/// Account Authorizations.
///
/// ID: `4bff8ea0`.
class AccountAuthorizations extends AccountAuthorizationsBase {
  /// Account Authorizations constructor.
  const AccountAuthorizations({
    required this.authorizationTtlDays,
    required this.authorizations,
  }) : super._();

  /// Deserialize.
  factory AccountAuthorizations.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Authorization Ttl Days.
  final int authorizationTtlDays;

  /// Authorizations.
  final List<AuthorizationBase> authorizations;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Account Password.
abstract class AccountPasswordBase extends TlConstructor {
  /// Predicate Account Password constructor.
  const AccountPasswordBase._() : super._();
}

/// Account Password.
///
/// ID: `957b50fb`.
class AccountPassword extends AccountPasswordBase {
  /// Account Password constructor.
  const AccountPassword({
    required this.flags,
    required this.currentAlgo,
    required this.srpB,
    required this.srpId,
    required this.hint,
    required this.emailUnconfirmedPattern,
    required this.newAlgo,
    required this.newSecureAlgo,
    required this.secureRandom,
    required this.pendingResetDate,
    required this.loginEmailPattern,
  }) : super._();

  /// Deserialize.
  factory AccountPassword.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// has_recovery: bit
  bool get hasRecovery => _bit(flags, 0);

  /// has_secure_values: bit
  bool get hasSecureValues => _bit(flags, 1);

  /// has_password: bit
  bool get hasPassword => _bit(flags, 2);

  /// Current Algo.
  final PasswordKdfAlgoBase? currentAlgo;

  /// If [currentAlgo] exists.
  bool get hasCurrentAlgoField => _bit(flags, 2);

  /// Srp B.
  final Uint8List? srpB;

  /// If [srpB] exists.
  bool get hasSrpBField => _bit(flags, 2);

  /// Srp Id.
  final int? srpId;

  /// If [srpId] exists.
  bool get hasSrpIdField => _bit(flags, 2);

  /// Hint.
  final String? hint;

  /// If [hint] exists.
  bool get hasHintField => _bit(flags, 3);

  /// Email Unconfirmed Pattern.
  final String? emailUnconfirmedPattern;

  /// If [emailUnconfirmedPattern] exists.
  bool get hasEmailUnconfirmedPatternField => _bit(flags, 4);

  /// New Algo.
  final PasswordKdfAlgoBase newAlgo;

  /// New Secure Algo.
  final SecurePasswordKdfAlgoBase newSecureAlgo;

  /// Secure Random.
  final Uint8List secureRandom;

  /// Pending Reset Date.
  final int? pendingResetDate;

  /// If [pendingResetDate] exists.
  bool get hasPendingResetDateField => _bit(flags, 5);

  /// Login Email Pattern.
  final String? loginEmailPattern;

  /// If [loginEmailPattern] exists.
  bool get hasLoginEmailPatternField => _bit(flags, 6);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Account Password Settings.
abstract class AccountPasswordSettingsBase extends TlConstructor {
  /// Predicate Account Password Settings constructor.
  const AccountPasswordSettingsBase._() : super._();
}

/// Account Password Settings.
///
/// ID: `9a5c33e5`.
class AccountPasswordSettings extends AccountPasswordSettingsBase {
  /// Account Password Settings constructor.
  const AccountPasswordSettings({
    required this.flags,
    required this.email,
    required this.secureSettings,
  }) : super._();

  /// Deserialize.
  factory AccountPasswordSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Email.
  final String? email;

  /// If [email] exists.
  bool get hasEmailField => _bit(flags, 0);

  /// Secure Settings.
  final SecureSecretSettingsBase? secureSettings;

  /// If [secureSettings] exists.
  bool get hasSecureSettingsField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Account Password Input Settings.
abstract class AccountPasswordInputSettingsBase extends TlConstructor {
  /// Predicate Account Password Input Settings constructor.
  const AccountPasswordInputSettingsBase._() : super._();
}

/// Account Password Input Settings.
///
/// ID: `c23727c9`.
class AccountPasswordInputSettings extends AccountPasswordInputSettingsBase {
  /// Account Password Input Settings constructor.
  const AccountPasswordInputSettings({
    required this.flags,
    required this.newAlgo,
    required this.newPasswordHash,
    required this.hint,
    required this.email,
    required this.newSecureSettings,
  }) : super._();

  /// Deserialize.
  factory AccountPasswordInputSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// New Algo.
  final PasswordKdfAlgoBase? newAlgo;

  /// If [newAlgo] exists.
  bool get hasNewAlgoField => _bit(flags, 0);

  /// New Password Hash.
  final Uint8List? newPasswordHash;

  /// If [newPasswordHash] exists.
  bool get hasNewPasswordHashField => _bit(flags, 0);

  /// Hint.
  final String? hint;

  /// If [hint] exists.
  bool get hasHintField => _bit(flags, 0);

  /// Email.
  final String? email;

  /// If [email] exists.
  bool get hasEmailField => _bit(flags, 1);

  /// New Secure Settings.
  final SecureSecretSettingsBase? newSecureSettings;

  /// If [newSecureSettings] exists.
  bool get hasNewSecureSettingsField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Auth Password Recovery.
abstract class AuthPasswordRecoveryBase extends TlConstructor {
  /// Predicate Auth Password Recovery constructor.
  const AuthPasswordRecoveryBase._() : super._();
}

/// Auth Password Recovery.
///
/// ID: `137948a5`.
class AuthPasswordRecovery extends AuthPasswordRecoveryBase {
  /// Auth Password Recovery constructor.
  const AuthPasswordRecovery({
    required this.emailPattern,
  }) : super._();

  /// Deserialize.
  factory AuthPasswordRecovery.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Email Pattern.
  final String emailPattern;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Received Notify Message.
abstract class ReceivedNotifyMessageBase extends TlConstructor {
  /// Predicate Received Notify Message constructor.
  const ReceivedNotifyMessageBase._() : super._();
}

/// Received Notify Message.
///
/// ID: `a384b779`.
class ReceivedNotifyMessage extends ReceivedNotifyMessageBase {
  /// Received Notify Message constructor.
  const ReceivedNotifyMessage({
    required this.id,
    required this.flags,
  }) : super._();

  /// Deserialize.
  factory ReceivedNotifyMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Flags.
  final int flags;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Exported Chat Invite.
abstract class ExportedChatInviteBase extends TlConstructor {
  /// Predicate Exported Chat Invite constructor.
  const ExportedChatInviteBase._() : super._();
}

/// Chat Invite Exported.
///
/// ID: `0ab4a819`.
class ChatInviteExported extends ExportedChatInviteBase {
  /// Chat Invite Exported constructor.
  const ChatInviteExported({
    required this.flags,
    required this.link,
    required this.adminId,
    required this.date,
    required this.startDate,
    required this.expireDate,
    required this.usageLimit,
    required this.usage,
    required this.requested,
    required this.title,
  }) : super._();

  /// Deserialize.
  factory ChatInviteExported.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// revoked: bit
  bool get revoked => _bit(flags, 0);

  /// permanent: bit
  bool get permanent => _bit(flags, 5);

  /// request_needed: bit
  bool get requestNeeded => _bit(flags, 6);

  /// Link.
  final String link;

  /// Admin Id.
  final int adminId;

  /// Date.
  final int date;

  /// Start Date.
  final int? startDate;

  /// If [startDate] exists.
  bool get hasStartDateField => _bit(flags, 4);

  /// Expire Date.
  final int? expireDate;

  /// If [expireDate] exists.
  bool get hasExpireDateField => _bit(flags, 1);

  /// Usage Limit.
  final int? usageLimit;

  /// If [usageLimit] exists.
  bool get hasUsageLimitField => _bit(flags, 2);

  /// Usage.
  final int? usage;

  /// If [usage] exists.
  bool get hasUsageField => _bit(flags, 3);

  /// Requested.
  final int? requested;

  /// If [requested] exists.
  bool get hasRequestedField => _bit(flags, 7);

  /// Title.
  final String? title;

  /// If [title] exists.
  bool get hasTitleField => _bit(flags, 8);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Chat Invite Public Join Requests.
///
/// ID: `ed107ab7`.
class ChatInvitePublicJoinRequests extends ExportedChatInviteBase {
  /// Chat Invite Public Join Requests constructor.
  const ChatInvitePublicJoinRequests() : super._();

  /// Deserialize.
  factory ChatInvitePublicJoinRequests.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Chat Invite.
abstract class ChatInviteBase extends TlConstructor {
  /// Predicate Chat Invite constructor.
  const ChatInviteBase._() : super._();
}

/// Chat Invite Already.
///
/// ID: `5a686d7c`.
class ChatInviteAlready extends ChatInviteBase {
  /// Chat Invite Already constructor.
  const ChatInviteAlready({
    required this.chat,
  }) : super._();

  /// Deserialize.
  factory ChatInviteAlready.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chat.
  final ChatBase chat;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Chat Invite.
///
/// ID: `cde0ec40`.
class ChatInvite extends ChatInviteBase {
  /// Chat Invite constructor.
  const ChatInvite({
    required this.flags,
    required this.title,
    required this.about,
    required this.photo,
    required this.participantsCount,
    required this.participants,
    required this.color,
  }) : super._();

  /// Deserialize.
  factory ChatInvite.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// channel: bit
  bool get channel => _bit(flags, 0);

  /// broadcast: bit
  bool get broadcast => _bit(flags, 1);

  /// public: bit
  bool get public => _bit(flags, 2);

  /// megagroup: bit
  bool get megagroup => _bit(flags, 3);

  /// request_needed: bit
  bool get requestNeeded => _bit(flags, 6);

  /// verified: bit
  bool get verified => _bit(flags, 7);

  /// scam: bit
  bool get scam => _bit(flags, 8);

  /// fake: bit
  bool get fake => _bit(flags, 9);

  /// Title.
  final String title;

  /// About.
  final String? about;

  /// If [about] exists.
  bool get hasAboutField => _bit(flags, 5);

  /// Photo.
  final PhotoBase photo;

  /// Participants Count.
  final int participantsCount;

  /// Participants.
  final List<UserBase>? participants;

  /// If [participants] exists.
  bool get hasParticipantsField => _bit(flags, 4);

  /// Color.
  final int color;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Chat Invite Peek.
///
/// ID: `61695cb0`.
class ChatInvitePeek extends ChatInviteBase {
  /// Chat Invite Peek constructor.
  const ChatInvitePeek({
    required this.chat,
    required this.expires,
  }) : super._();

  /// Deserialize.
  factory ChatInvitePeek.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chat.
  final ChatBase chat;

  /// Expires.
  final int expires;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Sticker Set.
abstract class InputStickerSetBase extends TlConstructor {
  /// Predicate Input Sticker Set constructor.
  const InputStickerSetBase._() : super._();
}

/// Input Sticker Set Empty.
///
/// ID: `ffb62b95`.
class InputStickerSetEmpty extends InputStickerSetBase {
  /// Input Sticker Set Empty constructor.
  const InputStickerSetEmpty() : super._();

  /// Deserialize.
  factory InputStickerSetEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Sticker Set I D.
///
/// ID: `9de7a269`.
class InputStickerSetID extends InputStickerSetBase {
  /// Input Sticker Set I D constructor.
  const InputStickerSetID({
    required this.id,
    required this.accessHash,
  }) : super._();

  /// Deserialize.
  factory InputStickerSetID.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Sticker Set Short Name.
///
/// ID: `861cc8a0`.
class InputStickerSetShortName extends InputStickerSetBase {
  /// Input Sticker Set Short Name constructor.
  const InputStickerSetShortName({
    required this.shortName,
  }) : super._();

  /// Deserialize.
  factory InputStickerSetShortName.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Short Name.
  final String shortName;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Sticker Set Animated Emoji.
///
/// ID: `028703c8`.
class InputStickerSetAnimatedEmoji extends InputStickerSetBase {
  /// Input Sticker Set Animated Emoji constructor.
  const InputStickerSetAnimatedEmoji() : super._();

  /// Deserialize.
  factory InputStickerSetAnimatedEmoji.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Sticker Set Dice.
///
/// ID: `e67f520e`.
class InputStickerSetDice extends InputStickerSetBase {
  /// Input Sticker Set Dice constructor.
  const InputStickerSetDice({
    required this.emoticon,
  }) : super._();

  /// Deserialize.
  factory InputStickerSetDice.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Emoticon.
  final String emoticon;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Sticker Set Animated Emoji Animations.
///
/// ID: `0cde3739`.
class InputStickerSetAnimatedEmojiAnimations extends InputStickerSetBase {
  /// Input Sticker Set Animated Emoji Animations constructor.
  const InputStickerSetAnimatedEmojiAnimations() : super._();

  /// Deserialize.
  factory InputStickerSetAnimatedEmojiAnimations.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Sticker Set Premium Gifts.
///
/// ID: `c88b3b02`.
class InputStickerSetPremiumGifts extends InputStickerSetBase {
  /// Input Sticker Set Premium Gifts constructor.
  const InputStickerSetPremiumGifts() : super._();

  /// Deserialize.
  factory InputStickerSetPremiumGifts.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Sticker Set Emoji Generic Animations.
///
/// ID: `04c4d4ce`.
class InputStickerSetEmojiGenericAnimations extends InputStickerSetBase {
  /// Input Sticker Set Emoji Generic Animations constructor.
  const InputStickerSetEmojiGenericAnimations() : super._();

  /// Deserialize.
  factory InputStickerSetEmojiGenericAnimations.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Sticker Set Emoji Default Statuses.
///
/// ID: `29d0f5ee`.
class InputStickerSetEmojiDefaultStatuses extends InputStickerSetBase {
  /// Input Sticker Set Emoji Default Statuses constructor.
  const InputStickerSetEmojiDefaultStatuses() : super._();

  /// Deserialize.
  factory InputStickerSetEmojiDefaultStatuses.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Sticker Set Emoji Default Topic Icons.
///
/// ID: `44c1f8e9`.
class InputStickerSetEmojiDefaultTopicIcons extends InputStickerSetBase {
  /// Input Sticker Set Emoji Default Topic Icons constructor.
  const InputStickerSetEmojiDefaultTopicIcons() : super._();

  /// Deserialize.
  factory InputStickerSetEmojiDefaultTopicIcons.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Sticker Set Emoji Channel Default Statuses.
///
/// ID: `49748553`.
class InputStickerSetEmojiChannelDefaultStatuses extends InputStickerSetBase {
  /// Input Sticker Set Emoji Channel Default Statuses constructor.
  const InputStickerSetEmojiChannelDefaultStatuses() : super._();

  /// Deserialize.
  factory InputStickerSetEmojiChannelDefaultStatuses.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Sticker Set.
abstract class StickerSetBase extends TlConstructor {
  /// Predicate Sticker Set constructor.
  const StickerSetBase._() : super._();
}

/// Sticker Set.
///
/// ID: `2dd14edc`.
class StickerSet extends StickerSetBase {
  /// Sticker Set constructor.
  const StickerSet({
    required this.flags,
    required this.installedDate,
    required this.id,
    required this.accessHash,
    required this.title,
    required this.shortName,
    required this.thumbs,
    required this.thumbDcId,
    required this.thumbVersion,
    required this.thumbDocumentId,
    required this.count,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory StickerSet.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// archived: bit
  bool get archived => _bit(flags, 1);

  /// official: bit
  bool get official => _bit(flags, 2);

  /// masks: bit
  bool get masks => _bit(flags, 3);

  /// animated: bit
  bool get animated => _bit(flags, 5);

  /// videos: bit
  bool get videos => _bit(flags, 6);

  /// emojis: bit
  bool get emojis => _bit(flags, 7);

  /// text_color: bit
  bool get textColor => _bit(flags, 9);

  /// channel_emoji_status: bit
  bool get channelEmojiStatus => _bit(flags, 10);

  /// Installed Date.
  final int? installedDate;

  /// If [installedDate] exists.
  bool get hasInstalledDateField => _bit(flags, 0);

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Title.
  final String title;

  /// Short Name.
  final String shortName;

  /// Thumbs.
  final List<PhotoSizeBase>? thumbs;

  /// If [thumbs] exists.
  bool get hasThumbsField => _bit(flags, 4);

  /// Thumb Dc Id.
  final int? thumbDcId;

  /// If [thumbDcId] exists.
  bool get hasThumbDcIdField => _bit(flags, 4);

  /// Thumb Version.
  final int? thumbVersion;

  /// If [thumbVersion] exists.
  bool get hasThumbVersionField => _bit(flags, 4);

  /// Thumb Document Id.
  final int? thumbDocumentId;

  /// If [thumbDocumentId] exists.
  bool get hasThumbDocumentIdField => _bit(flags, 8);

  /// Count.
  final int count;

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Sticker Set.
abstract class MessagesStickerSetBase extends TlConstructor {
  /// Predicate Messages Sticker Set constructor.
  const MessagesStickerSetBase._() : super._();
}

/// Messages Sticker Set.
///
/// ID: `6e153f16`.
class MessagesStickerSet extends MessagesStickerSetBase {
  /// Messages Sticker Set constructor.
  const MessagesStickerSet({
    required this.set,
    required this.packs,
    required this.keywords,
    required this.documents,
  }) : super._();

  /// Deserialize.
  factory MessagesStickerSet.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Set.
  final StickerSetBase set;

  /// Packs.
  final List<StickerPackBase> packs;

  /// Keywords.
  final List<StickerKeywordBase> keywords;

  /// Documents.
  final List<DocumentBase> documents;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Sticker Set Not Modified.
///
/// ID: `d3f924eb`.
class MessagesStickerSetNotModified extends MessagesStickerSetBase {
  /// Messages Sticker Set Not Modified constructor.
  const MessagesStickerSetNotModified() : super._();

  /// Deserialize.
  factory MessagesStickerSetNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Bot Command.
abstract class BotCommandBase extends TlConstructor {
  /// Predicate Bot Command constructor.
  const BotCommandBase._() : super._();
}

/// Bot Command.
///
/// ID: `c27ac8c7`.
class BotCommand extends BotCommandBase {
  /// Bot Command constructor.
  const BotCommand({
    required this.command,
    required this.description,
  }) : super._();

  /// Deserialize.
  factory BotCommand.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Command.
  final String command;

  /// Description.
  final String description;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Bot Info.
abstract class BotInfoBase extends TlConstructor {
  /// Predicate Bot Info constructor.
  const BotInfoBase._() : super._();
}

/// Bot Info.
///
/// ID: `8f300b57`.
class BotInfo extends BotInfoBase {
  /// Bot Info constructor.
  const BotInfo({
    required this.flags,
    required this.userId,
    required this.description,
    required this.descriptionPhoto,
    required this.descriptionDocument,
    required this.commands,
    required this.menuButton,
  }) : super._();

  /// Deserialize.
  factory BotInfo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// User Id.
  final int? userId;

  /// If [userId] exists.
  bool get hasUserIdField => _bit(flags, 0);

  /// Description.
  final String? description;

  /// If [description] exists.
  bool get hasDescriptionField => _bit(flags, 1);

  /// Description Photo.
  final PhotoBase? descriptionPhoto;

  /// If [descriptionPhoto] exists.
  bool get hasDescriptionPhotoField => _bit(flags, 4);

  /// Description Document.
  final DocumentBase? descriptionDocument;

  /// If [descriptionDocument] exists.
  bool get hasDescriptionDocumentField => _bit(flags, 5);

  /// Commands.
  final List<BotCommandBase>? commands;

  /// If [commands] exists.
  bool get hasCommandsField => _bit(flags, 2);

  /// Menu Button.
  final BotMenuButtonBase? menuButton;

  /// If [menuButton] exists.
  bool get hasMenuButtonField => _bit(flags, 3);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Keyboard Button.
abstract class KeyboardButtonBase extends TlConstructor {
  /// Predicate Keyboard Button constructor.
  const KeyboardButtonBase._() : super._();
}

/// Keyboard Button.
///
/// ID: `a2fa4880`.
class KeyboardButton extends KeyboardButtonBase {
  /// Keyboard Button constructor.
  const KeyboardButton({
    required this.text,
  }) : super._();

  /// Deserialize.
  factory KeyboardButton.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final String text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Keyboard Button Url.
///
/// ID: `258aff05`.
class KeyboardButtonUrl extends KeyboardButtonBase {
  /// Keyboard Button Url constructor.
  const KeyboardButtonUrl({
    required this.text,
    required this.url,
  }) : super._();

  /// Deserialize.
  factory KeyboardButtonUrl.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final String text;

  /// Url.
  final String url;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Keyboard Button Callback.
///
/// ID: `35bbdb6b`.
class KeyboardButtonCallback extends KeyboardButtonBase {
  /// Keyboard Button Callback constructor.
  const KeyboardButtonCallback({
    required this.flags,
    required this.text,
    required this.data,
  }) : super._();

  /// Deserialize.
  factory KeyboardButtonCallback.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// requires_password: bit
  bool get requiresPassword => _bit(flags, 0);

  /// Text.
  final String text;

  /// Data.
  final Uint8List data;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Keyboard Button Request Phone.
///
/// ID: `b16a6c29`.
class KeyboardButtonRequestPhone extends KeyboardButtonBase {
  /// Keyboard Button Request Phone constructor.
  const KeyboardButtonRequestPhone({
    required this.text,
  }) : super._();

  /// Deserialize.
  factory KeyboardButtonRequestPhone.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final String text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Keyboard Button Request Geo Location.
///
/// ID: `fc796b3f`.
class KeyboardButtonRequestGeoLocation extends KeyboardButtonBase {
  /// Keyboard Button Request Geo Location constructor.
  const KeyboardButtonRequestGeoLocation({
    required this.text,
  }) : super._();

  /// Deserialize.
  factory KeyboardButtonRequestGeoLocation.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final String text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Keyboard Button Switch Inline.
///
/// ID: `93b9fbb5`.
class KeyboardButtonSwitchInline extends KeyboardButtonBase {
  /// Keyboard Button Switch Inline constructor.
  const KeyboardButtonSwitchInline({
    required this.flags,
    required this.text,
    required this.query,
    required this.peerTypes,
  }) : super._();

  /// Deserialize.
  factory KeyboardButtonSwitchInline.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// same_peer: bit
  bool get samePeer => _bit(flags, 0);

  /// Text.
  final String text;

  /// Query.
  final String query;

  /// Peer Types.
  final List<InlineQueryPeerTypeBase>? peerTypes;

  /// If [peerTypes] exists.
  bool get hasPeerTypesField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Keyboard Button Game.
///
/// ID: `50f41ccf`.
class KeyboardButtonGame extends KeyboardButtonBase {
  /// Keyboard Button Game constructor.
  const KeyboardButtonGame({
    required this.text,
  }) : super._();

  /// Deserialize.
  factory KeyboardButtonGame.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final String text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Keyboard Button Buy.
///
/// ID: `afd93fbb`.
class KeyboardButtonBuy extends KeyboardButtonBase {
  /// Keyboard Button Buy constructor.
  const KeyboardButtonBuy({
    required this.text,
  }) : super._();

  /// Deserialize.
  factory KeyboardButtonBuy.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final String text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Keyboard Button Url Auth.
///
/// ID: `10b78d29`.
class KeyboardButtonUrlAuth extends KeyboardButtonBase {
  /// Keyboard Button Url Auth constructor.
  const KeyboardButtonUrlAuth({
    required this.flags,
    required this.text,
    required this.fwdText,
    required this.url,
    required this.buttonId,
  }) : super._();

  /// Deserialize.
  factory KeyboardButtonUrlAuth.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Text.
  final String text;

  /// Fwd Text.
  final String? fwdText;

  /// If [fwdText] exists.
  bool get hasFwdTextField => _bit(flags, 0);

  /// Url.
  final String url;

  /// Button Id.
  final int buttonId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Keyboard Button Url Auth.
///
/// ID: `d02e7fd4`.
class InputKeyboardButtonUrlAuth extends KeyboardButtonBase {
  /// Input Keyboard Button Url Auth constructor.
  const InputKeyboardButtonUrlAuth({
    required this.flags,
    required this.text,
    required this.fwdText,
    required this.url,
    required this.bot,
  }) : super._();

  /// Deserialize.
  factory InputKeyboardButtonUrlAuth.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// request_write_access: bit
  bool get requestWriteAccess => _bit(flags, 0);

  /// Text.
  final String text;

  /// Fwd Text.
  final String? fwdText;

  /// If [fwdText] exists.
  bool get hasFwdTextField => _bit(flags, 1);

  /// Url.
  final String url;

  /// Bot.
  final InputUserBase bot;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Keyboard Button Request Poll.
///
/// ID: `bbc7515d`.
class KeyboardButtonRequestPoll extends KeyboardButtonBase {
  /// Keyboard Button Request Poll constructor.
  const KeyboardButtonRequestPoll({
    required this.flags,
    required this.quiz,
    required this.text,
  }) : super._();

  /// Deserialize.
  factory KeyboardButtonRequestPoll.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Quiz.
  final bool? quiz;

  /// If [quiz] exists.
  bool get hasQuizField => _bit(flags, 0);

  /// Text.
  final String text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Keyboard Button User Profile.
///
/// ID: `e988037b`.
class InputKeyboardButtonUserProfile extends KeyboardButtonBase {
  /// Input Keyboard Button User Profile constructor.
  const InputKeyboardButtonUserProfile({
    required this.text,
    required this.userId,
  }) : super._();

  /// Deserialize.
  factory InputKeyboardButtonUserProfile.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final String text;

  /// User Id.
  final InputUserBase userId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Keyboard Button User Profile.
///
/// ID: `308660c1`.
class KeyboardButtonUserProfile extends KeyboardButtonBase {
  /// Keyboard Button User Profile constructor.
  const KeyboardButtonUserProfile({
    required this.text,
    required this.userId,
  }) : super._();

  /// Deserialize.
  factory KeyboardButtonUserProfile.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final String text;

  /// User Id.
  final int userId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Keyboard Button Web View.
///
/// ID: `13767230`.
class KeyboardButtonWebView extends KeyboardButtonBase {
  /// Keyboard Button Web View constructor.
  const KeyboardButtonWebView({
    required this.text,
    required this.url,
  }) : super._();

  /// Deserialize.
  factory KeyboardButtonWebView.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final String text;

  /// Url.
  final String url;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Keyboard Button Simple Web View.
///
/// ID: `a0c0505c`.
class KeyboardButtonSimpleWebView extends KeyboardButtonBase {
  /// Keyboard Button Simple Web View constructor.
  const KeyboardButtonSimpleWebView({
    required this.text,
    required this.url,
  }) : super._();

  /// Deserialize.
  factory KeyboardButtonSimpleWebView.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final String text;

  /// Url.
  final String url;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Keyboard Button Request Peer.
///
/// ID: `53d7bfd8`.
class KeyboardButtonRequestPeer extends KeyboardButtonBase {
  /// Keyboard Button Request Peer constructor.
  const KeyboardButtonRequestPeer({
    required this.text,
    required this.buttonId,
    required this.peerType,
    required this.maxQuantity,
  }) : super._();

  /// Deserialize.
  factory KeyboardButtonRequestPeer.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final String text;

  /// Button Id.
  final int buttonId;

  /// Peer Type.
  final RequestPeerTypeBase peerType;

  /// Max Quantity.
  final int maxQuantity;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Keyboard Button Row.
abstract class KeyboardButtonRowBase extends TlConstructor {
  /// Predicate Keyboard Button Row constructor.
  const KeyboardButtonRowBase._() : super._();
}

/// Keyboard Button Row.
///
/// ID: `77608b83`.
class KeyboardButtonRow extends KeyboardButtonRowBase {
  /// Keyboard Button Row constructor.
  const KeyboardButtonRow({
    required this.buttons,
  }) : super._();

  /// Deserialize.
  factory KeyboardButtonRow.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Buttons.
  final List<KeyboardButtonBase> buttons;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Reply Markup.
abstract class ReplyMarkupBase extends TlConstructor {
  /// Predicate Reply Markup constructor.
  const ReplyMarkupBase._() : super._();
}

/// Reply Keyboard Hide.
///
/// ID: `a03e5b85`.
class ReplyKeyboardHide extends ReplyMarkupBase {
  /// Reply Keyboard Hide constructor.
  const ReplyKeyboardHide({
    required this.flags,
  }) : super._();

  /// Deserialize.
  factory ReplyKeyboardHide.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// selective: bit
  bool get selective => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Reply Keyboard Force Reply.
///
/// ID: `86b40b08`.
class ReplyKeyboardForceReply extends ReplyMarkupBase {
  /// Reply Keyboard Force Reply constructor.
  const ReplyKeyboardForceReply({
    required this.flags,
    required this.placeholder,
  }) : super._();

  /// Deserialize.
  factory ReplyKeyboardForceReply.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// single_use: bit
  bool get singleUse => _bit(flags, 1);

  /// selective: bit
  bool get selective => _bit(flags, 2);

  /// Placeholder.
  final String? placeholder;

  /// If [placeholder] exists.
  bool get hasPlaceholderField => _bit(flags, 3);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Reply Keyboard Markup.
///
/// ID: `85dd99d1`.
class ReplyKeyboardMarkup extends ReplyMarkupBase {
  /// Reply Keyboard Markup constructor.
  const ReplyKeyboardMarkup({
    required this.flags,
    required this.rows,
    required this.placeholder,
  }) : super._();

  /// Deserialize.
  factory ReplyKeyboardMarkup.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// resize: bit
  bool get resize => _bit(flags, 0);

  /// single_use: bit
  bool get singleUse => _bit(flags, 1);

  /// selective: bit
  bool get selective => _bit(flags, 2);

  /// persistent: bit
  bool get persistent => _bit(flags, 4);

  /// Rows.
  final List<KeyboardButtonRowBase> rows;

  /// Placeholder.
  final String? placeholder;

  /// If [placeholder] exists.
  bool get hasPlaceholderField => _bit(flags, 3);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Reply Inline Markup.
///
/// ID: `48a30254`.
class ReplyInlineMarkup extends ReplyMarkupBase {
  /// Reply Inline Markup constructor.
  const ReplyInlineMarkup({
    required this.rows,
  }) : super._();

  /// Deserialize.
  factory ReplyInlineMarkup.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Rows.
  final List<KeyboardButtonRowBase> rows;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Message Entity.
abstract class MessageEntityBase extends TlConstructor {
  /// Predicate Message Entity constructor.
  const MessageEntityBase._() : super._();
}

/// Message Entity Unknown.
///
/// ID: `bb92ba95`.
class MessageEntityUnknown extends MessageEntityBase {
  /// Message Entity Unknown constructor.
  const MessageEntityUnknown({
    required this.offset,
    required this.length,
  }) : super._();

  /// Deserialize.
  factory MessageEntityUnknown.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Offset.
  final int offset;

  /// Length.
  final int length;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Entity Mention.
///
/// ID: `fa04579d`.
class MessageEntityMention extends MessageEntityBase {
  /// Message Entity Mention constructor.
  const MessageEntityMention({
    required this.offset,
    required this.length,
  }) : super._();

  /// Deserialize.
  factory MessageEntityMention.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Offset.
  final int offset;

  /// Length.
  final int length;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Entity Hashtag.
///
/// ID: `6f635b0d`.
class MessageEntityHashtag extends MessageEntityBase {
  /// Message Entity Hashtag constructor.
  const MessageEntityHashtag({
    required this.offset,
    required this.length,
  }) : super._();

  /// Deserialize.
  factory MessageEntityHashtag.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Offset.
  final int offset;

  /// Length.
  final int length;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Entity Bot Command.
///
/// ID: `6cef8ac7`.
class MessageEntityBotCommand extends MessageEntityBase {
  /// Message Entity Bot Command constructor.
  const MessageEntityBotCommand({
    required this.offset,
    required this.length,
  }) : super._();

  /// Deserialize.
  factory MessageEntityBotCommand.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Offset.
  final int offset;

  /// Length.
  final int length;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Entity Url.
///
/// ID: `6ed02538`.
class MessageEntityUrl extends MessageEntityBase {
  /// Message Entity Url constructor.
  const MessageEntityUrl({
    required this.offset,
    required this.length,
  }) : super._();

  /// Deserialize.
  factory MessageEntityUrl.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Offset.
  final int offset;

  /// Length.
  final int length;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Entity Email.
///
/// ID: `64e475c2`.
class MessageEntityEmail extends MessageEntityBase {
  /// Message Entity Email constructor.
  const MessageEntityEmail({
    required this.offset,
    required this.length,
  }) : super._();

  /// Deserialize.
  factory MessageEntityEmail.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Offset.
  final int offset;

  /// Length.
  final int length;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Entity Bold.
///
/// ID: `bd610bc9`.
class MessageEntityBold extends MessageEntityBase {
  /// Message Entity Bold constructor.
  const MessageEntityBold({
    required this.offset,
    required this.length,
  }) : super._();

  /// Deserialize.
  factory MessageEntityBold.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Offset.
  final int offset;

  /// Length.
  final int length;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Entity Italic.
///
/// ID: `826f8b60`.
class MessageEntityItalic extends MessageEntityBase {
  /// Message Entity Italic constructor.
  const MessageEntityItalic({
    required this.offset,
    required this.length,
  }) : super._();

  /// Deserialize.
  factory MessageEntityItalic.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Offset.
  final int offset;

  /// Length.
  final int length;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Entity Code.
///
/// ID: `28a20571`.
class MessageEntityCode extends MessageEntityBase {
  /// Message Entity Code constructor.
  const MessageEntityCode({
    required this.offset,
    required this.length,
  }) : super._();

  /// Deserialize.
  factory MessageEntityCode.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Offset.
  final int offset;

  /// Length.
  final int length;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Entity Pre.
///
/// ID: `73924be0`.
class MessageEntityPre extends MessageEntityBase {
  /// Message Entity Pre constructor.
  const MessageEntityPre({
    required this.offset,
    required this.length,
    required this.language,
  }) : super._();

  /// Deserialize.
  factory MessageEntityPre.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Offset.
  final int offset;

  /// Length.
  final int length;

  /// Language.
  final String language;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Entity Text Url.
///
/// ID: `76a6d327`.
class MessageEntityTextUrl extends MessageEntityBase {
  /// Message Entity Text Url constructor.
  const MessageEntityTextUrl({
    required this.offset,
    required this.length,
    required this.url,
  }) : super._();

  /// Deserialize.
  factory MessageEntityTextUrl.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Offset.
  final int offset;

  /// Length.
  final int length;

  /// Url.
  final String url;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Entity Mention Name.
///
/// ID: `dc7b1140`.
class MessageEntityMentionName extends MessageEntityBase {
  /// Message Entity Mention Name constructor.
  const MessageEntityMentionName({
    required this.offset,
    required this.length,
    required this.userId,
  }) : super._();

  /// Deserialize.
  factory MessageEntityMentionName.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Offset.
  final int offset;

  /// Length.
  final int length;

  /// User Id.
  final int userId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Message Entity Mention Name.
///
/// ID: `208e68c9`.
class InputMessageEntityMentionName extends MessageEntityBase {
  /// Input Message Entity Mention Name constructor.
  const InputMessageEntityMentionName({
    required this.offset,
    required this.length,
    required this.userId,
  }) : super._();

  /// Deserialize.
  factory InputMessageEntityMentionName.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Offset.
  final int offset;

  /// Length.
  final int length;

  /// User Id.
  final InputUserBase userId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Entity Phone.
///
/// ID: `9b69e34b`.
class MessageEntityPhone extends MessageEntityBase {
  /// Message Entity Phone constructor.
  const MessageEntityPhone({
    required this.offset,
    required this.length,
  }) : super._();

  /// Deserialize.
  factory MessageEntityPhone.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Offset.
  final int offset;

  /// Length.
  final int length;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Entity Cashtag.
///
/// ID: `4c4e743f`.
class MessageEntityCashtag extends MessageEntityBase {
  /// Message Entity Cashtag constructor.
  const MessageEntityCashtag({
    required this.offset,
    required this.length,
  }) : super._();

  /// Deserialize.
  factory MessageEntityCashtag.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Offset.
  final int offset;

  /// Length.
  final int length;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Entity Underline.
///
/// ID: `9c4e7e8b`.
class MessageEntityUnderline extends MessageEntityBase {
  /// Message Entity Underline constructor.
  const MessageEntityUnderline({
    required this.offset,
    required this.length,
  }) : super._();

  /// Deserialize.
  factory MessageEntityUnderline.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Offset.
  final int offset;

  /// Length.
  final int length;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Entity Strike.
///
/// ID: `bf0693d4`.
class MessageEntityStrike extends MessageEntityBase {
  /// Message Entity Strike constructor.
  const MessageEntityStrike({
    required this.offset,
    required this.length,
  }) : super._();

  /// Deserialize.
  factory MessageEntityStrike.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Offset.
  final int offset;

  /// Length.
  final int length;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Entity Bank Card.
///
/// ID: `761e6af4`.
class MessageEntityBankCard extends MessageEntityBase {
  /// Message Entity Bank Card constructor.
  const MessageEntityBankCard({
    required this.offset,
    required this.length,
  }) : super._();

  /// Deserialize.
  factory MessageEntityBankCard.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Offset.
  final int offset;

  /// Length.
  final int length;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Entity Spoiler.
///
/// ID: `32ca960f`.
class MessageEntitySpoiler extends MessageEntityBase {
  /// Message Entity Spoiler constructor.
  const MessageEntitySpoiler({
    required this.offset,
    required this.length,
  }) : super._();

  /// Deserialize.
  factory MessageEntitySpoiler.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Offset.
  final int offset;

  /// Length.
  final int length;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Entity Custom Emoji.
///
/// ID: `c8cf05f8`.
class MessageEntityCustomEmoji extends MessageEntityBase {
  /// Message Entity Custom Emoji constructor.
  const MessageEntityCustomEmoji({
    required this.offset,
    required this.length,
    required this.documentId,
  }) : super._();

  /// Deserialize.
  factory MessageEntityCustomEmoji.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Offset.
  final int offset;

  /// Length.
  final int length;

  /// Document Id.
  final int documentId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Entity Blockquote.
///
/// ID: `020df5d0`.
class MessageEntityBlockquote extends MessageEntityBase {
  /// Message Entity Blockquote constructor.
  const MessageEntityBlockquote({
    required this.offset,
    required this.length,
  }) : super._();

  /// Deserialize.
  factory MessageEntityBlockquote.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Offset.
  final int offset;

  /// Length.
  final int length;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Channel.
abstract class InputChannelBase extends TlConstructor {
  /// Predicate Input Channel constructor.
  const InputChannelBase._() : super._();
}

/// Input Channel Empty.
///
/// ID: `ee8c1e86`.
class InputChannelEmpty extends InputChannelBase {
  /// Input Channel Empty constructor.
  const InputChannelEmpty() : super._();

  /// Deserialize.
  factory InputChannelEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Channel.
///
/// ID: `f35aec28`.
class InputChannel extends InputChannelBase {
  /// Input Channel constructor.
  const InputChannel({
    required this.channelId,
    required this.accessHash,
  }) : super._();

  /// Deserialize.
  factory InputChannel.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel Id.
  final int channelId;

  /// Access Hash.
  final int accessHash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Channel From Message.
///
/// ID: `5b934f9d`.
class InputChannelFromMessage extends InputChannelBase {
  /// Input Channel From Message constructor.
  const InputChannelFromMessage({
    required this.peer,
    required this.msgId,
    required this.channelId,
  }) : super._();

  /// Deserialize.
  factory InputChannelFromMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Msg Id.
  final int msgId;

  /// Channel Id.
  final int channelId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Contacts Resolved Peer.
abstract class ContactsResolvedPeerBase extends TlConstructor {
  /// Predicate Contacts Resolved Peer constructor.
  const ContactsResolvedPeerBase._() : super._();
}

/// Contacts Resolved Peer.
///
/// ID: `7f077ad9`.
class ContactsResolvedPeer extends ContactsResolvedPeerBase {
  /// Contacts Resolved Peer constructor.
  const ContactsResolvedPeer({
    required this.peer,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory ContactsResolvedPeer.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Message Range.
abstract class MessageRangeBase extends TlConstructor {
  /// Predicate Message Range constructor.
  const MessageRangeBase._() : super._();
}

/// Message Range.
///
/// ID: `0ae30253`.
class MessageRange extends MessageRangeBase {
  /// Message Range constructor.
  const MessageRange({
    required this.minId,
    required this.maxId,
  }) : super._();

  /// Deserialize.
  factory MessageRange.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Min Id.
  final int minId;

  /// Max Id.
  final int maxId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Updates Channel Difference.
abstract class UpdatesChannelDifferenceBase extends TlConstructor {
  /// Predicate Updates Channel Difference constructor.
  const UpdatesChannelDifferenceBase._() : super._();
}

/// Updates Channel Difference Empty.
///
/// ID: `3e11affb`.
class UpdatesChannelDifferenceEmpty extends UpdatesChannelDifferenceBase {
  /// Updates Channel Difference Empty constructor.
  const UpdatesChannelDifferenceEmpty({
    required this.flags,
    required this.pts,
    required this.timeout,
  }) : super._();

  /// Deserialize.
  factory UpdatesChannelDifferenceEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// final: bit
  bool get ffinal => _bit(flags, 0);

  /// Pts.
  final int pts;

  /// Timeout.
  final int? timeout;

  /// If [timeout] exists.
  bool get hasTimeoutField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Updates Channel Difference Too Long.
///
/// ID: `a4bcc6fe`.
class UpdatesChannelDifferenceTooLong extends UpdatesChannelDifferenceBase {
  /// Updates Channel Difference Too Long constructor.
  const UpdatesChannelDifferenceTooLong({
    required this.flags,
    required this.timeout,
    required this.dialog,
    required this.messages,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory UpdatesChannelDifferenceTooLong.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// final: bit
  bool get ffinal => _bit(flags, 0);

  /// Timeout.
  final int? timeout;

  /// If [timeout] exists.
  bool get hasTimeoutField => _bit(flags, 1);

  /// Dialog.
  final DialogBase dialog;

  /// Messages.
  final List<MessageBase> messages;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Updates Channel Difference.
///
/// ID: `2064674e`.
class UpdatesChannelDifference extends UpdatesChannelDifferenceBase {
  /// Updates Channel Difference constructor.
  const UpdatesChannelDifference({
    required this.flags,
    required this.pts,
    required this.timeout,
    required this.newMessages,
    required this.otherUpdates,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory UpdatesChannelDifference.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// final: bit
  bool get ffinal => _bit(flags, 0);

  /// Pts.
  final int pts;

  /// Timeout.
  final int? timeout;

  /// If [timeout] exists.
  bool get hasTimeoutField => _bit(flags, 1);

  /// New Messages.
  final List<MessageBase> newMessages;

  /// Other Updates.
  final List<UpdateBase> otherUpdates;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Channel Messages Filter.
abstract class ChannelMessagesFilterBase extends TlConstructor {
  /// Predicate Channel Messages Filter constructor.
  const ChannelMessagesFilterBase._() : super._();
}

/// Channel Messages Filter Empty.
///
/// ID: `94d42ee7`.
class ChannelMessagesFilterEmpty extends ChannelMessagesFilterBase {
  /// Channel Messages Filter Empty constructor.
  const ChannelMessagesFilterEmpty() : super._();

  /// Deserialize.
  factory ChannelMessagesFilterEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Messages Filter.
///
/// ID: `cd77d957`.
class ChannelMessagesFilter extends ChannelMessagesFilterBase {
  /// Channel Messages Filter constructor.
  const ChannelMessagesFilter({
    required this.flags,
    required this.ranges,
  }) : super._();

  /// Deserialize.
  factory ChannelMessagesFilter.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// exclude_new_messages: bit
  bool get excludeNewMessages => _bit(flags, 1);

  /// Ranges.
  final List<MessageRangeBase> ranges;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Channel Participant.
abstract class ChannelParticipantBase extends TlConstructor {
  /// Predicate Channel Participant constructor.
  const ChannelParticipantBase._() : super._();
}

/// Channel Participant.
///
/// ID: `c00c07c0`.
class ChannelParticipant extends ChannelParticipantBase {
  /// Channel Participant constructor.
  const ChannelParticipant({
    required this.userId,
    required this.date,
  }) : super._();

  /// Deserialize.
  factory ChannelParticipant.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final int userId;

  /// Date.
  final int date;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Participant Self.
///
/// ID: `35a8bfa7`.
class ChannelParticipantSelf extends ChannelParticipantBase {
  /// Channel Participant Self constructor.
  const ChannelParticipantSelf({
    required this.flags,
    required this.userId,
    required this.inviterId,
    required this.date,
  }) : super._();

  /// Deserialize.
  factory ChannelParticipantSelf.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// via_request: bit
  bool get viaRequest => _bit(flags, 0);

  /// User Id.
  final int userId;

  /// Inviter Id.
  final int inviterId;

  /// Date.
  final int date;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Participant Creator.
///
/// ID: `2fe601d3`.
class ChannelParticipantCreator extends ChannelParticipantBase {
  /// Channel Participant Creator constructor.
  const ChannelParticipantCreator({
    required this.flags,
    required this.userId,
    required this.adminRights,
    required this.rank,
  }) : super._();

  /// Deserialize.
  factory ChannelParticipantCreator.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// User Id.
  final int userId;

  /// Admin Rights.
  final ChatAdminRightsBase adminRights;

  /// Rank.
  final String? rank;

  /// If [rank] exists.
  bool get hasRankField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Participant Admin.
///
/// ID: `34c3bb53`.
class ChannelParticipantAdmin extends ChannelParticipantBase {
  /// Channel Participant Admin constructor.
  const ChannelParticipantAdmin({
    required this.flags,
    required this.userId,
    required this.inviterId,
    required this.promotedBy,
    required this.date,
    required this.adminRights,
    required this.rank,
  }) : super._();

  /// Deserialize.
  factory ChannelParticipantAdmin.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// can_edit: bit
  bool get canEdit => _bit(flags, 0);

  /// self: bit
  bool get self => _bit(flags, 1);

  /// User Id.
  final int userId;

  /// Inviter Id.
  final int? inviterId;

  /// If [inviterId] exists.
  bool get hasInviterIdField => _bit(flags, 1);

  /// Promoted By.
  final int promotedBy;

  /// Date.
  final int date;

  /// Admin Rights.
  final ChatAdminRightsBase adminRights;

  /// Rank.
  final String? rank;

  /// If [rank] exists.
  bool get hasRankField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Participant Banned.
///
/// ID: `6df8014e`.
class ChannelParticipantBanned extends ChannelParticipantBase {
  /// Channel Participant Banned constructor.
  const ChannelParticipantBanned({
    required this.flags,
    required this.peer,
    required this.kickedBy,
    required this.date,
    required this.bannedRights,
  }) : super._();

  /// Deserialize.
  factory ChannelParticipantBanned.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// left: bit
  bool get left => _bit(flags, 0);

  /// Peer.
  final PeerBase peer;

  /// Kicked By.
  final int kickedBy;

  /// Date.
  final int date;

  /// Banned Rights.
  final ChatBannedRightsBase bannedRights;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Participant Left.
///
/// ID: `1b03f006`.
class ChannelParticipantLeft extends ChannelParticipantBase {
  /// Channel Participant Left constructor.
  const ChannelParticipantLeft({
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory ChannelParticipantLeft.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Channel Participants Filter.
abstract class ChannelParticipantsFilterBase extends TlConstructor {
  /// Predicate Channel Participants Filter constructor.
  const ChannelParticipantsFilterBase._() : super._();
}

/// Channel Participants Recent.
///
/// ID: `de3f3c79`.
class ChannelParticipantsRecent extends ChannelParticipantsFilterBase {
  /// Channel Participants Recent constructor.
  const ChannelParticipantsRecent() : super._();

  /// Deserialize.
  factory ChannelParticipantsRecent.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Participants Admins.
///
/// ID: `b4608969`.
class ChannelParticipantsAdmins extends ChannelParticipantsFilterBase {
  /// Channel Participants Admins constructor.
  const ChannelParticipantsAdmins() : super._();

  /// Deserialize.
  factory ChannelParticipantsAdmins.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Participants Kicked.
///
/// ID: `a3b54985`.
class ChannelParticipantsKicked extends ChannelParticipantsFilterBase {
  /// Channel Participants Kicked constructor.
  const ChannelParticipantsKicked({
    required this.q,
  }) : super._();

  /// Deserialize.
  factory ChannelParticipantsKicked.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Q.
  final String q;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Participants Bots.
///
/// ID: `b0d1865b`.
class ChannelParticipantsBots extends ChannelParticipantsFilterBase {
  /// Channel Participants Bots constructor.
  const ChannelParticipantsBots() : super._();

  /// Deserialize.
  factory ChannelParticipantsBots.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Participants Banned.
///
/// ID: `1427a5e1`.
class ChannelParticipantsBanned extends ChannelParticipantsFilterBase {
  /// Channel Participants Banned constructor.
  const ChannelParticipantsBanned({
    required this.q,
  }) : super._();

  /// Deserialize.
  factory ChannelParticipantsBanned.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Q.
  final String q;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Participants Search.
///
/// ID: `0656ac4b`.
class ChannelParticipantsSearch extends ChannelParticipantsFilterBase {
  /// Channel Participants Search constructor.
  const ChannelParticipantsSearch({
    required this.q,
  }) : super._();

  /// Deserialize.
  factory ChannelParticipantsSearch.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Q.
  final String q;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Participants Contacts.
///
/// ID: `bb6ae88d`.
class ChannelParticipantsContacts extends ChannelParticipantsFilterBase {
  /// Channel Participants Contacts constructor.
  const ChannelParticipantsContacts({
    required this.q,
  }) : super._();

  /// Deserialize.
  factory ChannelParticipantsContacts.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Q.
  final String q;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Participants Mentions.
///
/// ID: `e04b5ceb`.
class ChannelParticipantsMentions extends ChannelParticipantsFilterBase {
  /// Channel Participants Mentions constructor.
  const ChannelParticipantsMentions({
    required this.flags,
    required this.q,
    required this.topMsgId,
  }) : super._();

  /// Deserialize.
  factory ChannelParticipantsMentions.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Q.
  final String? q;

  /// If [q] exists.
  bool get hasQField => _bit(flags, 0);

  /// Top Msg Id.
  final int? topMsgId;

  /// If [topMsgId] exists.
  bool get hasTopMsgIdField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Channels Channel Participants.
abstract class ChannelsChannelParticipantsBase extends TlConstructor {
  /// Predicate Channels Channel Participants constructor.
  const ChannelsChannelParticipantsBase._() : super._();
}

/// Channels Channel Participants.
///
/// ID: `9ab0feaf`.
class ChannelsChannelParticipants extends ChannelsChannelParticipantsBase {
  /// Channels Channel Participants constructor.
  const ChannelsChannelParticipants({
    required this.count,
    required this.participants,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory ChannelsChannelParticipants.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Count.
  final int count;

  /// Participants.
  final List<ChannelParticipantBase> participants;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Channel Participants Not Modified.
///
/// ID: `f0173fe9`.
class ChannelsChannelParticipantsNotModified
    extends ChannelsChannelParticipantsBase {
  /// Channels Channel Participants Not Modified constructor.
  const ChannelsChannelParticipantsNotModified() : super._();

  /// Deserialize.
  factory ChannelsChannelParticipantsNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Channels Channel Participant.
abstract class ChannelsChannelParticipantBase extends TlConstructor {
  /// Predicate Channels Channel Participant constructor.
  const ChannelsChannelParticipantBase._() : super._();
}

/// Channels Channel Participant.
///
/// ID: `dfb80317`.
class ChannelsChannelParticipant extends ChannelsChannelParticipantBase {
  /// Channels Channel Participant constructor.
  const ChannelsChannelParticipant({
    required this.participant,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory ChannelsChannelParticipant.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Participant.
  final ChannelParticipantBase participant;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Help Terms Of Service.
abstract class HelpTermsOfServiceBase extends TlConstructor {
  /// Predicate Help Terms Of Service constructor.
  const HelpTermsOfServiceBase._() : super._();
}

/// Help Terms Of Service.
///
/// ID: `780a0310`.
class HelpTermsOfService extends HelpTermsOfServiceBase {
  /// Help Terms Of Service constructor.
  const HelpTermsOfService({
    required this.flags,
    required this.id,
    required this.text,
    required this.entities,
    required this.minAgeConfirm,
  }) : super._();

  /// Deserialize.
  factory HelpTermsOfService.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// popup: bit
  bool get popup => _bit(flags, 0);

  /// Id.
  final DataJSONBase id;

  /// Text.
  final String text;

  /// Entities.
  final List<MessageEntityBase> entities;

  /// Min Age Confirm.
  final int? minAgeConfirm;

  /// If [minAgeConfirm] exists.
  bool get hasMinAgeConfirmField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Saved Gifs.
abstract class MessagesSavedGifsBase extends TlConstructor {
  /// Predicate Messages Saved Gifs constructor.
  const MessagesSavedGifsBase._() : super._();
}

/// Messages Saved Gifs Not Modified.
///
/// ID: `e8025ca2`.
class MessagesSavedGifsNotModified extends MessagesSavedGifsBase {
  /// Messages Saved Gifs Not Modified constructor.
  const MessagesSavedGifsNotModified() : super._();

  /// Deserialize.
  factory MessagesSavedGifsNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Saved Gifs.
///
/// ID: `84a02a0d`.
class MessagesSavedGifs extends MessagesSavedGifsBase {
  /// Messages Saved Gifs constructor.
  const MessagesSavedGifs({
    required this.hash,
    required this.gifs,
  }) : super._();

  /// Deserialize.
  factory MessagesSavedGifs.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Gifs.
  final List<DocumentBase> gifs;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Bot Inline Message.
abstract class InputBotInlineMessageBase extends TlConstructor {
  /// Predicate Input Bot Inline Message constructor.
  const InputBotInlineMessageBase._() : super._();
}

/// Input Bot Inline Message Media Auto.
///
/// ID: `3380c786`.
class InputBotInlineMessageMediaAuto extends InputBotInlineMessageBase {
  /// Input Bot Inline Message Media Auto constructor.
  const InputBotInlineMessageMediaAuto({
    required this.flags,
    required this.message,
    required this.entities,
    required this.replyMarkup,
  }) : super._();

  /// Deserialize.
  factory InputBotInlineMessageMediaAuto.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// invert_media: bit
  bool get invertMedia => _bit(flags, 3);

  /// Message.
  final String message;

  /// Entities.
  final List<MessageEntityBase>? entities;

  /// If [entities] exists.
  bool get hasEntitiesField => _bit(flags, 1);

  /// Reply Markup.
  final ReplyMarkupBase? replyMarkup;

  /// If [replyMarkup] exists.
  bool get hasReplyMarkupField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Bot Inline Message Text.
///
/// ID: `3dcd7a87`.
class InputBotInlineMessageText extends InputBotInlineMessageBase {
  /// Input Bot Inline Message Text constructor.
  const InputBotInlineMessageText({
    required this.flags,
    required this.message,
    required this.entities,
    required this.replyMarkup,
  }) : super._();

  /// Deserialize.
  factory InputBotInlineMessageText.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// no_webpage: bit
  bool get noWebpage => _bit(flags, 0);

  /// invert_media: bit
  bool get invertMedia => _bit(flags, 3);

  /// Message.
  final String message;

  /// Entities.
  final List<MessageEntityBase>? entities;

  /// If [entities] exists.
  bool get hasEntitiesField => _bit(flags, 1);

  /// Reply Markup.
  final ReplyMarkupBase? replyMarkup;

  /// If [replyMarkup] exists.
  bool get hasReplyMarkupField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Bot Inline Message Media Geo.
///
/// ID: `96929a85`.
class InputBotInlineMessageMediaGeo extends InputBotInlineMessageBase {
  /// Input Bot Inline Message Media Geo constructor.
  const InputBotInlineMessageMediaGeo({
    required this.flags,
    required this.geoPoint,
    required this.heading,
    required this.period,
    required this.proximityNotificationRadius,
    required this.replyMarkup,
  }) : super._();

  /// Deserialize.
  factory InputBotInlineMessageMediaGeo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Geo Point.
  final InputGeoPointBase geoPoint;

  /// Heading.
  final int? heading;

  /// If [heading] exists.
  bool get hasHeadingField => _bit(flags, 0);

  /// Period.
  final int? period;

  /// If [period] exists.
  bool get hasPeriodField => _bit(flags, 1);

  /// Proximity Notification Radius.
  final int? proximityNotificationRadius;

  /// If [proximityNotificationRadius] exists.
  bool get hasProximityNotificationRadiusField => _bit(flags, 3);

  /// Reply Markup.
  final ReplyMarkupBase? replyMarkup;

  /// If [replyMarkup] exists.
  bool get hasReplyMarkupField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Bot Inline Message Media Venue.
///
/// ID: `417bbf11`.
class InputBotInlineMessageMediaVenue extends InputBotInlineMessageBase {
  /// Input Bot Inline Message Media Venue constructor.
  const InputBotInlineMessageMediaVenue({
    required this.flags,
    required this.geoPoint,
    required this.title,
    required this.address,
    required this.provider,
    required this.venueId,
    required this.venueType,
    required this.replyMarkup,
  }) : super._();

  /// Deserialize.
  factory InputBotInlineMessageMediaVenue.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Geo Point.
  final InputGeoPointBase geoPoint;

  /// Title.
  final String title;

  /// Address.
  final String address;

  /// Provider.
  final String provider;

  /// Venue Id.
  final String venueId;

  /// Venue Type.
  final String venueType;

  /// Reply Markup.
  final ReplyMarkupBase? replyMarkup;

  /// If [replyMarkup] exists.
  bool get hasReplyMarkupField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Bot Inline Message Media Contact.
///
/// ID: `a6edbffd`.
class InputBotInlineMessageMediaContact extends InputBotInlineMessageBase {
  /// Input Bot Inline Message Media Contact constructor.
  const InputBotInlineMessageMediaContact({
    required this.flags,
    required this.phoneNumber,
    required this.firstName,
    required this.lastName,
    required this.vcard,
    required this.replyMarkup,
  }) : super._();

  /// Deserialize.
  factory InputBotInlineMessageMediaContact.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Phone Number.
  final String phoneNumber;

  /// First Name.
  final String firstName;

  /// Last Name.
  final String lastName;

  /// Vcard.
  final String vcard;

  /// Reply Markup.
  final ReplyMarkupBase? replyMarkup;

  /// If [replyMarkup] exists.
  bool get hasReplyMarkupField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Bot Inline Message Game.
///
/// ID: `4b425864`.
class InputBotInlineMessageGame extends InputBotInlineMessageBase {
  /// Input Bot Inline Message Game constructor.
  const InputBotInlineMessageGame({
    required this.flags,
    required this.replyMarkup,
  }) : super._();

  /// Deserialize.
  factory InputBotInlineMessageGame.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Reply Markup.
  final ReplyMarkupBase? replyMarkup;

  /// If [replyMarkup] exists.
  bool get hasReplyMarkupField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Bot Inline Message Media Invoice.
///
/// ID: `d7e78225`.
class InputBotInlineMessageMediaInvoice extends InputBotInlineMessageBase {
  /// Input Bot Inline Message Media Invoice constructor.
  const InputBotInlineMessageMediaInvoice({
    required this.flags,
    required this.title,
    required this.description,
    required this.photo,
    required this.invoice,
    required this.payload,
    required this.provider,
    required this.providerData,
    required this.replyMarkup,
  }) : super._();

  /// Deserialize.
  factory InputBotInlineMessageMediaInvoice.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Title.
  final String title;

  /// Description.
  final String description;

  /// Photo.
  final InputWebDocumentBase? photo;

  /// If [photo] exists.
  bool get hasPhotoField => _bit(flags, 0);

  /// Invoice.
  final InvoiceBase invoice;

  /// Payload.
  final Uint8List payload;

  /// Provider.
  final String provider;

  /// Provider Data.
  final DataJSONBase providerData;

  /// Reply Markup.
  final ReplyMarkupBase? replyMarkup;

  /// If [replyMarkup] exists.
  bool get hasReplyMarkupField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Bot Inline Message Media Web Page.
///
/// ID: `bddcc510`.
class InputBotInlineMessageMediaWebPage extends InputBotInlineMessageBase {
  /// Input Bot Inline Message Media Web Page constructor.
  const InputBotInlineMessageMediaWebPage({
    required this.flags,
    required this.message,
    required this.entities,
    required this.url,
    required this.replyMarkup,
  }) : super._();

  /// Deserialize.
  factory InputBotInlineMessageMediaWebPage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// invert_media: bit
  bool get invertMedia => _bit(flags, 3);

  /// force_large_media: bit
  bool get forceLargeMedia => _bit(flags, 4);

  /// force_small_media: bit
  bool get forceSmallMedia => _bit(flags, 5);

  /// optional: bit
  bool get optional => _bit(flags, 6);

  /// Message.
  final String message;

  /// Entities.
  final List<MessageEntityBase>? entities;

  /// If [entities] exists.
  bool get hasEntitiesField => _bit(flags, 1);

  /// Url.
  final String url;

  /// Reply Markup.
  final ReplyMarkupBase? replyMarkup;

  /// If [replyMarkup] exists.
  bool get hasReplyMarkupField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Bot Inline Result.
abstract class InputBotInlineResultBase extends TlConstructor {
  /// Predicate Input Bot Inline Result constructor.
  const InputBotInlineResultBase._() : super._();
}

/// Input Bot Inline Result.
///
/// ID: `88bf9319`.
class InputBotInlineResult extends InputBotInlineResultBase {
  /// Input Bot Inline Result constructor.
  const InputBotInlineResult({
    required this.flags,
    required this.id,
    required this.type,
    required this.title,
    required this.description,
    required this.url,
    required this.thumb,
    required this.content,
    required this.sendMessage,
  }) : super._();

  /// Deserialize.
  factory InputBotInlineResult.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Id.
  final String id;

  /// Type.
  final String type;

  /// Title.
  final String? title;

  /// If [title] exists.
  bool get hasTitleField => _bit(flags, 1);

  /// Description.
  final String? description;

  /// If [description] exists.
  bool get hasDescriptionField => _bit(flags, 2);

  /// Url.
  final String? url;

  /// If [url] exists.
  bool get hasUrlField => _bit(flags, 3);

  /// Thumb.
  final InputWebDocumentBase? thumb;

  /// If [thumb] exists.
  bool get hasThumbField => _bit(flags, 4);

  /// Content.
  final InputWebDocumentBase? content;

  /// If [content] exists.
  bool get hasContentField => _bit(flags, 5);

  /// Send Message.
  final InputBotInlineMessageBase sendMessage;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Bot Inline Result Photo.
///
/// ID: `a8d864a7`.
class InputBotInlineResultPhoto extends InputBotInlineResultBase {
  /// Input Bot Inline Result Photo constructor.
  const InputBotInlineResultPhoto({
    required this.id,
    required this.type,
    required this.photo,
    required this.sendMessage,
  }) : super._();

  /// Deserialize.
  factory InputBotInlineResultPhoto.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final String id;

  /// Type.
  final String type;

  /// Photo.
  final InputPhotoBase photo;

  /// Send Message.
  final InputBotInlineMessageBase sendMessage;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Bot Inline Result Document.
///
/// ID: `fff8fdc4`.
class InputBotInlineResultDocument extends InputBotInlineResultBase {
  /// Input Bot Inline Result Document constructor.
  const InputBotInlineResultDocument({
    required this.flags,
    required this.id,
    required this.type,
    required this.title,
    required this.description,
    required this.document,
    required this.sendMessage,
  }) : super._();

  /// Deserialize.
  factory InputBotInlineResultDocument.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Id.
  final String id;

  /// Type.
  final String type;

  /// Title.
  final String? title;

  /// If [title] exists.
  bool get hasTitleField => _bit(flags, 1);

  /// Description.
  final String? description;

  /// If [description] exists.
  bool get hasDescriptionField => _bit(flags, 2);

  /// Document.
  final InputDocumentBase document;

  /// Send Message.
  final InputBotInlineMessageBase sendMessage;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Bot Inline Result Game.
///
/// ID: `4fa417f2`.
class InputBotInlineResultGame extends InputBotInlineResultBase {
  /// Input Bot Inline Result Game constructor.
  const InputBotInlineResultGame({
    required this.id,
    required this.shortName,
    required this.sendMessage,
  }) : super._();

  /// Deserialize.
  factory InputBotInlineResultGame.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final String id;

  /// Short Name.
  final String shortName;

  /// Send Message.
  final InputBotInlineMessageBase sendMessage;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Bot Inline Message.
abstract class BotInlineMessageBase extends TlConstructor {
  /// Predicate Bot Inline Message constructor.
  const BotInlineMessageBase._() : super._();
}

/// Bot Inline Message Media Auto.
///
/// ID: `764cf810`.
class BotInlineMessageMediaAuto extends BotInlineMessageBase {
  /// Bot Inline Message Media Auto constructor.
  const BotInlineMessageMediaAuto({
    required this.flags,
    required this.message,
    required this.entities,
    required this.replyMarkup,
  }) : super._();

  /// Deserialize.
  factory BotInlineMessageMediaAuto.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// invert_media: bit
  bool get invertMedia => _bit(flags, 3);

  /// Message.
  final String message;

  /// Entities.
  final List<MessageEntityBase>? entities;

  /// If [entities] exists.
  bool get hasEntitiesField => _bit(flags, 1);

  /// Reply Markup.
  final ReplyMarkupBase? replyMarkup;

  /// If [replyMarkup] exists.
  bool get hasReplyMarkupField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bot Inline Message Text.
///
/// ID: `8c7f65e2`.
class BotInlineMessageText extends BotInlineMessageBase {
  /// Bot Inline Message Text constructor.
  const BotInlineMessageText({
    required this.flags,
    required this.message,
    required this.entities,
    required this.replyMarkup,
  }) : super._();

  /// Deserialize.
  factory BotInlineMessageText.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// no_webpage: bit
  bool get noWebpage => _bit(flags, 0);

  /// invert_media: bit
  bool get invertMedia => _bit(flags, 3);

  /// Message.
  final String message;

  /// Entities.
  final List<MessageEntityBase>? entities;

  /// If [entities] exists.
  bool get hasEntitiesField => _bit(flags, 1);

  /// Reply Markup.
  final ReplyMarkupBase? replyMarkup;

  /// If [replyMarkup] exists.
  bool get hasReplyMarkupField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bot Inline Message Media Geo.
///
/// ID: `051846fd`.
class BotInlineMessageMediaGeo extends BotInlineMessageBase {
  /// Bot Inline Message Media Geo constructor.
  const BotInlineMessageMediaGeo({
    required this.flags,
    required this.geo,
    required this.heading,
    required this.period,
    required this.proximityNotificationRadius,
    required this.replyMarkup,
  }) : super._();

  /// Deserialize.
  factory BotInlineMessageMediaGeo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Geo.
  final GeoPointBase geo;

  /// Heading.
  final int? heading;

  /// If [heading] exists.
  bool get hasHeadingField => _bit(flags, 0);

  /// Period.
  final int? period;

  /// If [period] exists.
  bool get hasPeriodField => _bit(flags, 1);

  /// Proximity Notification Radius.
  final int? proximityNotificationRadius;

  /// If [proximityNotificationRadius] exists.
  bool get hasProximityNotificationRadiusField => _bit(flags, 3);

  /// Reply Markup.
  final ReplyMarkupBase? replyMarkup;

  /// If [replyMarkup] exists.
  bool get hasReplyMarkupField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bot Inline Message Media Venue.
///
/// ID: `8a86659c`.
class BotInlineMessageMediaVenue extends BotInlineMessageBase {
  /// Bot Inline Message Media Venue constructor.
  const BotInlineMessageMediaVenue({
    required this.flags,
    required this.geo,
    required this.title,
    required this.address,
    required this.provider,
    required this.venueId,
    required this.venueType,
    required this.replyMarkup,
  }) : super._();

  /// Deserialize.
  factory BotInlineMessageMediaVenue.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Geo.
  final GeoPointBase geo;

  /// Title.
  final String title;

  /// Address.
  final String address;

  /// Provider.
  final String provider;

  /// Venue Id.
  final String venueId;

  /// Venue Type.
  final String venueType;

  /// Reply Markup.
  final ReplyMarkupBase? replyMarkup;

  /// If [replyMarkup] exists.
  bool get hasReplyMarkupField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bot Inline Message Media Contact.
///
/// ID: `18d1cdc2`.
class BotInlineMessageMediaContact extends BotInlineMessageBase {
  /// Bot Inline Message Media Contact constructor.
  const BotInlineMessageMediaContact({
    required this.flags,
    required this.phoneNumber,
    required this.firstName,
    required this.lastName,
    required this.vcard,
    required this.replyMarkup,
  }) : super._();

  /// Deserialize.
  factory BotInlineMessageMediaContact.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Phone Number.
  final String phoneNumber;

  /// First Name.
  final String firstName;

  /// Last Name.
  final String lastName;

  /// Vcard.
  final String vcard;

  /// Reply Markup.
  final ReplyMarkupBase? replyMarkup;

  /// If [replyMarkup] exists.
  bool get hasReplyMarkupField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bot Inline Message Media Invoice.
///
/// ID: `354a9b09`.
class BotInlineMessageMediaInvoice extends BotInlineMessageBase {
  /// Bot Inline Message Media Invoice constructor.
  const BotInlineMessageMediaInvoice({
    required this.flags,
    required this.title,
    required this.description,
    required this.photo,
    required this.currency,
    required this.totalAmount,
    required this.replyMarkup,
  }) : super._();

  /// Deserialize.
  factory BotInlineMessageMediaInvoice.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// shipping_address_requested: bit
  bool get shippingAddressRequested => _bit(flags, 1);

  /// test: bit
  bool get test => _bit(flags, 3);

  /// Title.
  final String title;

  /// Description.
  final String description;

  /// Photo.
  final WebDocumentBase? photo;

  /// If [photo] exists.
  bool get hasPhotoField => _bit(flags, 0);

  /// Currency.
  final String currency;

  /// Total Amount.
  final int totalAmount;

  /// Reply Markup.
  final ReplyMarkupBase? replyMarkup;

  /// If [replyMarkup] exists.
  bool get hasReplyMarkupField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bot Inline Message Media Web Page.
///
/// ID: `809ad9a6`.
class BotInlineMessageMediaWebPage extends BotInlineMessageBase {
  /// Bot Inline Message Media Web Page constructor.
  const BotInlineMessageMediaWebPage({
    required this.flags,
    required this.message,
    required this.entities,
    required this.url,
    required this.replyMarkup,
  }) : super._();

  /// Deserialize.
  factory BotInlineMessageMediaWebPage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// invert_media: bit
  bool get invertMedia => _bit(flags, 3);

  /// force_large_media: bit
  bool get forceLargeMedia => _bit(flags, 4);

  /// force_small_media: bit
  bool get forceSmallMedia => _bit(flags, 5);

  /// manual: bit
  bool get manual => _bit(flags, 7);

  /// safe: bit
  bool get safe => _bit(flags, 8);

  /// Message.
  final String message;

  /// Entities.
  final List<MessageEntityBase>? entities;

  /// If [entities] exists.
  bool get hasEntitiesField => _bit(flags, 1);

  /// Url.
  final String url;

  /// Reply Markup.
  final ReplyMarkupBase? replyMarkup;

  /// If [replyMarkup] exists.
  bool get hasReplyMarkupField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Bot Inline Result.
abstract class BotInlineResultBase extends TlConstructor {
  /// Predicate Bot Inline Result constructor.
  const BotInlineResultBase._() : super._();
}

/// Bot Inline Result.
///
/// ID: `11965f3a`.
class BotInlineResult extends BotInlineResultBase {
  /// Bot Inline Result constructor.
  const BotInlineResult({
    required this.flags,
    required this.id,
    required this.type,
    required this.title,
    required this.description,
    required this.url,
    required this.thumb,
    required this.content,
    required this.sendMessage,
  }) : super._();

  /// Deserialize.
  factory BotInlineResult.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Id.
  final String id;

  /// Type.
  final String type;

  /// Title.
  final String? title;

  /// If [title] exists.
  bool get hasTitleField => _bit(flags, 1);

  /// Description.
  final String? description;

  /// If [description] exists.
  bool get hasDescriptionField => _bit(flags, 2);

  /// Url.
  final String? url;

  /// If [url] exists.
  bool get hasUrlField => _bit(flags, 3);

  /// Thumb.
  final WebDocumentBase? thumb;

  /// If [thumb] exists.
  bool get hasThumbField => _bit(flags, 4);

  /// Content.
  final WebDocumentBase? content;

  /// If [content] exists.
  bool get hasContentField => _bit(flags, 5);

  /// Send Message.
  final BotInlineMessageBase sendMessage;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bot Inline Media Result.
///
/// ID: `17db940b`.
class BotInlineMediaResult extends BotInlineResultBase {
  /// Bot Inline Media Result constructor.
  const BotInlineMediaResult({
    required this.flags,
    required this.id,
    required this.type,
    required this.photo,
    required this.document,
    required this.title,
    required this.description,
    required this.sendMessage,
  }) : super._();

  /// Deserialize.
  factory BotInlineMediaResult.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Id.
  final String id;

  /// Type.
  final String type;

  /// Photo.
  final PhotoBase? photo;

  /// If [photo] exists.
  bool get hasPhotoField => _bit(flags, 0);

  /// Document.
  final DocumentBase? document;

  /// If [document] exists.
  bool get hasDocumentField => _bit(flags, 1);

  /// Title.
  final String? title;

  /// If [title] exists.
  bool get hasTitleField => _bit(flags, 2);

  /// Description.
  final String? description;

  /// If [description] exists.
  bool get hasDescriptionField => _bit(flags, 3);

  /// Send Message.
  final BotInlineMessageBase sendMessage;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Bot Results.
abstract class MessagesBotResultsBase extends TlConstructor {
  /// Predicate Messages Bot Results constructor.
  const MessagesBotResultsBase._() : super._();
}

/// Messages Bot Results.
///
/// ID: `e021f2f6`.
class MessagesBotResults extends MessagesBotResultsBase {
  /// Messages Bot Results constructor.
  const MessagesBotResults({
    required this.flags,
    required this.queryId,
    required this.nextOffset,
    required this.switchPm,
    required this.switchWebview,
    required this.results,
    required this.cacheTime,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory MessagesBotResults.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// gallery: bit
  bool get gallery => _bit(flags, 0);

  /// Query Id.
  final int queryId;

  /// Next Offset.
  final String? nextOffset;

  /// If [nextOffset] exists.
  bool get hasNextOffsetField => _bit(flags, 1);

  /// Switch Pm.
  final InlineBotSwitchPMBase? switchPm;

  /// If [switchPm] exists.
  bool get hasSwitchPmField => _bit(flags, 2);

  /// Switch Webview.
  final InlineBotWebViewBase? switchWebview;

  /// If [switchWebview] exists.
  bool get hasSwitchWebviewField => _bit(flags, 3);

  /// Results.
  final List<BotInlineResultBase> results;

  /// Cache Time.
  final int cacheTime;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Exported Message Link.
abstract class ExportedMessageLinkBase extends TlConstructor {
  /// Predicate Exported Message Link constructor.
  const ExportedMessageLinkBase._() : super._();
}

/// Exported Message Link.
///
/// ID: `5dab1af4`.
class ExportedMessageLink extends ExportedMessageLinkBase {
  /// Exported Message Link constructor.
  const ExportedMessageLink({
    required this.link,
    required this.html,
  }) : super._();

  /// Deserialize.
  factory ExportedMessageLink.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Link.
  final String link;

  /// Html.
  final String html;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Message Fwd Header.
abstract class MessageFwdHeaderBase extends TlConstructor {
  /// Predicate Message Fwd Header constructor.
  const MessageFwdHeaderBase._() : super._();
}

/// Message Fwd Header.
///
/// ID: `4e4df4bb`.
class MessageFwdHeader extends MessageFwdHeaderBase {
  /// Message Fwd Header constructor.
  const MessageFwdHeader({
    required this.flags,
    required this.fromId,
    required this.fromName,
    required this.date,
    required this.channelPost,
    required this.postAuthor,
    required this.savedFromPeer,
    required this.savedFromMsgId,
    required this.savedFromId,
    required this.savedFromName,
    required this.savedDate,
    required this.psaType,
  }) : super._();

  /// Deserialize.
  factory MessageFwdHeader.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// imported: bit
  bool get imported => _bit(flags, 7);

  /// saved_out: bit
  bool get savedOut => _bit(flags, 11);

  /// From Id.
  final PeerBase? fromId;

  /// If [fromId] exists.
  bool get hasFromIdField => _bit(flags, 0);

  /// From Name.
  final String? fromName;

  /// If [fromName] exists.
  bool get hasFromNameField => _bit(flags, 5);

  /// Date.
  final int date;

  /// Channel Post.
  final int? channelPost;

  /// If [channelPost] exists.
  bool get hasChannelPostField => _bit(flags, 2);

  /// Post Author.
  final String? postAuthor;

  /// If [postAuthor] exists.
  bool get hasPostAuthorField => _bit(flags, 3);

  /// Saved From Peer.
  final PeerBase? savedFromPeer;

  /// If [savedFromPeer] exists.
  bool get hasSavedFromPeerField => _bit(flags, 4);

  /// Saved From Msg Id.
  final int? savedFromMsgId;

  /// If [savedFromMsgId] exists.
  bool get hasSavedFromMsgIdField => _bit(flags, 4);

  /// Saved From Id.
  final PeerBase? savedFromId;

  /// If [savedFromId] exists.
  bool get hasSavedFromIdField => _bit(flags, 8);

  /// Saved From Name.
  final String? savedFromName;

  /// If [savedFromName] exists.
  bool get hasSavedFromNameField => _bit(flags, 9);

  /// Saved Date.
  final int? savedDate;

  /// If [savedDate] exists.
  bool get hasSavedDateField => _bit(flags, 10);

  /// Psa Type.
  final String? psaType;

  /// If [psaType] exists.
  bool get hasPsaTypeField => _bit(flags, 6);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Auth Code Type.
abstract class AuthCodeTypeBase extends TlConstructor {
  /// Predicate Auth Code Type constructor.
  const AuthCodeTypeBase._() : super._();
}

/// Auth Code Type Sms.
///
/// ID: `72a3158c`.
class AuthCodeTypeSms extends AuthCodeTypeBase {
  /// Auth Code Type Sms constructor.
  const AuthCodeTypeSms() : super._();

  /// Deserialize.
  factory AuthCodeTypeSms.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Code Type Call.
///
/// ID: `741cd3e3`.
class AuthCodeTypeCall extends AuthCodeTypeBase {
  /// Auth Code Type Call constructor.
  const AuthCodeTypeCall() : super._();

  /// Deserialize.
  factory AuthCodeTypeCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Code Type Flash Call.
///
/// ID: `226ccefb`.
class AuthCodeTypeFlashCall extends AuthCodeTypeBase {
  /// Auth Code Type Flash Call constructor.
  const AuthCodeTypeFlashCall() : super._();

  /// Deserialize.
  factory AuthCodeTypeFlashCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Code Type Missed Call.
///
/// ID: `d61ad6ee`.
class AuthCodeTypeMissedCall extends AuthCodeTypeBase {
  /// Auth Code Type Missed Call constructor.
  const AuthCodeTypeMissedCall() : super._();

  /// Deserialize.
  factory AuthCodeTypeMissedCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Code Type Fragment Sms.
///
/// ID: `06ed998c`.
class AuthCodeTypeFragmentSms extends AuthCodeTypeBase {
  /// Auth Code Type Fragment Sms constructor.
  const AuthCodeTypeFragmentSms() : super._();

  /// Deserialize.
  factory AuthCodeTypeFragmentSms.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Auth Sent Code Type.
abstract class AuthSentCodeTypeBase extends TlConstructor {
  /// Predicate Auth Sent Code Type constructor.
  const AuthSentCodeTypeBase._() : super._();
}

/// Auth Sent Code Type App.
///
/// ID: `3dbb5986`.
class AuthSentCodeTypeApp extends AuthSentCodeTypeBase {
  /// Auth Sent Code Type App constructor.
  const AuthSentCodeTypeApp({
    required this.length,
  }) : super._();

  /// Deserialize.
  factory AuthSentCodeTypeApp.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Length.
  final int length;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Sent Code Type Sms.
///
/// ID: `c000bba2`.
class AuthSentCodeTypeSms extends AuthSentCodeTypeBase {
  /// Auth Sent Code Type Sms constructor.
  const AuthSentCodeTypeSms({
    required this.length,
  }) : super._();

  /// Deserialize.
  factory AuthSentCodeTypeSms.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Length.
  final int length;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Sent Code Type Call.
///
/// ID: `5353e5a7`.
class AuthSentCodeTypeCall extends AuthSentCodeTypeBase {
  /// Auth Sent Code Type Call constructor.
  const AuthSentCodeTypeCall({
    required this.length,
  }) : super._();

  /// Deserialize.
  factory AuthSentCodeTypeCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Length.
  final int length;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Sent Code Type Flash Call.
///
/// ID: `ab03c6d9`.
class AuthSentCodeTypeFlashCall extends AuthSentCodeTypeBase {
  /// Auth Sent Code Type Flash Call constructor.
  const AuthSentCodeTypeFlashCall({
    required this.pattern,
  }) : super._();

  /// Deserialize.
  factory AuthSentCodeTypeFlashCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Pattern.
  final String pattern;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Sent Code Type Missed Call.
///
/// ID: `82006484`.
class AuthSentCodeTypeMissedCall extends AuthSentCodeTypeBase {
  /// Auth Sent Code Type Missed Call constructor.
  const AuthSentCodeTypeMissedCall({
    required this.prefix,
    required this.length,
  }) : super._();

  /// Deserialize.
  factory AuthSentCodeTypeMissedCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Prefix.
  final String prefix;

  /// Length.
  final int length;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Sent Code Type Email Code.
///
/// ID: `f450f59b`.
class AuthSentCodeTypeEmailCode extends AuthSentCodeTypeBase {
  /// Auth Sent Code Type Email Code constructor.
  const AuthSentCodeTypeEmailCode({
    required this.flags,
    required this.emailPattern,
    required this.length,
    required this.resetAvailablePeriod,
    required this.resetPendingDate,
  }) : super._();

  /// Deserialize.
  factory AuthSentCodeTypeEmailCode.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// apple_signin_allowed: bit
  bool get appleSigninAllowed => _bit(flags, 0);

  /// google_signin_allowed: bit
  bool get googleSigninAllowed => _bit(flags, 1);

  /// Email Pattern.
  final String emailPattern;

  /// Length.
  final int length;

  /// Reset Available Period.
  final int? resetAvailablePeriod;

  /// If [resetAvailablePeriod] exists.
  bool get hasResetAvailablePeriodField => _bit(flags, 3);

  /// Reset Pending Date.
  final int? resetPendingDate;

  /// If [resetPendingDate] exists.
  bool get hasResetPendingDateField => _bit(flags, 4);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Sent Code Type Set Up Email Required.
///
/// ID: `a5491dea`.
class AuthSentCodeTypeSetUpEmailRequired extends AuthSentCodeTypeBase {
  /// Auth Sent Code Type Set Up Email Required constructor.
  const AuthSentCodeTypeSetUpEmailRequired({
    required this.flags,
  }) : super._();

  /// Deserialize.
  factory AuthSentCodeTypeSetUpEmailRequired.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// apple_signin_allowed: bit
  bool get appleSigninAllowed => _bit(flags, 0);

  /// google_signin_allowed: bit
  bool get googleSigninAllowed => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Sent Code Type Fragment Sms.
///
/// ID: `d9565c39`.
class AuthSentCodeTypeFragmentSms extends AuthSentCodeTypeBase {
  /// Auth Sent Code Type Fragment Sms constructor.
  const AuthSentCodeTypeFragmentSms({
    required this.url,
    required this.length,
  }) : super._();

  /// Deserialize.
  factory AuthSentCodeTypeFragmentSms.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Url.
  final String url;

  /// Length.
  final int length;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Sent Code Type Firebase Sms.
///
/// ID: `e57b1432`.
class AuthSentCodeTypeFirebaseSms extends AuthSentCodeTypeBase {
  /// Auth Sent Code Type Firebase Sms constructor.
  const AuthSentCodeTypeFirebaseSms({
    required this.flags,
    required this.nonce,
    required this.receipt,
    required this.pushTimeout,
    required this.length,
  }) : super._();

  /// Deserialize.
  factory AuthSentCodeTypeFirebaseSms.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Nonce.
  final Uint8List? nonce;

  /// If [nonce] exists.
  bool get hasNonceField => _bit(flags, 0);

  /// Receipt.
  final String? receipt;

  /// If [receipt] exists.
  bool get hasReceiptField => _bit(flags, 1);

  /// Push Timeout.
  final int? pushTimeout;

  /// If [pushTimeout] exists.
  bool get hasPushTimeoutField => _bit(flags, 1);

  /// Length.
  final int length;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Bot Callback Answer.
abstract class MessagesBotCallbackAnswerBase extends TlConstructor {
  /// Predicate Messages Bot Callback Answer constructor.
  const MessagesBotCallbackAnswerBase._() : super._();
}

/// Messages Bot Callback Answer.
///
/// ID: `36585ea4`.
class MessagesBotCallbackAnswer extends MessagesBotCallbackAnswerBase {
  /// Messages Bot Callback Answer constructor.
  const MessagesBotCallbackAnswer({
    required this.flags,
    required this.message,
    required this.url,
    required this.cacheTime,
  }) : super._();

  /// Deserialize.
  factory MessagesBotCallbackAnswer.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// alert: bit
  bool get alert => _bit(flags, 1);

  /// has_url: bit
  bool get hasUrl => _bit(flags, 3);

  /// native_ui: bit
  bool get nativeUi => _bit(flags, 4);

  /// Message.
  final String? message;

  /// If [message] exists.
  bool get hasMessageField => _bit(flags, 0);

  /// Url.
  final String? url;

  /// If [url] exists.
  bool get hasUrlField => _bit(flags, 2);

  /// Cache Time.
  final int cacheTime;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Message Edit Data.
abstract class MessagesMessageEditDataBase extends TlConstructor {
  /// Predicate Messages Message Edit Data constructor.
  const MessagesMessageEditDataBase._() : super._();
}

/// Messages Message Edit Data.
///
/// ID: `26b5dde6`.
class MessagesMessageEditData extends MessagesMessageEditDataBase {
  /// Messages Message Edit Data constructor.
  const MessagesMessageEditData({
    required this.flags,
  }) : super._();

  /// Deserialize.
  factory MessagesMessageEditData.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// caption: bit
  bool get caption => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Bot Inline Message I D.
abstract class InputBotInlineMessageIDBase extends TlConstructor {
  /// Predicate Input Bot Inline Message I D constructor.
  const InputBotInlineMessageIDBase._() : super._();
}

/// Input Bot Inline Message I D.
///
/// ID: `890c3d89`.
class InputBotInlineMessageID extends InputBotInlineMessageIDBase {
  /// Input Bot Inline Message I D constructor.
  const InputBotInlineMessageID({
    required this.dcId,
    required this.id,
    required this.accessHash,
  }) : super._();

  /// Deserialize.
  factory InputBotInlineMessageID.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Dc Id.
  final int dcId;

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Bot Inline Message I D64.
///
/// ID: `b6d915d7`.
class InputBotInlineMessageID64 extends InputBotInlineMessageIDBase {
  /// Input Bot Inline Message I D64 constructor.
  const InputBotInlineMessageID64({
    required this.dcId,
    required this.ownerId,
    required this.id,
    required this.accessHash,
  }) : super._();

  /// Deserialize.
  factory InputBotInlineMessageID64.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Dc Id.
  final int dcId;

  /// Owner Id.
  final int ownerId;

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Inline Bot Switch P M.
abstract class InlineBotSwitchPMBase extends TlConstructor {
  /// Predicate Inline Bot Switch P M constructor.
  const InlineBotSwitchPMBase._() : super._();
}

/// Inline Bot Switch P M.
///
/// ID: `3c20629f`.
class InlineBotSwitchPM extends InlineBotSwitchPMBase {
  /// Inline Bot Switch P M constructor.
  const InlineBotSwitchPM({
    required this.text,
    required this.startParam,
  }) : super._();

  /// Deserialize.
  factory InlineBotSwitchPM.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final String text;

  /// Start Param.
  final String startParam;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Peer Dialogs.
abstract class MessagesPeerDialogsBase extends TlConstructor {
  /// Predicate Messages Peer Dialogs constructor.
  const MessagesPeerDialogsBase._() : super._();
}

/// Messages Peer Dialogs.
///
/// ID: `3371c354`.
class MessagesPeerDialogs extends MessagesPeerDialogsBase {
  /// Messages Peer Dialogs constructor.
  const MessagesPeerDialogs({
    required this.dialogs,
    required this.messages,
    required this.chats,
    required this.users,
    required this.state,
  }) : super._();

  /// Deserialize.
  factory MessagesPeerDialogs.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Dialogs.
  final List<DialogBase> dialogs;

  /// Messages.
  final List<MessageBase> messages;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// State.
  final UpdatesStateBase state;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Top Peer.
abstract class TopPeerBase extends TlConstructor {
  /// Predicate Top Peer constructor.
  const TopPeerBase._() : super._();
}

/// Top Peer.
///
/// ID: `edcdc05b`.
class TopPeer extends TopPeerBase {
  /// Top Peer constructor.
  const TopPeer({
    required this.peer,
    required this.rating,
  }) : super._();

  /// Deserialize.
  factory TopPeer.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Rating.
  final double rating;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Top Peer Category.
abstract class TopPeerCategoryBase extends TlConstructor {
  /// Predicate Top Peer Category constructor.
  const TopPeerCategoryBase._() : super._();
}

/// Top Peer Category Bots P M.
///
/// ID: `ab661b5b`.
class TopPeerCategoryBotsPM extends TopPeerCategoryBase {
  /// Top Peer Category Bots P M constructor.
  const TopPeerCategoryBotsPM() : super._();

  /// Deserialize.
  factory TopPeerCategoryBotsPM.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Top Peer Category Bots Inline.
///
/// ID: `148677e2`.
class TopPeerCategoryBotsInline extends TopPeerCategoryBase {
  /// Top Peer Category Bots Inline constructor.
  const TopPeerCategoryBotsInline() : super._();

  /// Deserialize.
  factory TopPeerCategoryBotsInline.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Top Peer Category Correspondents.
///
/// ID: `0637b7ed`.
class TopPeerCategoryCorrespondents extends TopPeerCategoryBase {
  /// Top Peer Category Correspondents constructor.
  const TopPeerCategoryCorrespondents() : super._();

  /// Deserialize.
  factory TopPeerCategoryCorrespondents.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Top Peer Category Groups.
///
/// ID: `bd17a14a`.
class TopPeerCategoryGroups extends TopPeerCategoryBase {
  /// Top Peer Category Groups constructor.
  const TopPeerCategoryGroups() : super._();

  /// Deserialize.
  factory TopPeerCategoryGroups.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Top Peer Category Channels.
///
/// ID: `161d9628`.
class TopPeerCategoryChannels extends TopPeerCategoryBase {
  /// Top Peer Category Channels constructor.
  const TopPeerCategoryChannels() : super._();

  /// Deserialize.
  factory TopPeerCategoryChannels.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Top Peer Category Phone Calls.
///
/// ID: `1e76a78c`.
class TopPeerCategoryPhoneCalls extends TopPeerCategoryBase {
  /// Top Peer Category Phone Calls constructor.
  const TopPeerCategoryPhoneCalls() : super._();

  /// Deserialize.
  factory TopPeerCategoryPhoneCalls.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Top Peer Category Forward Users.
///
/// ID: `a8406ca9`.
class TopPeerCategoryForwardUsers extends TopPeerCategoryBase {
  /// Top Peer Category Forward Users constructor.
  const TopPeerCategoryForwardUsers() : super._();

  /// Deserialize.
  factory TopPeerCategoryForwardUsers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Top Peer Category Forward Chats.
///
/// ID: `fbeec0f0`.
class TopPeerCategoryForwardChats extends TopPeerCategoryBase {
  /// Top Peer Category Forward Chats constructor.
  const TopPeerCategoryForwardChats() : super._();

  /// Deserialize.
  factory TopPeerCategoryForwardChats.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Top Peer Category Peers.
abstract class TopPeerCategoryPeersBase extends TlConstructor {
  /// Predicate Top Peer Category Peers constructor.
  const TopPeerCategoryPeersBase._() : super._();
}

/// Top Peer Category Peers.
///
/// ID: `fb834291`.
class TopPeerCategoryPeers extends TopPeerCategoryPeersBase {
  /// Top Peer Category Peers constructor.
  const TopPeerCategoryPeers({
    required this.category,
    required this.count,
    required this.peers,
  }) : super._();

  /// Deserialize.
  factory TopPeerCategoryPeers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Category.
  final TopPeerCategoryBase category;

  /// Count.
  final int count;

  /// Peers.
  final List<TopPeerBase> peers;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Contacts Top Peers.
abstract class ContactsTopPeersBase extends TlConstructor {
  /// Predicate Contacts Top Peers constructor.
  const ContactsTopPeersBase._() : super._();
}

/// Contacts Top Peers Not Modified.
///
/// ID: `de266ef5`.
class ContactsTopPeersNotModified extends ContactsTopPeersBase {
  /// Contacts Top Peers Not Modified constructor.
  const ContactsTopPeersNotModified() : super._();

  /// Deserialize.
  factory ContactsTopPeersNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Top Peers.
///
/// ID: `70b772a8`.
class ContactsTopPeers extends ContactsTopPeersBase {
  /// Contacts Top Peers constructor.
  const ContactsTopPeers({
    required this.categories,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory ContactsTopPeers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Categories.
  final List<TopPeerCategoryPeersBase> categories;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Top Peers Disabled.
///
/// ID: `b52c939d`.
class ContactsTopPeersDisabled extends ContactsTopPeersBase {
  /// Contacts Top Peers Disabled constructor.
  const ContactsTopPeersDisabled() : super._();

  /// Deserialize.
  factory ContactsTopPeersDisabled.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Draft Message.
abstract class DraftMessageBase extends TlConstructor {
  /// Predicate Draft Message constructor.
  const DraftMessageBase._() : super._();
}

/// Draft Message Empty.
///
/// ID: `1b0c841a`.
class DraftMessageEmpty extends DraftMessageBase {
  /// Draft Message Empty constructor.
  const DraftMessageEmpty({
    required this.flags,
    required this.date,
  }) : super._();

  /// Deserialize.
  factory DraftMessageEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Date.
  final int? date;

  /// If [date] exists.
  bool get hasDateField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Draft Message.
///
/// ID: `3fccf7ef`.
class DraftMessage extends DraftMessageBase {
  /// Draft Message constructor.
  const DraftMessage({
    required this.flags,
    required this.replyTo,
    required this.message,
    required this.entities,
    required this.media,
    required this.date,
  }) : super._();

  /// Deserialize.
  factory DraftMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// no_webpage: bit
  bool get noWebpage => _bit(flags, 1);

  /// invert_media: bit
  bool get invertMedia => _bit(flags, 6);

  /// Reply To.
  final InputReplyToBase? replyTo;

  /// If [replyTo] exists.
  bool get hasReplyToField => _bit(flags, 4);

  /// Message.
  final String message;

  /// Entities.
  final List<MessageEntityBase>? entities;

  /// If [entities] exists.
  bool get hasEntitiesField => _bit(flags, 3);

  /// Media.
  final InputMediaBase? media;

  /// If [media] exists.
  bool get hasMediaField => _bit(flags, 5);

  /// Date.
  final int date;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Featured Stickers.
abstract class MessagesFeaturedStickersBase extends TlConstructor {
  /// Predicate Messages Featured Stickers constructor.
  const MessagesFeaturedStickersBase._() : super._();
}

/// Messages Featured Stickers Not Modified.
///
/// ID: `c6dc0c66`.
class MessagesFeaturedStickersNotModified extends MessagesFeaturedStickersBase {
  /// Messages Featured Stickers Not Modified constructor.
  const MessagesFeaturedStickersNotModified({
    required this.count,
  }) : super._();

  /// Deserialize.
  factory MessagesFeaturedStickersNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Count.
  final int count;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Featured Stickers.
///
/// ID: `be382906`.
class MessagesFeaturedStickers extends MessagesFeaturedStickersBase {
  /// Messages Featured Stickers constructor.
  const MessagesFeaturedStickers({
    required this.flags,
    required this.hash,
    required this.count,
    required this.sets,
    required this.unread,
  }) : super._();

  /// Deserialize.
  factory MessagesFeaturedStickers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// premium: bit
  bool get premium => _bit(flags, 0);

  /// Hash.
  final int hash;

  /// Count.
  final int count;

  /// Sets.
  final List<StickerSetCoveredBase> sets;

  /// Unread.
  final List<int> unread;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Recent Stickers.
abstract class MessagesRecentStickersBase extends TlConstructor {
  /// Predicate Messages Recent Stickers constructor.
  const MessagesRecentStickersBase._() : super._();
}

/// Messages Recent Stickers Not Modified.
///
/// ID: `0b17f890`.
class MessagesRecentStickersNotModified extends MessagesRecentStickersBase {
  /// Messages Recent Stickers Not Modified constructor.
  const MessagesRecentStickersNotModified() : super._();

  /// Deserialize.
  factory MessagesRecentStickersNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Recent Stickers.
///
/// ID: `88d37c56`.
class MessagesRecentStickers extends MessagesRecentStickersBase {
  /// Messages Recent Stickers constructor.
  const MessagesRecentStickers({
    required this.hash,
    required this.packs,
    required this.stickers,
    required this.dates,
  }) : super._();

  /// Deserialize.
  factory MessagesRecentStickers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Packs.
  final List<StickerPackBase> packs;

  /// Stickers.
  final List<DocumentBase> stickers;

  /// Dates.
  final List<int> dates;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Archived Stickers.
abstract class MessagesArchivedStickersBase extends TlConstructor {
  /// Predicate Messages Archived Stickers constructor.
  const MessagesArchivedStickersBase._() : super._();
}

/// Messages Archived Stickers.
///
/// ID: `4fcba9c8`.
class MessagesArchivedStickers extends MessagesArchivedStickersBase {
  /// Messages Archived Stickers constructor.
  const MessagesArchivedStickers({
    required this.count,
    required this.sets,
  }) : super._();

  /// Deserialize.
  factory MessagesArchivedStickers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Count.
  final int count;

  /// Sets.
  final List<StickerSetCoveredBase> sets;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Sticker Set Install Result.
abstract class MessagesStickerSetInstallResultBase extends TlConstructor {
  /// Predicate Messages Sticker Set Install Result constructor.
  const MessagesStickerSetInstallResultBase._() : super._();
}

/// Messages Sticker Set Install Result Success.
///
/// ID: `38641628`.
class MessagesStickerSetInstallResultSuccess
    extends MessagesStickerSetInstallResultBase {
  /// Messages Sticker Set Install Result Success constructor.
  const MessagesStickerSetInstallResultSuccess() : super._();

  /// Deserialize.
  factory MessagesStickerSetInstallResultSuccess.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Sticker Set Install Result Archive.
///
/// ID: `35e410a8`.
class MessagesStickerSetInstallResultArchive
    extends MessagesStickerSetInstallResultBase {
  /// Messages Sticker Set Install Result Archive constructor.
  const MessagesStickerSetInstallResultArchive({
    required this.sets,
  }) : super._();

  /// Deserialize.
  factory MessagesStickerSetInstallResultArchive.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Sets.
  final List<StickerSetCoveredBase> sets;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Sticker Set Covered.
abstract class StickerSetCoveredBase extends TlConstructor {
  /// Predicate Sticker Set Covered constructor.
  const StickerSetCoveredBase._() : super._();
}

/// Sticker Set Covered.
///
/// ID: `6410a5d2`.
class StickerSetCovered extends StickerSetCoveredBase {
  /// Sticker Set Covered constructor.
  const StickerSetCovered({
    required this.set,
    required this.cover,
  }) : super._();

  /// Deserialize.
  factory StickerSetCovered.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Set.
  final StickerSetBase set;

  /// Cover.
  final DocumentBase cover;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Sticker Set Multi Covered.
///
/// ID: `3407e51b`.
class StickerSetMultiCovered extends StickerSetCoveredBase {
  /// Sticker Set Multi Covered constructor.
  const StickerSetMultiCovered({
    required this.set,
    required this.covers,
  }) : super._();

  /// Deserialize.
  factory StickerSetMultiCovered.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Set.
  final StickerSetBase set;

  /// Covers.
  final List<DocumentBase> covers;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Sticker Set Full Covered.
///
/// ID: `40d13c0e`.
class StickerSetFullCovered extends StickerSetCoveredBase {
  /// Sticker Set Full Covered constructor.
  const StickerSetFullCovered({
    required this.set,
    required this.packs,
    required this.keywords,
    required this.documents,
  }) : super._();

  /// Deserialize.
  factory StickerSetFullCovered.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Set.
  final StickerSetBase set;

  /// Packs.
  final List<StickerPackBase> packs;

  /// Keywords.
  final List<StickerKeywordBase> keywords;

  /// Documents.
  final List<DocumentBase> documents;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Sticker Set No Covered.
///
/// ID: `77b15d1c`.
class StickerSetNoCovered extends StickerSetCoveredBase {
  /// Sticker Set No Covered constructor.
  const StickerSetNoCovered({
    required this.set,
  }) : super._();

  /// Deserialize.
  factory StickerSetNoCovered.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Set.
  final StickerSetBase set;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Mask Coords.
abstract class MaskCoordsBase extends TlConstructor {
  /// Predicate Mask Coords constructor.
  const MaskCoordsBase._() : super._();
}

/// Mask Coords.
///
/// ID: `aed6dbb2`.
class MaskCoords extends MaskCoordsBase {
  /// Mask Coords constructor.
  const MaskCoords({
    required this.n,
    required this.x,
    required this.y,
    required this.zoom,
  }) : super._();

  /// Deserialize.
  factory MaskCoords.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// N.
  final int n;

  /// X.
  final double x;

  /// Y.
  final double y;

  /// Zoom.
  final double zoom;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Stickered Media.
abstract class InputStickeredMediaBase extends TlConstructor {
  /// Predicate Input Stickered Media constructor.
  const InputStickeredMediaBase._() : super._();
}

/// Input Stickered Media Photo.
///
/// ID: `4a992157`.
class InputStickeredMediaPhoto extends InputStickeredMediaBase {
  /// Input Stickered Media Photo constructor.
  const InputStickeredMediaPhoto({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory InputStickeredMediaPhoto.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final InputPhotoBase id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Stickered Media Document.
///
/// ID: `0438865b`.
class InputStickeredMediaDocument extends InputStickeredMediaBase {
  /// Input Stickered Media Document constructor.
  const InputStickeredMediaDocument({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory InputStickeredMediaDocument.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final InputDocumentBase id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Game.
abstract class GameBase extends TlConstructor {
  /// Predicate Game constructor.
  const GameBase._() : super._();
}

/// Game.
///
/// ID: `bdf9653b`.
class Game extends GameBase {
  /// Game constructor.
  const Game({
    required this.flags,
    required this.id,
    required this.accessHash,
    required this.shortName,
    required this.title,
    required this.description,
    required this.photo,
    required this.document,
  }) : super._();

  /// Deserialize.
  factory Game.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Short Name.
  final String shortName;

  /// Title.
  final String title;

  /// Description.
  final String description;

  /// Photo.
  final PhotoBase photo;

  /// Document.
  final DocumentBase? document;

  /// If [document] exists.
  bool get hasDocumentField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Game.
abstract class InputGameBase extends TlConstructor {
  /// Predicate Input Game constructor.
  const InputGameBase._() : super._();
}

/// Input Game I D.
///
/// ID: `032c3e77`.
class InputGameID extends InputGameBase {
  /// Input Game I D constructor.
  const InputGameID({
    required this.id,
    required this.accessHash,
  }) : super._();

  /// Deserialize.
  factory InputGameID.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Game Short Name.
///
/// ID: `c331e80a`.
class InputGameShortName extends InputGameBase {
  /// Input Game Short Name constructor.
  const InputGameShortName({
    required this.botId,
    required this.shortName,
  }) : super._();

  /// Deserialize.
  factory InputGameShortName.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Bot Id.
  final InputUserBase botId;

  /// Short Name.
  final String shortName;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate High Score.
abstract class HighScoreBase extends TlConstructor {
  /// Predicate High Score constructor.
  const HighScoreBase._() : super._();
}

/// High Score.
///
/// ID: `73a379eb`.
class HighScore extends HighScoreBase {
  /// High Score constructor.
  const HighScore({
    required this.pos,
    required this.userId,
    required this.score,
  }) : super._();

  /// Deserialize.
  factory HighScore.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Pos.
  final int pos;

  /// User Id.
  final int userId;

  /// Score.
  final int score;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages High Scores.
abstract class MessagesHighScoresBase extends TlConstructor {
  /// Predicate Messages High Scores constructor.
  const MessagesHighScoresBase._() : super._();
}

/// Messages High Scores.
///
/// ID: `9a3bfd99`.
class MessagesHighScores extends MessagesHighScoresBase {
  /// Messages High Scores constructor.
  const MessagesHighScores({
    required this.scores,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory MessagesHighScores.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Scores.
  final List<HighScoreBase> scores;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Rich Text.
abstract class RichTextBase extends TlConstructor {
  /// Predicate Rich Text constructor.
  const RichTextBase._() : super._();
}

/// Text Empty.
///
/// ID: `dc3d824f`.
class TextEmpty extends RichTextBase {
  /// Text Empty constructor.
  const TextEmpty() : super._();

  /// Deserialize.
  factory TextEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Text Plain.
///
/// ID: `744694e0`.
class TextPlain extends RichTextBase {
  /// Text Plain constructor.
  const TextPlain({
    required this.text,
  }) : super._();

  /// Deserialize.
  factory TextPlain.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final String text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Text Bold.
///
/// ID: `6724abc4`.
class TextBold extends RichTextBase {
  /// Text Bold constructor.
  const TextBold({
    required this.text,
  }) : super._();

  /// Deserialize.
  factory TextBold.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final RichTextBase text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Text Italic.
///
/// ID: `d912a59c`.
class TextItalic extends RichTextBase {
  /// Text Italic constructor.
  const TextItalic({
    required this.text,
  }) : super._();

  /// Deserialize.
  factory TextItalic.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final RichTextBase text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Text Underline.
///
/// ID: `c12622c4`.
class TextUnderline extends RichTextBase {
  /// Text Underline constructor.
  const TextUnderline({
    required this.text,
  }) : super._();

  /// Deserialize.
  factory TextUnderline.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final RichTextBase text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Text Strike.
///
/// ID: `9bf8bb95`.
class TextStrike extends RichTextBase {
  /// Text Strike constructor.
  const TextStrike({
    required this.text,
  }) : super._();

  /// Deserialize.
  factory TextStrike.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final RichTextBase text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Text Fixed.
///
/// ID: `6c3f19b9`.
class TextFixed extends RichTextBase {
  /// Text Fixed constructor.
  const TextFixed({
    required this.text,
  }) : super._();

  /// Deserialize.
  factory TextFixed.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final RichTextBase text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Text Url.
///
/// ID: `3c2884c1`.
class TextUrl extends RichTextBase {
  /// Text Url constructor.
  const TextUrl({
    required this.text,
    required this.url,
    required this.webpageId,
  }) : super._();

  /// Deserialize.
  factory TextUrl.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final RichTextBase text;

  /// Url.
  final String url;

  /// Webpage Id.
  final int webpageId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Text Email.
///
/// ID: `de5a0dd6`.
class TextEmail extends RichTextBase {
  /// Text Email constructor.
  const TextEmail({
    required this.text,
    required this.email,
  }) : super._();

  /// Deserialize.
  factory TextEmail.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final RichTextBase text;

  /// Email.
  final String email;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Text Concat.
///
/// ID: `7e6260d7`.
class TextConcat extends RichTextBase {
  /// Text Concat constructor.
  const TextConcat({
    required this.texts,
  }) : super._();

  /// Deserialize.
  factory TextConcat.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Texts.
  final List<RichTextBase> texts;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Text Subscript.
///
/// ID: `ed6a8504`.
class TextSubscript extends RichTextBase {
  /// Text Subscript constructor.
  const TextSubscript({
    required this.text,
  }) : super._();

  /// Deserialize.
  factory TextSubscript.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final RichTextBase text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Text Superscript.
///
/// ID: `c7fb5e01`.
class TextSuperscript extends RichTextBase {
  /// Text Superscript constructor.
  const TextSuperscript({
    required this.text,
  }) : super._();

  /// Deserialize.
  factory TextSuperscript.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final RichTextBase text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Text Marked.
///
/// ID: `034b8621`.
class TextMarked extends RichTextBase {
  /// Text Marked constructor.
  const TextMarked({
    required this.text,
  }) : super._();

  /// Deserialize.
  factory TextMarked.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final RichTextBase text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Text Phone.
///
/// ID: `1ccb966a`.
class TextPhone extends RichTextBase {
  /// Text Phone constructor.
  const TextPhone({
    required this.text,
    required this.phone,
  }) : super._();

  /// Deserialize.
  factory TextPhone.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final RichTextBase text;

  /// Phone.
  final String phone;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Text Image.
///
/// ID: `081ccf4f`.
class TextImage extends RichTextBase {
  /// Text Image constructor.
  const TextImage({
    required this.documentId,
    required this.w,
    required this.h,
  }) : super._();

  /// Deserialize.
  factory TextImage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Document Id.
  final int documentId;

  /// W.
  final int w;

  /// H.
  final int h;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Text Anchor.
///
/// ID: `35553762`.
class TextAnchor extends RichTextBase {
  /// Text Anchor constructor.
  const TextAnchor({
    required this.text,
    required this.name,
  }) : super._();

  /// Deserialize.
  factory TextAnchor.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final RichTextBase text;

  /// Name.
  final String name;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Page Block.
abstract class PageBlockBase extends TlConstructor {
  /// Predicate Page Block constructor.
  const PageBlockBase._() : super._();
}

/// Page Block Unsupported.
///
/// ID: `13567e8a`.
class PageBlockUnsupported extends PageBlockBase {
  /// Page Block Unsupported constructor.
  const PageBlockUnsupported() : super._();

  /// Deserialize.
  factory PageBlockUnsupported.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Title.
///
/// ID: `70abc3fd`.
class PageBlockTitle extends PageBlockBase {
  /// Page Block Title constructor.
  const PageBlockTitle({
    required this.text,
  }) : super._();

  /// Deserialize.
  factory PageBlockTitle.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final RichTextBase text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Subtitle.
///
/// ID: `8ffa9a1f`.
class PageBlockSubtitle extends PageBlockBase {
  /// Page Block Subtitle constructor.
  const PageBlockSubtitle({
    required this.text,
  }) : super._();

  /// Deserialize.
  factory PageBlockSubtitle.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final RichTextBase text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Author Date.
///
/// ID: `baafe5e0`.
class PageBlockAuthorDate extends PageBlockBase {
  /// Page Block Author Date constructor.
  const PageBlockAuthorDate({
    required this.author,
    required this.publishedDate,
  }) : super._();

  /// Deserialize.
  factory PageBlockAuthorDate.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Author.
  final RichTextBase author;

  /// Published Date.
  final int publishedDate;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Header.
///
/// ID: `bfd064ec`.
class PageBlockHeader extends PageBlockBase {
  /// Page Block Header constructor.
  const PageBlockHeader({
    required this.text,
  }) : super._();

  /// Deserialize.
  factory PageBlockHeader.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final RichTextBase text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Subheader.
///
/// ID: `f12bb6e1`.
class PageBlockSubheader extends PageBlockBase {
  /// Page Block Subheader constructor.
  const PageBlockSubheader({
    required this.text,
  }) : super._();

  /// Deserialize.
  factory PageBlockSubheader.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final RichTextBase text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Paragraph.
///
/// ID: `467a0766`.
class PageBlockParagraph extends PageBlockBase {
  /// Page Block Paragraph constructor.
  const PageBlockParagraph({
    required this.text,
  }) : super._();

  /// Deserialize.
  factory PageBlockParagraph.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final RichTextBase text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Preformatted.
///
/// ID: `c070d93e`.
class PageBlockPreformatted extends PageBlockBase {
  /// Page Block Preformatted constructor.
  const PageBlockPreformatted({
    required this.text,
    required this.language,
  }) : super._();

  /// Deserialize.
  factory PageBlockPreformatted.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final RichTextBase text;

  /// Language.
  final String language;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Footer.
///
/// ID: `48870999`.
class PageBlockFooter extends PageBlockBase {
  /// Page Block Footer constructor.
  const PageBlockFooter({
    required this.text,
  }) : super._();

  /// Deserialize.
  factory PageBlockFooter.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final RichTextBase text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Divider.
///
/// ID: `db20b188`.
class PageBlockDivider extends PageBlockBase {
  /// Page Block Divider constructor.
  const PageBlockDivider() : super._();

  /// Deserialize.
  factory PageBlockDivider.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Anchor.
///
/// ID: `ce0d37b0`.
class PageBlockAnchor extends PageBlockBase {
  /// Page Block Anchor constructor.
  const PageBlockAnchor({
    required this.name,
  }) : super._();

  /// Deserialize.
  factory PageBlockAnchor.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Name.
  final String name;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block List.
///
/// ID: `e4e88011`.
class PageBlockList extends PageBlockBase {
  /// Page Block List constructor.
  const PageBlockList({
    required this.items,
  }) : super._();

  /// Deserialize.
  factory PageBlockList.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Items.
  final List<PageListItemBase> items;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Blockquote.
///
/// ID: `263d7c26`.
class PageBlockBlockquote extends PageBlockBase {
  /// Page Block Blockquote constructor.
  const PageBlockBlockquote({
    required this.text,
    required this.caption,
  }) : super._();

  /// Deserialize.
  factory PageBlockBlockquote.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final RichTextBase text;

  /// Caption.
  final RichTextBase caption;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Pullquote.
///
/// ID: `4f4456d3`.
class PageBlockPullquote extends PageBlockBase {
  /// Page Block Pullquote constructor.
  const PageBlockPullquote({
    required this.text,
    required this.caption,
  }) : super._();

  /// Deserialize.
  factory PageBlockPullquote.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final RichTextBase text;

  /// Caption.
  final RichTextBase caption;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Photo.
///
/// ID: `1759c560`.
class PageBlockPhoto extends PageBlockBase {
  /// Page Block Photo constructor.
  const PageBlockPhoto({
    required this.flags,
    required this.photoId,
    required this.caption,
    required this.url,
    required this.webpageId,
  }) : super._();

  /// Deserialize.
  factory PageBlockPhoto.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Photo Id.
  final int photoId;

  /// Caption.
  final PageCaptionBase caption;

  /// Url.
  final String? url;

  /// If [url] exists.
  bool get hasUrlField => _bit(flags, 0);

  /// Webpage Id.
  final int? webpageId;

  /// If [webpageId] exists.
  bool get hasWebpageIdField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Video.
///
/// ID: `7c8fe7b6`.
class PageBlockVideo extends PageBlockBase {
  /// Page Block Video constructor.
  const PageBlockVideo({
    required this.flags,
    required this.videoId,
    required this.caption,
  }) : super._();

  /// Deserialize.
  factory PageBlockVideo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// autoplay: bit
  bool get autoplay => _bit(flags, 0);

  /// loop: bit
  bool get loop => _bit(flags, 1);

  /// Video Id.
  final int videoId;

  /// Caption.
  final PageCaptionBase caption;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Cover.
///
/// ID: `39f23300`.
class PageBlockCover extends PageBlockBase {
  /// Page Block Cover constructor.
  const PageBlockCover({
    required this.cover,
  }) : super._();

  /// Deserialize.
  factory PageBlockCover.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Cover.
  final PageBlockBase cover;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Embed.
///
/// ID: `a8718dc5`.
class PageBlockEmbed extends PageBlockBase {
  /// Page Block Embed constructor.
  const PageBlockEmbed({
    required this.flags,
    required this.url,
    required this.html,
    required this.posterPhotoId,
    required this.w,
    required this.h,
    required this.caption,
  }) : super._();

  /// Deserialize.
  factory PageBlockEmbed.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// full_width: bit
  bool get fullWidth => _bit(flags, 0);

  /// allow_scrolling: bit
  bool get allowScrolling => _bit(flags, 3);

  /// Url.
  final String? url;

  /// If [url] exists.
  bool get hasUrlField => _bit(flags, 1);

  /// Html.
  final String? html;

  /// If [html] exists.
  bool get hasHtmlField => _bit(flags, 2);

  /// Poster Photo Id.
  final int? posterPhotoId;

  /// If [posterPhotoId] exists.
  bool get hasPosterPhotoIdField => _bit(flags, 4);

  /// W.
  final int? w;

  /// If [w] exists.
  bool get hasWField => _bit(flags, 5);

  /// H.
  final int? h;

  /// If [h] exists.
  bool get hasHField => _bit(flags, 5);

  /// Caption.
  final PageCaptionBase caption;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Embed Post.
///
/// ID: `f259a80b`.
class PageBlockEmbedPost extends PageBlockBase {
  /// Page Block Embed Post constructor.
  const PageBlockEmbedPost({
    required this.url,
    required this.webpageId,
    required this.authorPhotoId,
    required this.author,
    required this.date,
    required this.blocks,
    required this.caption,
  }) : super._();

  /// Deserialize.
  factory PageBlockEmbedPost.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Url.
  final String url;

  /// Webpage Id.
  final int webpageId;

  /// Author Photo Id.
  final int authorPhotoId;

  /// Author.
  final String author;

  /// Date.
  final int date;

  /// Blocks.
  final List<PageBlockBase> blocks;

  /// Caption.
  final PageCaptionBase caption;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Collage.
///
/// ID: `65a0fa4d`.
class PageBlockCollage extends PageBlockBase {
  /// Page Block Collage constructor.
  const PageBlockCollage({
    required this.items,
    required this.caption,
  }) : super._();

  /// Deserialize.
  factory PageBlockCollage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Items.
  final List<PageBlockBase> items;

  /// Caption.
  final PageCaptionBase caption;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Slideshow.
///
/// ID: `031f9590`.
class PageBlockSlideshow extends PageBlockBase {
  /// Page Block Slideshow constructor.
  const PageBlockSlideshow({
    required this.items,
    required this.caption,
  }) : super._();

  /// Deserialize.
  factory PageBlockSlideshow.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Items.
  final List<PageBlockBase> items;

  /// Caption.
  final PageCaptionBase caption;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Channel.
///
/// ID: `ef1751b5`.
class PageBlockChannel extends PageBlockBase {
  /// Page Block Channel constructor.
  const PageBlockChannel({
    required this.channel,
  }) : super._();

  /// Deserialize.
  factory PageBlockChannel.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final ChatBase channel;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Audio.
///
/// ID: `804361ea`.
class PageBlockAudio extends PageBlockBase {
  /// Page Block Audio constructor.
  const PageBlockAudio({
    required this.audioId,
    required this.caption,
  }) : super._();

  /// Deserialize.
  factory PageBlockAudio.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Audio Id.
  final int audioId;

  /// Caption.
  final PageCaptionBase caption;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Kicker.
///
/// ID: `1e148390`.
class PageBlockKicker extends PageBlockBase {
  /// Page Block Kicker constructor.
  const PageBlockKicker({
    required this.text,
  }) : super._();

  /// Deserialize.
  factory PageBlockKicker.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final RichTextBase text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Table.
///
/// ID: `bf4dea82`.
class PageBlockTable extends PageBlockBase {
  /// Page Block Table constructor.
  const PageBlockTable({
    required this.flags,
    required this.title,
    required this.rows,
  }) : super._();

  /// Deserialize.
  factory PageBlockTable.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// bordered: bit
  bool get bordered => _bit(flags, 0);

  /// striped: bit
  bool get striped => _bit(flags, 1);

  /// Title.
  final RichTextBase title;

  /// Rows.
  final List<PageTableRowBase> rows;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Ordered List.
///
/// ID: `9a8ae1e1`.
class PageBlockOrderedList extends PageBlockBase {
  /// Page Block Ordered List constructor.
  const PageBlockOrderedList({
    required this.items,
  }) : super._();

  /// Deserialize.
  factory PageBlockOrderedList.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Items.
  final List<PageListOrderedItemBase> items;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Details.
///
/// ID: `76768bed`.
class PageBlockDetails extends PageBlockBase {
  /// Page Block Details constructor.
  const PageBlockDetails({
    required this.flags,
    required this.blocks,
    required this.title,
  }) : super._();

  /// Deserialize.
  factory PageBlockDetails.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// open: bit
  bool get open => _bit(flags, 0);

  /// Blocks.
  final List<PageBlockBase> blocks;

  /// Title.
  final RichTextBase title;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Related Articles.
///
/// ID: `16115a96`.
class PageBlockRelatedArticles extends PageBlockBase {
  /// Page Block Related Articles constructor.
  const PageBlockRelatedArticles({
    required this.title,
    required this.articles,
  }) : super._();

  /// Deserialize.
  factory PageBlockRelatedArticles.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Title.
  final RichTextBase title;

  /// Articles.
  final List<PageRelatedArticleBase> articles;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page Block Map.
///
/// ID: `a44f3ef6`.
class PageBlockMap extends PageBlockBase {
  /// Page Block Map constructor.
  const PageBlockMap({
    required this.geo,
    required this.zoom,
    required this.w,
    required this.h,
    required this.caption,
  }) : super._();

  /// Deserialize.
  factory PageBlockMap.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Geo.
  final GeoPointBase geo;

  /// Zoom.
  final int zoom;

  /// W.
  final int w;

  /// H.
  final int h;

  /// Caption.
  final PageCaptionBase caption;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Phone Call Discard Reason.
abstract class PhoneCallDiscardReasonBase extends TlConstructor {
  /// Predicate Phone Call Discard Reason constructor.
  const PhoneCallDiscardReasonBase._() : super._();
}

/// Phone Call Discard Reason Missed.
///
/// ID: `85e42301`.
class PhoneCallDiscardReasonMissed extends PhoneCallDiscardReasonBase {
  /// Phone Call Discard Reason Missed constructor.
  const PhoneCallDiscardReasonMissed() : super._();

  /// Deserialize.
  factory PhoneCallDiscardReasonMissed.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Call Discard Reason Disconnect.
///
/// ID: `e095c1a0`.
class PhoneCallDiscardReasonDisconnect extends PhoneCallDiscardReasonBase {
  /// Phone Call Discard Reason Disconnect constructor.
  const PhoneCallDiscardReasonDisconnect() : super._();

  /// Deserialize.
  factory PhoneCallDiscardReasonDisconnect.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Call Discard Reason Hangup.
///
/// ID: `57adc690`.
class PhoneCallDiscardReasonHangup extends PhoneCallDiscardReasonBase {
  /// Phone Call Discard Reason Hangup constructor.
  const PhoneCallDiscardReasonHangup() : super._();

  /// Deserialize.
  factory PhoneCallDiscardReasonHangup.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Call Discard Reason Busy.
///
/// ID: `faf7e8c9`.
class PhoneCallDiscardReasonBusy extends PhoneCallDiscardReasonBase {
  /// Phone Call Discard Reason Busy constructor.
  const PhoneCallDiscardReasonBusy() : super._();

  /// Deserialize.
  factory PhoneCallDiscardReasonBusy.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Data J S O N.
abstract class DataJSONBase extends TlConstructor {
  /// Predicate Data J S O N constructor.
  const DataJSONBase._() : super._();
}

/// Data J S O N.
///
/// ID: `7d748d04`.
class DataJSON extends DataJSONBase {
  /// Data J S O N constructor.
  const DataJSON({
    required this.data,
  }) : super._();

  /// Deserialize.
  factory DataJSON.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Data.
  final String data;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Labeled Price.
abstract class LabeledPriceBase extends TlConstructor {
  /// Predicate Labeled Price constructor.
  const LabeledPriceBase._() : super._();
}

/// Labeled Price.
///
/// ID: `cb296bf8`.
class LabeledPrice extends LabeledPriceBase {
  /// Labeled Price constructor.
  const LabeledPrice({
    required this.label,
    required this.amount,
  }) : super._();

  /// Deserialize.
  factory LabeledPrice.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Label.
  final String label;

  /// Amount.
  final int amount;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Invoice.
abstract class InvoiceBase extends TlConstructor {
  /// Predicate Invoice constructor.
  const InvoiceBase._() : super._();
}

/// Invoice.
///
/// ID: `5db95a15`.
class Invoice extends InvoiceBase {
  /// Invoice constructor.
  const Invoice({
    required this.flags,
    required this.currency,
    required this.prices,
    required this.maxTipAmount,
    required this.suggestedTipAmounts,
    required this.termsUrl,
  }) : super._();

  /// Deserialize.
  factory Invoice.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// test: bit
  bool get test => _bit(flags, 0);

  /// name_requested: bit
  bool get nameRequested => _bit(flags, 1);

  /// phone_requested: bit
  bool get phoneRequested => _bit(flags, 2);

  /// email_requested: bit
  bool get emailRequested => _bit(flags, 3);

  /// shipping_address_requested: bit
  bool get shippingAddressRequested => _bit(flags, 4);

  /// flexible: bit
  bool get flexible => _bit(flags, 5);

  /// phone_to_provider: bit
  bool get phoneToProvider => _bit(flags, 6);

  /// email_to_provider: bit
  bool get emailToProvider => _bit(flags, 7);

  /// recurring: bit
  bool get recurring => _bit(flags, 9);

  /// Currency.
  final String currency;

  /// Prices.
  final List<LabeledPriceBase> prices;

  /// Max Tip Amount.
  final int? maxTipAmount;

  /// If [maxTipAmount] exists.
  bool get hasMaxTipAmountField => _bit(flags, 8);

  /// Suggested Tip Amounts.
  final List<int>? suggestedTipAmounts;

  /// If [suggestedTipAmounts] exists.
  bool get hasSuggestedTipAmountsField => _bit(flags, 8);

  /// Terms Url.
  final String? termsUrl;

  /// If [termsUrl] exists.
  bool get hasTermsUrlField => _bit(flags, 10);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Payment Charge.
abstract class PaymentChargeBase extends TlConstructor {
  /// Predicate Payment Charge constructor.
  const PaymentChargeBase._() : super._();
}

/// Payment Charge.
///
/// ID: `ea02c27e`.
class PaymentCharge extends PaymentChargeBase {
  /// Payment Charge constructor.
  const PaymentCharge({
    required this.id,
    required this.providerChargeId,
  }) : super._();

  /// Deserialize.
  factory PaymentCharge.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final String id;

  /// Provider Charge Id.
  final String providerChargeId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Post Address.
abstract class PostAddressBase extends TlConstructor {
  /// Predicate Post Address constructor.
  const PostAddressBase._() : super._();
}

/// Post Address.
///
/// ID: `1e8caaeb`.
class PostAddress extends PostAddressBase {
  /// Post Address constructor.
  const PostAddress({
    required this.streetLine1,
    required this.streetLine2,
    required this.city,
    required this.state,
    required this.countryIso2,
    required this.postCode,
  }) : super._();

  /// Deserialize.
  factory PostAddress.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Street Line1.
  final String streetLine1;

  /// Street Line2.
  final String streetLine2;

  /// City.
  final String city;

  /// State.
  final String state;

  /// Country Iso2.
  final String countryIso2;

  /// Post Code.
  final String postCode;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Payment Requested Info.
abstract class PaymentRequestedInfoBase extends TlConstructor {
  /// Predicate Payment Requested Info constructor.
  const PaymentRequestedInfoBase._() : super._();
}

/// Payment Requested Info.
///
/// ID: `909c3f94`.
class PaymentRequestedInfo extends PaymentRequestedInfoBase {
  /// Payment Requested Info constructor.
  const PaymentRequestedInfo({
    required this.flags,
    required this.name,
    required this.phone,
    required this.email,
    required this.shippingAddress,
  }) : super._();

  /// Deserialize.
  factory PaymentRequestedInfo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Name.
  final String? name;

  /// If [name] exists.
  bool get hasNameField => _bit(flags, 0);

  /// Phone.
  final String? phone;

  /// If [phone] exists.
  bool get hasPhoneField => _bit(flags, 1);

  /// Email.
  final String? email;

  /// If [email] exists.
  bool get hasEmailField => _bit(flags, 2);

  /// Shipping Address.
  final PostAddressBase? shippingAddress;

  /// If [shippingAddress] exists.
  bool get hasShippingAddressField => _bit(flags, 3);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Payment Saved Credentials.
abstract class PaymentSavedCredentialsBase extends TlConstructor {
  /// Predicate Payment Saved Credentials constructor.
  const PaymentSavedCredentialsBase._() : super._();
}

/// Payment Saved Credentials Card.
///
/// ID: `cdc27a1f`.
class PaymentSavedCredentialsCard extends PaymentSavedCredentialsBase {
  /// Payment Saved Credentials Card constructor.
  const PaymentSavedCredentialsCard({
    required this.id,
    required this.title,
  }) : super._();

  /// Deserialize.
  factory PaymentSavedCredentialsCard.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final String id;

  /// Title.
  final String title;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Web Document.
abstract class WebDocumentBase extends TlConstructor {
  /// Predicate Web Document constructor.
  const WebDocumentBase._() : super._();
}

/// Web Document.
///
/// ID: `1c570ed1`.
class WebDocument extends WebDocumentBase {
  /// Web Document constructor.
  const WebDocument({
    required this.url,
    required this.accessHash,
    required this.size,
    required this.mimeType,
    required this.attributes,
  }) : super._();

  /// Deserialize.
  factory WebDocument.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Url.
  final String url;

  /// Access Hash.
  final int accessHash;

  /// Size.
  final int size;

  /// Mime Type.
  final String mimeType;

  /// Attributes.
  final List<DocumentAttributeBase> attributes;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Web Document No Proxy.
///
/// ID: `f9c8bcc6`.
class WebDocumentNoProxy extends WebDocumentBase {
  /// Web Document No Proxy constructor.
  const WebDocumentNoProxy({
    required this.url,
    required this.size,
    required this.mimeType,
    required this.attributes,
  }) : super._();

  /// Deserialize.
  factory WebDocumentNoProxy.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Url.
  final String url;

  /// Size.
  final int size;

  /// Mime Type.
  final String mimeType;

  /// Attributes.
  final List<DocumentAttributeBase> attributes;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Web Document.
abstract class InputWebDocumentBase extends TlConstructor {
  /// Predicate Input Web Document constructor.
  const InputWebDocumentBase._() : super._();
}

/// Input Web Document.
///
/// ID: `9bed434d`.
class InputWebDocument extends InputWebDocumentBase {
  /// Input Web Document constructor.
  const InputWebDocument({
    required this.url,
    required this.size,
    required this.mimeType,
    required this.attributes,
  }) : super._();

  /// Deserialize.
  factory InputWebDocument.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Url.
  final String url;

  /// Size.
  final int size;

  /// Mime Type.
  final String mimeType;

  /// Attributes.
  final List<DocumentAttributeBase> attributes;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Web File Location.
abstract class InputWebFileLocationBase extends TlConstructor {
  /// Predicate Input Web File Location constructor.
  const InputWebFileLocationBase._() : super._();
}

/// Input Web File Location.
///
/// ID: `c239d686`.
class InputWebFileLocation extends InputWebFileLocationBase {
  /// Input Web File Location constructor.
  const InputWebFileLocation({
    required this.url,
    required this.accessHash,
  }) : super._();

  /// Deserialize.
  factory InputWebFileLocation.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Url.
  final String url;

  /// Access Hash.
  final int accessHash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Web File Geo Point Location.
///
/// ID: `9f2221c9`.
class InputWebFileGeoPointLocation extends InputWebFileLocationBase {
  /// Input Web File Geo Point Location constructor.
  const InputWebFileGeoPointLocation({
    required this.geoPoint,
    required this.accessHash,
    required this.w,
    required this.h,
    required this.zoom,
    required this.scale,
  }) : super._();

  /// Deserialize.
  factory InputWebFileGeoPointLocation.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Geo Point.
  final InputGeoPointBase geoPoint;

  /// Access Hash.
  final int accessHash;

  /// W.
  final int w;

  /// H.
  final int h;

  /// Zoom.
  final int zoom;

  /// Scale.
  final int scale;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Web File Audio Album Thumb Location.
///
/// ID: `f46fe924`.
class InputWebFileAudioAlbumThumbLocation extends InputWebFileLocationBase {
  /// Input Web File Audio Album Thumb Location constructor.
  const InputWebFileAudioAlbumThumbLocation({
    required this.flags,
    required this.document,
    required this.title,
    required this.performer,
  }) : super._();

  /// Deserialize.
  factory InputWebFileAudioAlbumThumbLocation.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// small: bit
  bool get small => _bit(flags, 2);

  /// Document.
  final InputDocumentBase? document;

  /// If [document] exists.
  bool get hasDocumentField => _bit(flags, 0);

  /// Title.
  final String? title;

  /// If [title] exists.
  bool get hasTitleField => _bit(flags, 1);

  /// Performer.
  final String? performer;

  /// If [performer] exists.
  bool get hasPerformerField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Upload Web File.
abstract class UploadWebFileBase extends TlConstructor {
  /// Predicate Upload Web File constructor.
  const UploadWebFileBase._() : super._();
}

/// Upload Web File.
///
/// ID: `21e753bc`.
class UploadWebFile extends UploadWebFileBase {
  /// Upload Web File constructor.
  const UploadWebFile({
    required this.size,
    required this.mimeType,
    required this.fileType,
    required this.mtime,
    required this.bytes,
  }) : super._();

  /// Deserialize.
  factory UploadWebFile.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Size.
  final int size;

  /// Mime Type.
  final String mimeType;

  /// File Type.
  final StorageFileTypeBase fileType;

  /// Mtime.
  final int mtime;

  /// Bytes.
  final Uint8List bytes;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Payments Payment Form.
abstract class PaymentsPaymentFormBase extends TlConstructor {
  /// Predicate Payments Payment Form constructor.
  const PaymentsPaymentFormBase._() : super._();
}

/// Payments Payment Form.
///
/// ID: `a0058751`.
class PaymentsPaymentForm extends PaymentsPaymentFormBase {
  /// Payments Payment Form constructor.
  const PaymentsPaymentForm({
    required this.flags,
    required this.formId,
    required this.botId,
    required this.title,
    required this.description,
    required this.photo,
    required this.invoice,
    required this.providerId,
    required this.url,
    required this.nativeProvider,
    required this.nativeParams,
    required this.additionalMethods,
    required this.savedInfo,
    required this.savedCredentials,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory PaymentsPaymentForm.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// can_save_credentials: bit
  bool get canSaveCredentials => _bit(flags, 2);

  /// password_missing: bit
  bool get passwordMissing => _bit(flags, 3);

  /// Form Id.
  final int formId;

  /// Bot Id.
  final int botId;

  /// Title.
  final String title;

  /// Description.
  final String description;

  /// Photo.
  final WebDocumentBase? photo;

  /// If [photo] exists.
  bool get hasPhotoField => _bit(flags, 5);

  /// Invoice.
  final InvoiceBase invoice;

  /// Provider Id.
  final int providerId;

  /// Url.
  final String url;

  /// Native Provider.
  final String? nativeProvider;

  /// If [nativeProvider] exists.
  bool get hasNativeProviderField => _bit(flags, 4);

  /// Native Params.
  final DataJSONBase? nativeParams;

  /// If [nativeParams] exists.
  bool get hasNativeParamsField => _bit(flags, 4);

  /// Additional Methods.
  final List<PaymentFormMethodBase>? additionalMethods;

  /// If [additionalMethods] exists.
  bool get hasAdditionalMethodsField => _bit(flags, 6);

  /// Saved Info.
  final PaymentRequestedInfoBase? savedInfo;

  /// If [savedInfo] exists.
  bool get hasSavedInfoField => _bit(flags, 0);

  /// Saved Credentials.
  final List<PaymentSavedCredentialsBase>? savedCredentials;

  /// If [savedCredentials] exists.
  bool get hasSavedCredentialsField => _bit(flags, 1);

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Payments Validated Requested Info.
abstract class PaymentsValidatedRequestedInfoBase extends TlConstructor {
  /// Predicate Payments Validated Requested Info constructor.
  const PaymentsValidatedRequestedInfoBase._() : super._();
}

/// Payments Validated Requested Info.
///
/// ID: `d1451883`.
class PaymentsValidatedRequestedInfo
    extends PaymentsValidatedRequestedInfoBase {
  /// Payments Validated Requested Info constructor.
  const PaymentsValidatedRequestedInfo({
    required this.flags,
    required this.id,
    required this.shippingOptions,
  }) : super._();

  /// Deserialize.
  factory PaymentsValidatedRequestedInfo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Id.
  final String? id;

  /// If [id] exists.
  bool get hasIdField => _bit(flags, 0);

  /// Shipping Options.
  final List<ShippingOptionBase>? shippingOptions;

  /// If [shippingOptions] exists.
  bool get hasShippingOptionsField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Payments Payment Result.
abstract class PaymentsPaymentResultBase extends TlConstructor {
  /// Predicate Payments Payment Result constructor.
  const PaymentsPaymentResultBase._() : super._();
}

/// Payments Payment Result.
///
/// ID: `4e5f810d`.
class PaymentsPaymentResult extends PaymentsPaymentResultBase {
  /// Payments Payment Result constructor.
  const PaymentsPaymentResult({
    required this.updates,
  }) : super._();

  /// Deserialize.
  factory PaymentsPaymentResult.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Updates.
  final UpdatesBase updates;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Payments Payment Verification Needed.
///
/// ID: `d8411139`.
class PaymentsPaymentVerificationNeeded extends PaymentsPaymentResultBase {
  /// Payments Payment Verification Needed constructor.
  const PaymentsPaymentVerificationNeeded({
    required this.url,
  }) : super._();

  /// Deserialize.
  factory PaymentsPaymentVerificationNeeded.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Url.
  final String url;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Payments Payment Receipt.
abstract class PaymentsPaymentReceiptBase extends TlConstructor {
  /// Predicate Payments Payment Receipt constructor.
  const PaymentsPaymentReceiptBase._() : super._();
}

/// Payments Payment Receipt.
///
/// ID: `70c4fe03`.
class PaymentsPaymentReceipt extends PaymentsPaymentReceiptBase {
  /// Payments Payment Receipt constructor.
  const PaymentsPaymentReceipt({
    required this.flags,
    required this.date,
    required this.botId,
    required this.providerId,
    required this.title,
    required this.description,
    required this.photo,
    required this.invoice,
    required this.info,
    required this.shipping,
    required this.tipAmount,
    required this.currency,
    required this.totalAmount,
    required this.credentialsTitle,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory PaymentsPaymentReceipt.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Date.
  final int date;

  /// Bot Id.
  final int botId;

  /// Provider Id.
  final int providerId;

  /// Title.
  final String title;

  /// Description.
  final String description;

  /// Photo.
  final WebDocumentBase? photo;

  /// If [photo] exists.
  bool get hasPhotoField => _bit(flags, 2);

  /// Invoice.
  final InvoiceBase invoice;

  /// Info.
  final PaymentRequestedInfoBase? info;

  /// If [info] exists.
  bool get hasInfoField => _bit(flags, 0);

  /// Shipping.
  final ShippingOptionBase? shipping;

  /// If [shipping] exists.
  bool get hasShippingField => _bit(flags, 1);

  /// Tip Amount.
  final int? tipAmount;

  /// If [tipAmount] exists.
  bool get hasTipAmountField => _bit(flags, 3);

  /// Currency.
  final String currency;

  /// Total Amount.
  final int totalAmount;

  /// Credentials Title.
  final String credentialsTitle;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Payments Saved Info.
abstract class PaymentsSavedInfoBase extends TlConstructor {
  /// Predicate Payments Saved Info constructor.
  const PaymentsSavedInfoBase._() : super._();
}

/// Payments Saved Info.
///
/// ID: `fb8fe43c`.
class PaymentsSavedInfo extends PaymentsSavedInfoBase {
  /// Payments Saved Info constructor.
  const PaymentsSavedInfo({
    required this.flags,
    required this.savedInfo,
  }) : super._();

  /// Deserialize.
  factory PaymentsSavedInfo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// has_saved_credentials: bit
  bool get hasSavedCredentials => _bit(flags, 1);

  /// Saved Info.
  final PaymentRequestedInfoBase? savedInfo;

  /// If [savedInfo] exists.
  bool get hasSavedInfoField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Payment Credentials.
abstract class InputPaymentCredentialsBase extends TlConstructor {
  /// Predicate Input Payment Credentials constructor.
  const InputPaymentCredentialsBase._() : super._();
}

/// Input Payment Credentials Saved.
///
/// ID: `c10eb2cf`.
class InputPaymentCredentialsSaved extends InputPaymentCredentialsBase {
  /// Input Payment Credentials Saved constructor.
  const InputPaymentCredentialsSaved({
    required this.id,
    required this.tmpPassword,
  }) : super._();

  /// Deserialize.
  factory InputPaymentCredentialsSaved.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final String id;

  /// Tmp Password.
  final Uint8List tmpPassword;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Payment Credentials.
///
/// ID: `3417d728`.
class InputPaymentCredentials extends InputPaymentCredentialsBase {
  /// Input Payment Credentials constructor.
  const InputPaymentCredentials({
    required this.flags,
    required this.data,
  }) : super._();

  /// Deserialize.
  factory InputPaymentCredentials.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// save: bit
  bool get save => _bit(flags, 0);

  /// Data.
  final DataJSONBase data;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Payment Credentials Apple Pay.
///
/// ID: `0aa1c39f`.
class InputPaymentCredentialsApplePay extends InputPaymentCredentialsBase {
  /// Input Payment Credentials Apple Pay constructor.
  const InputPaymentCredentialsApplePay({
    required this.paymentData,
  }) : super._();

  /// Deserialize.
  factory InputPaymentCredentialsApplePay.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Payment Data.
  final DataJSONBase paymentData;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Payment Credentials Google Pay.
///
/// ID: `8ac32801`.
class InputPaymentCredentialsGooglePay extends InputPaymentCredentialsBase {
  /// Input Payment Credentials Google Pay constructor.
  const InputPaymentCredentialsGooglePay({
    required this.paymentToken,
  }) : super._();

  /// Deserialize.
  factory InputPaymentCredentialsGooglePay.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Payment Token.
  final DataJSONBase paymentToken;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Account Tmp Password.
abstract class AccountTmpPasswordBase extends TlConstructor {
  /// Predicate Account Tmp Password constructor.
  const AccountTmpPasswordBase._() : super._();
}

/// Account Tmp Password.
///
/// ID: `db64fd34`.
class AccountTmpPassword extends AccountTmpPasswordBase {
  /// Account Tmp Password constructor.
  const AccountTmpPassword({
    required this.tmpPassword,
    required this.validUntil,
  }) : super._();

  /// Deserialize.
  factory AccountTmpPassword.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Tmp Password.
  final Uint8List tmpPassword;

  /// Valid Until.
  final int validUntil;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Shipping Option.
abstract class ShippingOptionBase extends TlConstructor {
  /// Predicate Shipping Option constructor.
  const ShippingOptionBase._() : super._();
}

/// Shipping Option.
///
/// ID: `b6213cdf`.
class ShippingOption extends ShippingOptionBase {
  /// Shipping Option constructor.
  const ShippingOption({
    required this.id,
    required this.title,
    required this.prices,
  }) : super._();

  /// Deserialize.
  factory ShippingOption.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final String id;

  /// Title.
  final String title;

  /// Prices.
  final List<LabeledPriceBase> prices;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Sticker Set Item.
abstract class InputStickerSetItemBase extends TlConstructor {
  /// Predicate Input Sticker Set Item constructor.
  const InputStickerSetItemBase._() : super._();
}

/// Input Sticker Set Item.
///
/// ID: `32da9e9c`.
class InputStickerSetItem extends InputStickerSetItemBase {
  /// Input Sticker Set Item constructor.
  const InputStickerSetItem({
    required this.flags,
    required this.document,
    required this.emoji,
    required this.maskCoords,
    required this.keywords,
  }) : super._();

  /// Deserialize.
  factory InputStickerSetItem.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Document.
  final InputDocumentBase document;

  /// Emoji.
  final String emoji;

  /// Mask Coords.
  final MaskCoordsBase? maskCoords;

  /// If [maskCoords] exists.
  bool get hasMaskCoordsField => _bit(flags, 0);

  /// Keywords.
  final String? keywords;

  /// If [keywords] exists.
  bool get hasKeywordsField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Phone Call.
abstract class InputPhoneCallBase extends TlConstructor {
  /// Predicate Input Phone Call constructor.
  const InputPhoneCallBase._() : super._();
}

/// Input Phone Call.
///
/// ID: `1e36fded`.
class InputPhoneCall extends InputPhoneCallBase {
  /// Input Phone Call constructor.
  const InputPhoneCall({
    required this.id,
    required this.accessHash,
  }) : super._();

  /// Deserialize.
  factory InputPhoneCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Phone Call.
abstract class PhoneCallBase extends TlConstructor {
  /// Predicate Phone Call constructor.
  const PhoneCallBase._() : super._();
}

/// Phone Call Empty.
///
/// ID: `5366c915`.
class PhoneCallEmpty extends PhoneCallBase {
  /// Phone Call Empty constructor.
  const PhoneCallEmpty({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory PhoneCallEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Call Waiting.
///
/// ID: `c5226f17`.
class PhoneCallWaiting extends PhoneCallBase {
  /// Phone Call Waiting constructor.
  const PhoneCallWaiting({
    required this.flags,
    required this.id,
    required this.accessHash,
    required this.date,
    required this.adminId,
    required this.participantId,
    required this.protocol,
    required this.receiveDate,
  }) : super._();

  /// Deserialize.
  factory PhoneCallWaiting.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// video: bit
  bool get video => _bit(flags, 6);

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Date.
  final int date;

  /// Admin Id.
  final int adminId;

  /// Participant Id.
  final int participantId;

  /// Protocol.
  final PhoneCallProtocolBase protocol;

  /// Receive Date.
  final int? receiveDate;

  /// If [receiveDate] exists.
  bool get hasReceiveDateField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Call Requested.
///
/// ID: `14b0ed0c`.
class PhoneCallRequested extends PhoneCallBase {
  /// Phone Call Requested constructor.
  const PhoneCallRequested({
    required this.flags,
    required this.id,
    required this.accessHash,
    required this.date,
    required this.adminId,
    required this.participantId,
    required this.gAHash,
    required this.protocol,
  }) : super._();

  /// Deserialize.
  factory PhoneCallRequested.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// video: bit
  bool get video => _bit(flags, 6);

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Date.
  final int date;

  /// Admin Id.
  final int adminId;

  /// Participant Id.
  final int participantId;

  /// G A Hash.
  final Uint8List gAHash;

  /// Protocol.
  final PhoneCallProtocolBase protocol;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Call Accepted.
///
/// ID: `3660c311`.
class PhoneCallAccepted extends PhoneCallBase {
  /// Phone Call Accepted constructor.
  const PhoneCallAccepted({
    required this.flags,
    required this.id,
    required this.accessHash,
    required this.date,
    required this.adminId,
    required this.participantId,
    required this.gB,
    required this.protocol,
  }) : super._();

  /// Deserialize.
  factory PhoneCallAccepted.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// video: bit
  bool get video => _bit(flags, 6);

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Date.
  final int date;

  /// Admin Id.
  final int adminId;

  /// Participant Id.
  final int participantId;

  /// G B.
  final Uint8List gB;

  /// Protocol.
  final PhoneCallProtocolBase protocol;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Call.
///
/// ID: `967f7c67`.
class PhoneCall extends PhoneCallBase {
  /// Phone Call constructor.
  const PhoneCall({
    required this.flags,
    required this.id,
    required this.accessHash,
    required this.date,
    required this.adminId,
    required this.participantId,
    required this.gAOrB,
    required this.keyFingerprint,
    required this.protocol,
    required this.connections,
    required this.startDate,
  }) : super._();

  /// Deserialize.
  factory PhoneCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// p2p_allowed: bit
  bool get p2pAllowed => _bit(flags, 5);

  /// video: bit
  bool get video => _bit(flags, 6);

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Date.
  final int date;

  /// Admin Id.
  final int adminId;

  /// Participant Id.
  final int participantId;

  /// G A Or B.
  final Uint8List gAOrB;

  /// Key Fingerprint.
  final int keyFingerprint;

  /// Protocol.
  final PhoneCallProtocolBase protocol;

  /// Connections.
  final List<PhoneConnectionBase> connections;

  /// Start Date.
  final int startDate;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Call Discarded.
///
/// ID: `50ca4de1`.
class PhoneCallDiscarded extends PhoneCallBase {
  /// Phone Call Discarded constructor.
  const PhoneCallDiscarded({
    required this.flags,
    required this.id,
    required this.reason,
    required this.duration,
  }) : super._();

  /// Deserialize.
  factory PhoneCallDiscarded.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// need_rating: bit
  bool get needRating => _bit(flags, 2);

  /// need_debug: bit
  bool get needDebug => _bit(flags, 3);

  /// video: bit
  bool get video => _bit(flags, 6);

  /// Id.
  final int id;

  /// Reason.
  final PhoneCallDiscardReasonBase? reason;

  /// If [reason] exists.
  bool get hasReasonField => _bit(flags, 0);

  /// Duration.
  final int? duration;

  /// If [duration] exists.
  bool get hasDurationField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Phone Connection.
abstract class PhoneConnectionBase extends TlConstructor {
  /// Predicate Phone Connection constructor.
  const PhoneConnectionBase._() : super._();
}

/// Phone Connection.
///
/// ID: `9cc123c7`.
class PhoneConnection extends PhoneConnectionBase {
  /// Phone Connection constructor.
  const PhoneConnection({
    required this.flags,
    required this.id,
    required this.ip,
    required this.ipv6,
    required this.port,
    required this.peerTag,
  }) : super._();

  /// Deserialize.
  factory PhoneConnection.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// tcp: bit
  bool get tcp => _bit(flags, 0);

  /// Id.
  final int id;

  /// Ip.
  final String ip;

  /// Ipv6.
  final String ipv6;

  /// Port.
  final int port;

  /// Peer Tag.
  final Uint8List peerTag;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Connection Webrtc.
///
/// ID: `635fe375`.
class PhoneConnectionWebrtc extends PhoneConnectionBase {
  /// Phone Connection Webrtc constructor.
  const PhoneConnectionWebrtc({
    required this.flags,
    required this.id,
    required this.ip,
    required this.ipv6,
    required this.port,
    required this.username,
    required this.password,
  }) : super._();

  /// Deserialize.
  factory PhoneConnectionWebrtc.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// turn: bit
  bool get turn => _bit(flags, 0);

  /// stun: bit
  bool get stun => _bit(flags, 1);

  /// Id.
  final int id;

  /// Ip.
  final String ip;

  /// Ipv6.
  final String ipv6;

  /// Port.
  final int port;

  /// Username.
  final String username;

  /// Password.
  final String password;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Phone Call Protocol.
abstract class PhoneCallProtocolBase extends TlConstructor {
  /// Predicate Phone Call Protocol constructor.
  const PhoneCallProtocolBase._() : super._();
}

/// Phone Call Protocol.
///
/// ID: `fc878fc8`.
class PhoneCallProtocol extends PhoneCallProtocolBase {
  /// Phone Call Protocol constructor.
  const PhoneCallProtocol({
    required this.flags,
    required this.minLayer,
    required this.maxLayer,
    required this.libraryVersions,
  }) : super._();

  /// Deserialize.
  factory PhoneCallProtocol.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// udp_p2p: bit
  bool get udpP2p => _bit(flags, 0);

  /// udp_reflector: bit
  bool get udpReflector => _bit(flags, 1);

  /// Min Layer.
  final int minLayer;

  /// Max Layer.
  final int maxLayer;

  /// Library Versions.
  final List<String> libraryVersions;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Phone Phone Call.
abstract class PhonePhoneCallBase extends TlConstructor {
  /// Predicate Phone Phone Call constructor.
  const PhonePhoneCallBase._() : super._();
}

/// Phone Phone Call.
///
/// ID: `ec82e140`.
class PhonePhoneCall extends PhonePhoneCallBase {
  /// Phone Phone Call constructor.
  const PhonePhoneCall({
    required this.phoneCall,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory PhonePhoneCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Phone Call.
  final PhoneCallBase phoneCall;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Upload Cdn File.
abstract class UploadCdnFileBase extends TlConstructor {
  /// Predicate Upload Cdn File constructor.
  const UploadCdnFileBase._() : super._();
}

/// Upload Cdn File Reupload Needed.
///
/// ID: `eea8e46e`.
class UploadCdnFileReuploadNeeded extends UploadCdnFileBase {
  /// Upload Cdn File Reupload Needed constructor.
  const UploadCdnFileReuploadNeeded({
    required this.requestToken,
  }) : super._();

  /// Deserialize.
  factory UploadCdnFileReuploadNeeded.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Request Token.
  final Uint8List requestToken;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Upload Cdn File.
///
/// ID: `a99fca4f`.
class UploadCdnFile extends UploadCdnFileBase {
  /// Upload Cdn File constructor.
  const UploadCdnFile({
    required this.bytes,
  }) : super._();

  /// Deserialize.
  factory UploadCdnFile.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Bytes.
  final Uint8List bytes;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Cdn Public Key.
abstract class CdnPublicKeyBase extends TlConstructor {
  /// Predicate Cdn Public Key constructor.
  const CdnPublicKeyBase._() : super._();
}

/// Cdn Public Key.
///
/// ID: `c982eaba`.
class CdnPublicKey extends CdnPublicKeyBase {
  /// Cdn Public Key constructor.
  const CdnPublicKey({
    required this.dcId,
    required this.publicKey,
  }) : super._();

  /// Deserialize.
  factory CdnPublicKey.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Dc Id.
  final int dcId;

  /// Public Key.
  final String publicKey;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Cdn Config.
abstract class CdnConfigBase extends TlConstructor {
  /// Predicate Cdn Config constructor.
  const CdnConfigBase._() : super._();
}

/// Cdn Config.
///
/// ID: `5725e40a`.
class CdnConfig extends CdnConfigBase {
  /// Cdn Config constructor.
  const CdnConfig({
    required this.publicKeys,
  }) : super._();

  /// Deserialize.
  factory CdnConfig.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Public Keys.
  final List<CdnPublicKeyBase> publicKeys;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Lang Pack String.
abstract class LangPackStringBase extends TlConstructor {
  /// Predicate Lang Pack String constructor.
  const LangPackStringBase._() : super._();
}

/// Lang Pack String.
///
/// ID: `cad181f6`.
class LangPackString extends LangPackStringBase {
  /// Lang Pack String constructor.
  const LangPackString({
    required this.key,
    required this.value,
  }) : super._();

  /// Deserialize.
  factory LangPackString.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Key.
  final String key;

  /// Value.
  final String value;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Lang Pack String Pluralized.
///
/// ID: `6c47ac9f`.
class LangPackStringPluralized extends LangPackStringBase {
  /// Lang Pack String Pluralized constructor.
  const LangPackStringPluralized({
    required this.flags,
    required this.key,
    required this.zeroValue,
    required this.oneValue,
    required this.twoValue,
    required this.fewValue,
    required this.manyValue,
    required this.otherValue,
  }) : super._();

  /// Deserialize.
  factory LangPackStringPluralized.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Key.
  final String key;

  /// Zero Value.
  final String? zeroValue;

  /// If [zeroValue] exists.
  bool get hasZeroValueField => _bit(flags, 0);

  /// One Value.
  final String? oneValue;

  /// If [oneValue] exists.
  bool get hasOneValueField => _bit(flags, 1);

  /// Two Value.
  final String? twoValue;

  /// If [twoValue] exists.
  bool get hasTwoValueField => _bit(flags, 2);

  /// Few Value.
  final String? fewValue;

  /// If [fewValue] exists.
  bool get hasFewValueField => _bit(flags, 3);

  /// Many Value.
  final String? manyValue;

  /// If [manyValue] exists.
  bool get hasManyValueField => _bit(flags, 4);

  /// Other Value.
  final String otherValue;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Lang Pack String Deleted.
///
/// ID: `2979eeb2`.
class LangPackStringDeleted extends LangPackStringBase {
  /// Lang Pack String Deleted constructor.
  const LangPackStringDeleted({
    required this.key,
  }) : super._();

  /// Deserialize.
  factory LangPackStringDeleted.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Key.
  final String key;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Lang Pack Difference.
abstract class LangPackDifferenceBase extends TlConstructor {
  /// Predicate Lang Pack Difference constructor.
  const LangPackDifferenceBase._() : super._();
}

/// Lang Pack Difference.
///
/// ID: `f385c1f6`.
class LangPackDifference extends LangPackDifferenceBase {
  /// Lang Pack Difference constructor.
  const LangPackDifference({
    required this.langCode,
    required this.fromVersion,
    required this.version,
    required this.strings,
  }) : super._();

  /// Deserialize.
  factory LangPackDifference.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Lang Code.
  final String langCode;

  /// From Version.
  final int fromVersion;

  /// Version.
  final int version;

  /// Strings.
  final List<LangPackStringBase> strings;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Lang Pack Language.
abstract class LangPackLanguageBase extends TlConstructor {
  /// Predicate Lang Pack Language constructor.
  const LangPackLanguageBase._() : super._();
}

/// Lang Pack Language.
///
/// ID: `eeca5ce3`.
class LangPackLanguage extends LangPackLanguageBase {
  /// Lang Pack Language constructor.
  const LangPackLanguage({
    required this.flags,
    required this.name,
    required this.nativeName,
    required this.langCode,
    required this.baseLangCode,
    required this.pluralCode,
    required this.stringsCount,
    required this.translatedCount,
    required this.translationsUrl,
  }) : super._();

  /// Deserialize.
  factory LangPackLanguage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// official: bit
  bool get official => _bit(flags, 0);

  /// rtl: bit
  bool get rtl => _bit(flags, 2);

  /// beta: bit
  bool get beta => _bit(flags, 3);

  /// Name.
  final String name;

  /// Native Name.
  final String nativeName;

  /// Lang Code.
  final String langCode;

  /// Base Lang Code.
  final String? baseLangCode;

  /// If [baseLangCode] exists.
  bool get hasBaseLangCodeField => _bit(flags, 1);

  /// Plural Code.
  final String pluralCode;

  /// Strings Count.
  final int stringsCount;

  /// Translated Count.
  final int translatedCount;

  /// Translations Url.
  final String translationsUrl;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Channel Admin Log Event Action.
abstract class ChannelAdminLogEventActionBase extends TlConstructor {
  /// Predicate Channel Admin Log Event Action constructor.
  const ChannelAdminLogEventActionBase._() : super._();
}

/// Channel Admin Log Event Action Change Title.
///
/// ID: `e6dfb825`.
class ChannelAdminLogEventActionChangeTitle
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Change Title constructor.
  const ChannelAdminLogEventActionChangeTitle({
    required this.prevValue,
    required this.newValue,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionChangeTitle.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Prev Value.
  final String prevValue;

  /// New Value.
  final String newValue;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Change About.
///
/// ID: `55188a2e`.
class ChannelAdminLogEventActionChangeAbout
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Change About constructor.
  const ChannelAdminLogEventActionChangeAbout({
    required this.prevValue,
    required this.newValue,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionChangeAbout.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Prev Value.
  final String prevValue;

  /// New Value.
  final String newValue;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Change Username.
///
/// ID: `6a4afc38`.
class ChannelAdminLogEventActionChangeUsername
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Change Username constructor.
  const ChannelAdminLogEventActionChangeUsername({
    required this.prevValue,
    required this.newValue,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionChangeUsername.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Prev Value.
  final String prevValue;

  /// New Value.
  final String newValue;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Change Photo.
///
/// ID: `434bd2af`.
class ChannelAdminLogEventActionChangePhoto
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Change Photo constructor.
  const ChannelAdminLogEventActionChangePhoto({
    required this.prevPhoto,
    required this.newPhoto,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionChangePhoto.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Prev Photo.
  final PhotoBase prevPhoto;

  /// New Photo.
  final PhotoBase newPhoto;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Toggle Invites.
///
/// ID: `1b7907ae`.
class ChannelAdminLogEventActionToggleInvites
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Toggle Invites constructor.
  const ChannelAdminLogEventActionToggleInvites({
    required this.newValue,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionToggleInvites.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// New Value.
  final bool newValue;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Toggle Signatures.
///
/// ID: `26ae0971`.
class ChannelAdminLogEventActionToggleSignatures
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Toggle Signatures constructor.
  const ChannelAdminLogEventActionToggleSignatures({
    required this.newValue,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionToggleSignatures.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// New Value.
  final bool newValue;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Update Pinned.
///
/// ID: `e9e82c18`.
class ChannelAdminLogEventActionUpdatePinned
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Update Pinned constructor.
  const ChannelAdminLogEventActionUpdatePinned({
    required this.message,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionUpdatePinned.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Message.
  final MessageBase message;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Edit Message.
///
/// ID: `709b2405`.
class ChannelAdminLogEventActionEditMessage
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Edit Message constructor.
  const ChannelAdminLogEventActionEditMessage({
    required this.prevMessage,
    required this.newMessage,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionEditMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Prev Message.
  final MessageBase prevMessage;

  /// New Message.
  final MessageBase newMessage;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Delete Message.
///
/// ID: `42e047bb`.
class ChannelAdminLogEventActionDeleteMessage
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Delete Message constructor.
  const ChannelAdminLogEventActionDeleteMessage({
    required this.message,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionDeleteMessage.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Message.
  final MessageBase message;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Participant Join.
///
/// ID: `183040d3`.
class ChannelAdminLogEventActionParticipantJoin
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Participant Join constructor.
  const ChannelAdminLogEventActionParticipantJoin() : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionParticipantJoin.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Participant Leave.
///
/// ID: `f89777f2`.
class ChannelAdminLogEventActionParticipantLeave
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Participant Leave constructor.
  const ChannelAdminLogEventActionParticipantLeave() : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionParticipantLeave.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Participant Invite.
///
/// ID: `e31c34d8`.
class ChannelAdminLogEventActionParticipantInvite
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Participant Invite constructor.
  const ChannelAdminLogEventActionParticipantInvite({
    required this.participant,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionParticipantInvite.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Participant.
  final ChannelParticipantBase participant;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Participant Toggle Ban.
///
/// ID: `e6d83d7e`.
class ChannelAdminLogEventActionParticipantToggleBan
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Participant Toggle Ban constructor.
  const ChannelAdminLogEventActionParticipantToggleBan({
    required this.prevParticipant,
    required this.newParticipant,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionParticipantToggleBan.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Prev Participant.
  final ChannelParticipantBase prevParticipant;

  /// New Participant.
  final ChannelParticipantBase newParticipant;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Participant Toggle Admin.
///
/// ID: `d5676710`.
class ChannelAdminLogEventActionParticipantToggleAdmin
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Participant Toggle Admin constructor.
  const ChannelAdminLogEventActionParticipantToggleAdmin({
    required this.prevParticipant,
    required this.newParticipant,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionParticipantToggleAdmin.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Prev Participant.
  final ChannelParticipantBase prevParticipant;

  /// New Participant.
  final ChannelParticipantBase newParticipant;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Change Sticker Set.
///
/// ID: `b1c3caa7`.
class ChannelAdminLogEventActionChangeStickerSet
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Change Sticker Set constructor.
  const ChannelAdminLogEventActionChangeStickerSet({
    required this.prevStickerset,
    required this.newStickerset,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionChangeStickerSet.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Prev Stickerset.
  final InputStickerSetBase prevStickerset;

  /// New Stickerset.
  final InputStickerSetBase newStickerset;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Toggle Pre History Hidden.
///
/// ID: `5f5c95f1`.
class ChannelAdminLogEventActionTogglePreHistoryHidden
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Toggle Pre History Hidden constructor.
  const ChannelAdminLogEventActionTogglePreHistoryHidden({
    required this.newValue,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionTogglePreHistoryHidden.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// New Value.
  final bool newValue;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Default Banned Rights.
///
/// ID: `2df5fc0a`.
class ChannelAdminLogEventActionDefaultBannedRights
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Default Banned Rights constructor.
  const ChannelAdminLogEventActionDefaultBannedRights({
    required this.prevBannedRights,
    required this.newBannedRights,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionDefaultBannedRights.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Prev Banned Rights.
  final ChatBannedRightsBase prevBannedRights;

  /// New Banned Rights.
  final ChatBannedRightsBase newBannedRights;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Stop Poll.
///
/// ID: `8f079643`.
class ChannelAdminLogEventActionStopPoll
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Stop Poll constructor.
  const ChannelAdminLogEventActionStopPoll({
    required this.message,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionStopPoll.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Message.
  final MessageBase message;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Change Linked Chat.
///
/// ID: `050c7ac8`.
class ChannelAdminLogEventActionChangeLinkedChat
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Change Linked Chat constructor.
  const ChannelAdminLogEventActionChangeLinkedChat({
    required this.prevValue,
    required this.newValue,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionChangeLinkedChat.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Prev Value.
  final int prevValue;

  /// New Value.
  final int newValue;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Change Location.
///
/// ID: `0e6b76ae`.
class ChannelAdminLogEventActionChangeLocation
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Change Location constructor.
  const ChannelAdminLogEventActionChangeLocation({
    required this.prevValue,
    required this.newValue,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionChangeLocation.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Prev Value.
  final ChannelLocationBase prevValue;

  /// New Value.
  final ChannelLocationBase newValue;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Toggle Slow Mode.
///
/// ID: `53909779`.
class ChannelAdminLogEventActionToggleSlowMode
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Toggle Slow Mode constructor.
  const ChannelAdminLogEventActionToggleSlowMode({
    required this.prevValue,
    required this.newValue,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionToggleSlowMode.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Prev Value.
  final int prevValue;

  /// New Value.
  final int newValue;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Start Group Call.
///
/// ID: `23209745`.
class ChannelAdminLogEventActionStartGroupCall
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Start Group Call constructor.
  const ChannelAdminLogEventActionStartGroupCall({
    required this.call,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionStartGroupCall.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Call.
  final InputGroupCallBase call;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Discard Group Call.
///
/// ID: `db9f9140`.
class ChannelAdminLogEventActionDiscardGroupCall
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Discard Group Call constructor.
  const ChannelAdminLogEventActionDiscardGroupCall({
    required this.call,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionDiscardGroupCall.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Call.
  final InputGroupCallBase call;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Participant Mute.
///
/// ID: `f92424d2`.
class ChannelAdminLogEventActionParticipantMute
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Participant Mute constructor.
  const ChannelAdminLogEventActionParticipantMute({
    required this.participant,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionParticipantMute.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Participant.
  final GroupCallParticipantBase participant;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Participant Unmute.
///
/// ID: `e64429c0`.
class ChannelAdminLogEventActionParticipantUnmute
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Participant Unmute constructor.
  const ChannelAdminLogEventActionParticipantUnmute({
    required this.participant,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionParticipantUnmute.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Participant.
  final GroupCallParticipantBase participant;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Toggle Group Call Setting.
///
/// ID: `56d6a247`.
class ChannelAdminLogEventActionToggleGroupCallSetting
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Toggle Group Call Setting constructor.
  const ChannelAdminLogEventActionToggleGroupCallSetting({
    required this.joinMuted,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionToggleGroupCallSetting.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Join Muted.
  final bool joinMuted;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Participant Join By Invite.
///
/// ID: `fe9fc158`.
class ChannelAdminLogEventActionParticipantJoinByInvite
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Participant Join By Invite constructor.
  const ChannelAdminLogEventActionParticipantJoinByInvite({
    required this.flags,
    required this.invite,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionParticipantJoinByInvite.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// via_chatlist: bit
  bool get viaChatlist => _bit(flags, 0);

  /// Invite.
  final ExportedChatInviteBase invite;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Exported Invite Delete.
///
/// ID: `5a50fca4`.
class ChannelAdminLogEventActionExportedInviteDelete
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Exported Invite Delete constructor.
  const ChannelAdminLogEventActionExportedInviteDelete({
    required this.invite,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionExportedInviteDelete.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Invite.
  final ExportedChatInviteBase invite;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Exported Invite Revoke.
///
/// ID: `410a134e`.
class ChannelAdminLogEventActionExportedInviteRevoke
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Exported Invite Revoke constructor.
  const ChannelAdminLogEventActionExportedInviteRevoke({
    required this.invite,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionExportedInviteRevoke.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Invite.
  final ExportedChatInviteBase invite;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Exported Invite Edit.
///
/// ID: `e90ebb59`.
class ChannelAdminLogEventActionExportedInviteEdit
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Exported Invite Edit constructor.
  const ChannelAdminLogEventActionExportedInviteEdit({
    required this.prevInvite,
    required this.newInvite,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionExportedInviteEdit.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Prev Invite.
  final ExportedChatInviteBase prevInvite;

  /// New Invite.
  final ExportedChatInviteBase newInvite;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Participant Volume.
///
/// ID: `3e7f6847`.
class ChannelAdminLogEventActionParticipantVolume
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Participant Volume constructor.
  const ChannelAdminLogEventActionParticipantVolume({
    required this.participant,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionParticipantVolume.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Participant.
  final GroupCallParticipantBase participant;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Change History T T L.
///
/// ID: `6e941a38`.
class ChannelAdminLogEventActionChangeHistoryTTL
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Change History T T L constructor.
  const ChannelAdminLogEventActionChangeHistoryTTL({
    required this.prevValue,
    required this.newValue,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionChangeHistoryTTL.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Prev Value.
  final int prevValue;

  /// New Value.
  final int newValue;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Participant Join By Request.
///
/// ID: `afb6144a`.
class ChannelAdminLogEventActionParticipantJoinByRequest
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Participant Join By Request constructor.
  const ChannelAdminLogEventActionParticipantJoinByRequest({
    required this.invite,
    required this.approvedBy,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionParticipantJoinByRequest.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Invite.
  final ExportedChatInviteBase invite;

  /// Approved By.
  final int approvedBy;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Toggle No Forwards.
///
/// ID: `cb2ac766`.
class ChannelAdminLogEventActionToggleNoForwards
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Toggle No Forwards constructor.
  const ChannelAdminLogEventActionToggleNoForwards({
    required this.newValue,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionToggleNoForwards.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// New Value.
  final bool newValue;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Send Message.
///
/// ID: `278f2868`.
class ChannelAdminLogEventActionSendMessage
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Send Message constructor.
  const ChannelAdminLogEventActionSendMessage({
    required this.message,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionSendMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Message.
  final MessageBase message;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Change Available Reactions.
///
/// ID: `be4e0ef8`.
class ChannelAdminLogEventActionChangeAvailableReactions
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Change Available Reactions constructor.
  const ChannelAdminLogEventActionChangeAvailableReactions({
    required this.prevValue,
    required this.newValue,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionChangeAvailableReactions.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Prev Value.
  final ChatReactionsBase prevValue;

  /// New Value.
  final ChatReactionsBase newValue;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Change Usernames.
///
/// ID: `f04fb3a9`.
class ChannelAdminLogEventActionChangeUsernames
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Change Usernames constructor.
  const ChannelAdminLogEventActionChangeUsernames({
    required this.prevValue,
    required this.newValue,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionChangeUsernames.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Prev Value.
  final List<String> prevValue;

  /// New Value.
  final List<String> newValue;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Toggle Forum.
///
/// ID: `02cc6383`.
class ChannelAdminLogEventActionToggleForum
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Toggle Forum constructor.
  const ChannelAdminLogEventActionToggleForum({
    required this.newValue,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionToggleForum.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// New Value.
  final bool newValue;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Create Topic.
///
/// ID: `58707d28`.
class ChannelAdminLogEventActionCreateTopic
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Create Topic constructor.
  const ChannelAdminLogEventActionCreateTopic({
    required this.topic,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionCreateTopic.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Topic.
  final ForumTopicBase topic;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Edit Topic.
///
/// ID: `f06fe208`.
class ChannelAdminLogEventActionEditTopic
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Edit Topic constructor.
  const ChannelAdminLogEventActionEditTopic({
    required this.prevTopic,
    required this.newTopic,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionEditTopic.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Prev Topic.
  final ForumTopicBase prevTopic;

  /// New Topic.
  final ForumTopicBase newTopic;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Delete Topic.
///
/// ID: `ae168909`.
class ChannelAdminLogEventActionDeleteTopic
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Delete Topic constructor.
  const ChannelAdminLogEventActionDeleteTopic({
    required this.topic,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionDeleteTopic.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Topic.
  final ForumTopicBase topic;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Pin Topic.
///
/// ID: `5d8d353b`.
class ChannelAdminLogEventActionPinTopic
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Pin Topic constructor.
  const ChannelAdminLogEventActionPinTopic({
    required this.flags,
    required this.prevTopic,
    required this.newTopic,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionPinTopic.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Prev Topic.
  final ForumTopicBase? prevTopic;

  /// If [prevTopic] exists.
  bool get hasPrevTopicField => _bit(flags, 0);

  /// New Topic.
  final ForumTopicBase? newTopic;

  /// If [newTopic] exists.
  bool get hasNewTopicField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Toggle Anti Spam.
///
/// ID: `64f36dfc`.
class ChannelAdminLogEventActionToggleAntiSpam
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Toggle Anti Spam constructor.
  const ChannelAdminLogEventActionToggleAntiSpam({
    required this.newValue,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionToggleAntiSpam.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// New Value.
  final bool newValue;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Change Peer Color.
///
/// ID: `5796e780`.
class ChannelAdminLogEventActionChangePeerColor
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Change Peer Color constructor.
  const ChannelAdminLogEventActionChangePeerColor({
    required this.prevValue,
    required this.newValue,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionChangePeerColor.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Prev Value.
  final PeerColorBase prevValue;

  /// New Value.
  final PeerColorBase newValue;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Change Profile Peer Color.
///
/// ID: `5e477b25`.
class ChannelAdminLogEventActionChangeProfilePeerColor
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Change Profile Peer Color constructor.
  const ChannelAdminLogEventActionChangeProfilePeerColor({
    required this.prevValue,
    required this.newValue,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionChangeProfilePeerColor.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Prev Value.
  final PeerColorBase prevValue;

  /// New Value.
  final PeerColorBase newValue;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Change Wallpaper.
///
/// ID: `31bb5d52`.
class ChannelAdminLogEventActionChangeWallpaper
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Change Wallpaper constructor.
  const ChannelAdminLogEventActionChangeWallpaper({
    required this.prevValue,
    required this.newValue,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionChangeWallpaper.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Prev Value.
  final WallPaperBase prevValue;

  /// New Value.
  final WallPaperBase newValue;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Admin Log Event Action Change Emoji Status.
///
/// ID: `3ea9feb1`.
class ChannelAdminLogEventActionChangeEmojiStatus
    extends ChannelAdminLogEventActionBase {
  /// Channel Admin Log Event Action Change Emoji Status constructor.
  const ChannelAdminLogEventActionChangeEmojiStatus({
    required this.prevValue,
    required this.newValue,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventActionChangeEmojiStatus.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Prev Value.
  final EmojiStatusBase prevValue;

  /// New Value.
  final EmojiStatusBase newValue;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Channel Admin Log Event.
abstract class ChannelAdminLogEventBase extends TlConstructor {
  /// Predicate Channel Admin Log Event constructor.
  const ChannelAdminLogEventBase._() : super._();
}

/// Channel Admin Log Event.
///
/// ID: `1fad68cd`.
class ChannelAdminLogEvent extends ChannelAdminLogEventBase {
  /// Channel Admin Log Event constructor.
  const ChannelAdminLogEvent({
    required this.id,
    required this.date,
    required this.userId,
    required this.action,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEvent.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Date.
  final int date;

  /// User Id.
  final int userId;

  /// Action.
  final ChannelAdminLogEventActionBase action;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Channels Admin Log Results.
abstract class ChannelsAdminLogResultsBase extends TlConstructor {
  /// Predicate Channels Admin Log Results constructor.
  const ChannelsAdminLogResultsBase._() : super._();
}

/// Channels Admin Log Results.
///
/// ID: `ed8af74d`.
class ChannelsAdminLogResults extends ChannelsAdminLogResultsBase {
  /// Channels Admin Log Results constructor.
  const ChannelsAdminLogResults({
    required this.events,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory ChannelsAdminLogResults.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Events.
  final List<ChannelAdminLogEventBase> events;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Channel Admin Log Events Filter.
abstract class ChannelAdminLogEventsFilterBase extends TlConstructor {
  /// Predicate Channel Admin Log Events Filter constructor.
  const ChannelAdminLogEventsFilterBase._() : super._();
}

/// Channel Admin Log Events Filter.
///
/// ID: `ea107ae4`.
class ChannelAdminLogEventsFilter extends ChannelAdminLogEventsFilterBase {
  /// Channel Admin Log Events Filter constructor.
  const ChannelAdminLogEventsFilter({
    required this.flags,
  }) : super._();

  /// Deserialize.
  factory ChannelAdminLogEventsFilter.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// join: bit
  bool get join => _bit(flags, 0);

  /// leave: bit
  bool get leave => _bit(flags, 1);

  /// invite: bit
  bool get invite => _bit(flags, 2);

  /// ban: bit
  bool get ban => _bit(flags, 3);

  /// unban: bit
  bool get unban => _bit(flags, 4);

  /// kick: bit
  bool get kick => _bit(flags, 5);

  /// unkick: bit
  bool get unkick => _bit(flags, 6);

  /// promote: bit
  bool get promote => _bit(flags, 7);

  /// demote: bit
  bool get demote => _bit(flags, 8);

  /// info: bit
  bool get info => _bit(flags, 9);

  /// settings: bit
  bool get settings => _bit(flags, 10);

  /// pinned: bit
  bool get pinned => _bit(flags, 11);

  /// edit: bit
  bool get edit => _bit(flags, 12);

  /// delete: bit
  bool get delete => _bit(flags, 13);

  /// group_call: bit
  bool get groupCall => _bit(flags, 14);

  /// invites: bit
  bool get invites => _bit(flags, 15);

  /// send: bit
  bool get send => _bit(flags, 16);

  /// forums: bit
  bool get forums => _bit(flags, 17);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Popular Contact.
abstract class PopularContactBase extends TlConstructor {
  /// Predicate Popular Contact constructor.
  const PopularContactBase._() : super._();
}

/// Popular Contact.
///
/// ID: `5ce14175`.
class PopularContact extends PopularContactBase {
  /// Popular Contact constructor.
  const PopularContact({
    required this.clientId,
    required this.importers,
  }) : super._();

  /// Deserialize.
  factory PopularContact.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Client Id.
  final int clientId;

  /// Importers.
  final int importers;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Faved Stickers.
abstract class MessagesFavedStickersBase extends TlConstructor {
  /// Predicate Messages Faved Stickers constructor.
  const MessagesFavedStickersBase._() : super._();
}

/// Messages Faved Stickers Not Modified.
///
/// ID: `9e8fa6d3`.
class MessagesFavedStickersNotModified extends MessagesFavedStickersBase {
  /// Messages Faved Stickers Not Modified constructor.
  const MessagesFavedStickersNotModified() : super._();

  /// Deserialize.
  factory MessagesFavedStickersNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Faved Stickers.
///
/// ID: `2cb51097`.
class MessagesFavedStickers extends MessagesFavedStickersBase {
  /// Messages Faved Stickers constructor.
  const MessagesFavedStickers({
    required this.hash,
    required this.packs,
    required this.stickers,
  }) : super._();

  /// Deserialize.
  factory MessagesFavedStickers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Packs.
  final List<StickerPackBase> packs;

  /// Stickers.
  final List<DocumentBase> stickers;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Recent Me Url.
abstract class RecentMeUrlBase extends TlConstructor {
  /// Predicate Recent Me Url constructor.
  const RecentMeUrlBase._() : super._();
}

/// Recent Me Url Unknown.
///
/// ID: `46e1d13d`.
class RecentMeUrlUnknown extends RecentMeUrlBase {
  /// Recent Me Url Unknown constructor.
  const RecentMeUrlUnknown({
    required this.url,
  }) : super._();

  /// Deserialize.
  factory RecentMeUrlUnknown.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Url.
  final String url;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Recent Me Url User.
///
/// ID: `b92c09e2`.
class RecentMeUrlUser extends RecentMeUrlBase {
  /// Recent Me Url User constructor.
  const RecentMeUrlUser({
    required this.url,
    required this.userId,
  }) : super._();

  /// Deserialize.
  factory RecentMeUrlUser.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Url.
  final String url;

  /// User Id.
  final int userId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Recent Me Url Chat.
///
/// ID: `b2da71d2`.
class RecentMeUrlChat extends RecentMeUrlBase {
  /// Recent Me Url Chat constructor.
  const RecentMeUrlChat({
    required this.url,
    required this.chatId,
  }) : super._();

  /// Deserialize.
  factory RecentMeUrlChat.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Url.
  final String url;

  /// Chat Id.
  final int chatId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Recent Me Url Chat Invite.
///
/// ID: `eb49081d`.
class RecentMeUrlChatInvite extends RecentMeUrlBase {
  /// Recent Me Url Chat Invite constructor.
  const RecentMeUrlChatInvite({
    required this.url,
    required this.chatInvite,
  }) : super._();

  /// Deserialize.
  factory RecentMeUrlChatInvite.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Url.
  final String url;

  /// Chat Invite.
  final ChatInviteBase chatInvite;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Recent Me Url Sticker Set.
///
/// ID: `bc0a57dc`.
class RecentMeUrlStickerSet extends RecentMeUrlBase {
  /// Recent Me Url Sticker Set constructor.
  const RecentMeUrlStickerSet({
    required this.url,
    required this.set,
  }) : super._();

  /// Deserialize.
  factory RecentMeUrlStickerSet.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Url.
  final String url;

  /// Set.
  final StickerSetCoveredBase set;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Help Recent Me Urls.
abstract class HelpRecentMeUrlsBase extends TlConstructor {
  /// Predicate Help Recent Me Urls constructor.
  const HelpRecentMeUrlsBase._() : super._();
}

/// Help Recent Me Urls.
///
/// ID: `0e0310d7`.
class HelpRecentMeUrls extends HelpRecentMeUrlsBase {
  /// Help Recent Me Urls constructor.
  const HelpRecentMeUrls({
    required this.urls,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory HelpRecentMeUrls.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Urls.
  final List<RecentMeUrlBase> urls;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Single Media.
abstract class InputSingleMediaBase extends TlConstructor {
  /// Predicate Input Single Media constructor.
  const InputSingleMediaBase._() : super._();
}

/// Input Single Media.
///
/// ID: `1cc6e91f`.
class InputSingleMedia extends InputSingleMediaBase {
  /// Input Single Media constructor.
  const InputSingleMedia({
    required this.flags,
    required this.media,
    required this.randomId,
    required this.message,
    required this.entities,
  }) : super._();

  /// Deserialize.
  factory InputSingleMedia.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Media.
  final InputMediaBase media;

  /// Random Id.
  final int randomId;

  /// Message.
  final String message;

  /// Entities.
  final List<MessageEntityBase>? entities;

  /// If [entities] exists.
  bool get hasEntitiesField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Web Authorization.
abstract class WebAuthorizationBase extends TlConstructor {
  /// Predicate Web Authorization constructor.
  const WebAuthorizationBase._() : super._();
}

/// Web Authorization.
///
/// ID: `a6f8f452`.
class WebAuthorization extends WebAuthorizationBase {
  /// Web Authorization constructor.
  const WebAuthorization({
    required this.hash,
    required this.botId,
    required this.domain,
    required this.browser,
    required this.platform,
    required this.dateCreated,
    required this.dateActive,
    required this.ip,
    required this.region,
  }) : super._();

  /// Deserialize.
  factory WebAuthorization.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Bot Id.
  final int botId;

  /// Domain.
  final String domain;

  /// Browser.
  final String browser;

  /// Platform.
  final String platform;

  /// Date Created.
  final int dateCreated;

  /// Date Active.
  final int dateActive;

  /// Ip.
  final String ip;

  /// Region.
  final String region;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Account Web Authorizations.
abstract class AccountWebAuthorizationsBase extends TlConstructor {
  /// Predicate Account Web Authorizations constructor.
  const AccountWebAuthorizationsBase._() : super._();
}

/// Account Web Authorizations.
///
/// ID: `ed56c9fc`.
class AccountWebAuthorizations extends AccountWebAuthorizationsBase {
  /// Account Web Authorizations constructor.
  const AccountWebAuthorizations({
    required this.authorizations,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory AccountWebAuthorizations.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Authorizations.
  final List<WebAuthorizationBase> authorizations;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Message.
abstract class InputMessageBase extends TlConstructor {
  /// Predicate Input Message constructor.
  const InputMessageBase._() : super._();
}

/// Input Message I D.
///
/// ID: `a676a322`.
class InputMessageID extends InputMessageBase {
  /// Input Message I D constructor.
  const InputMessageID({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory InputMessageID.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Message Reply To.
///
/// ID: `bad88395`.
class InputMessageReplyTo extends InputMessageBase {
  /// Input Message Reply To constructor.
  const InputMessageReplyTo({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory InputMessageReplyTo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Message Pinned.
///
/// ID: `86872538`.
class InputMessagePinned extends InputMessageBase {
  /// Input Message Pinned constructor.
  const InputMessagePinned() : super._();

  /// Deserialize.
  factory InputMessagePinned.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Message Callback Query.
///
/// ID: `acfa1a7e`.
class InputMessageCallbackQuery extends InputMessageBase {
  /// Input Message Callback Query constructor.
  const InputMessageCallbackQuery({
    required this.id,
    required this.queryId,
  }) : super._();

  /// Deserialize.
  factory InputMessageCallbackQuery.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Query Id.
  final int queryId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Dialog Peer.
abstract class InputDialogPeerBase extends TlConstructor {
  /// Predicate Input Dialog Peer constructor.
  const InputDialogPeerBase._() : super._();
}

/// Input Dialog Peer.
///
/// ID: `fcaafeb7`.
class InputDialogPeer extends InputDialogPeerBase {
  /// Input Dialog Peer constructor.
  const InputDialogPeer({
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory InputDialogPeer.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Dialog Peer Folder.
///
/// ID: `64600527`.
class InputDialogPeerFolder extends InputDialogPeerBase {
  /// Input Dialog Peer Folder constructor.
  const InputDialogPeerFolder({
    required this.folderId,
  }) : super._();

  /// Deserialize.
  factory InputDialogPeerFolder.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Folder Id.
  final int folderId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Dialog Peer.
abstract class DialogPeerBase extends TlConstructor {
  /// Predicate Dialog Peer constructor.
  const DialogPeerBase._() : super._();
}

/// Dialog Peer.
///
/// ID: `e56dbf05`.
class DialogPeer extends DialogPeerBase {
  /// Dialog Peer constructor.
  const DialogPeer({
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory DialogPeer.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Dialog Peer Folder.
///
/// ID: `514519e2`.
class DialogPeerFolder extends DialogPeerBase {
  /// Dialog Peer Folder constructor.
  const DialogPeerFolder({
    required this.folderId,
  }) : super._();

  /// Deserialize.
  factory DialogPeerFolder.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Folder Id.
  final int folderId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Found Sticker Sets.
abstract class MessagesFoundStickerSetsBase extends TlConstructor {
  /// Predicate Messages Found Sticker Sets constructor.
  const MessagesFoundStickerSetsBase._() : super._();
}

/// Messages Found Sticker Sets Not Modified.
///
/// ID: `0d54b65d`.
class MessagesFoundStickerSetsNotModified extends MessagesFoundStickerSetsBase {
  /// Messages Found Sticker Sets Not Modified constructor.
  const MessagesFoundStickerSetsNotModified() : super._();

  /// Deserialize.
  factory MessagesFoundStickerSetsNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Found Sticker Sets.
///
/// ID: `8af09dd2`.
class MessagesFoundStickerSets extends MessagesFoundStickerSetsBase {
  /// Messages Found Sticker Sets constructor.
  const MessagesFoundStickerSets({
    required this.hash,
    required this.sets,
  }) : super._();

  /// Deserialize.
  factory MessagesFoundStickerSets.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Sets.
  final List<StickerSetCoveredBase> sets;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate File Hash.
abstract class FileHashBase extends TlConstructor {
  /// Predicate File Hash constructor.
  const FileHashBase._() : super._();
}

/// File Hash.
///
/// ID: `f39b035c`.
class FileHash extends FileHashBase {
  /// File Hash constructor.
  const FileHash({
    required this.offset,
    required this.limit,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory FileHash.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Offset.
  final int offset;

  /// Limit.
  final int limit;

  /// Hash.
  final Uint8List hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Client Proxy.
abstract class InputClientProxyBase extends TlConstructor {
  /// Predicate Input Client Proxy constructor.
  const InputClientProxyBase._() : super._();
}

/// Input Client Proxy.
///
/// ID: `75588b3f`.
class InputClientProxy extends InputClientProxyBase {
  /// Input Client Proxy constructor.
  const InputClientProxy({
    required this.address,
    required this.port,
  }) : super._();

  /// Deserialize.
  factory InputClientProxy.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Address.
  final String address;

  /// Port.
  final int port;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Help Terms Of Service Update.
abstract class HelpTermsOfServiceUpdateBase extends TlConstructor {
  /// Predicate Help Terms Of Service Update constructor.
  const HelpTermsOfServiceUpdateBase._() : super._();
}

/// Help Terms Of Service Update Empty.
///
/// ID: `e3309f7f`.
class HelpTermsOfServiceUpdateEmpty extends HelpTermsOfServiceUpdateBase {
  /// Help Terms Of Service Update Empty constructor.
  const HelpTermsOfServiceUpdateEmpty({
    required this.expires,
  }) : super._();

  /// Deserialize.
  factory HelpTermsOfServiceUpdateEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Expires.
  final int expires;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Terms Of Service Update.
///
/// ID: `28ecf961`.
class HelpTermsOfServiceUpdate extends HelpTermsOfServiceUpdateBase {
  /// Help Terms Of Service Update constructor.
  const HelpTermsOfServiceUpdate({
    required this.expires,
    required this.termsOfService,
  }) : super._();

  /// Deserialize.
  factory HelpTermsOfServiceUpdate.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Expires.
  final int expires;

  /// Terms Of Service.
  final HelpTermsOfServiceBase termsOfService;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Secure File.
abstract class InputSecureFileBase extends TlConstructor {
  /// Predicate Input Secure File constructor.
  const InputSecureFileBase._() : super._();
}

/// Input Secure File Uploaded.
///
/// ID: `3334b0f0`.
class InputSecureFileUploaded extends InputSecureFileBase {
  /// Input Secure File Uploaded constructor.
  const InputSecureFileUploaded({
    required this.id,
    required this.parts,
    required this.md5Checksum,
    required this.fileHash,
    required this.secret,
  }) : super._();

  /// Deserialize.
  factory InputSecureFileUploaded.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Parts.
  final int parts;

  /// Md5 Checksum.
  final String md5Checksum;

  /// File Hash.
  final Uint8List fileHash;

  /// Secret.
  final Uint8List secret;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Secure File.
///
/// ID: `5367e5be`.
class InputSecureFile extends InputSecureFileBase {
  /// Input Secure File constructor.
  const InputSecureFile({
    required this.id,
    required this.accessHash,
  }) : super._();

  /// Deserialize.
  factory InputSecureFile.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Secure File.
abstract class SecureFileBase extends TlConstructor {
  /// Predicate Secure File constructor.
  const SecureFileBase._() : super._();
}

/// Secure File Empty.
///
/// ID: `64199744`.
class SecureFileEmpty extends SecureFileBase {
  /// Secure File Empty constructor.
  const SecureFileEmpty() : super._();

  /// Deserialize.
  factory SecureFileEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Secure File.
///
/// ID: `7d09c27e`.
class SecureFile extends SecureFileBase {
  /// Secure File constructor.
  const SecureFile({
    required this.id,
    required this.accessHash,
    required this.size,
    required this.dcId,
    required this.date,
    required this.fileHash,
    required this.secret,
  }) : super._();

  /// Deserialize.
  factory SecureFile.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Size.
  final int size;

  /// Dc Id.
  final int dcId;

  /// Date.
  final int date;

  /// File Hash.
  final Uint8List fileHash;

  /// Secret.
  final Uint8List secret;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Secure Data.
abstract class SecureDataBase extends TlConstructor {
  /// Predicate Secure Data constructor.
  const SecureDataBase._() : super._();
}

/// Secure Data.
///
/// ID: `8aeabec3`.
class SecureData extends SecureDataBase {
  /// Secure Data constructor.
  const SecureData({
    required this.data,
    required this.dataHash,
    required this.secret,
  }) : super._();

  /// Deserialize.
  factory SecureData.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Data.
  final Uint8List data;

  /// Data Hash.
  final Uint8List dataHash;

  /// Secret.
  final Uint8List secret;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Secure Plain Data.
abstract class SecurePlainDataBase extends TlConstructor {
  /// Predicate Secure Plain Data constructor.
  const SecurePlainDataBase._() : super._();
}

/// Secure Plain Phone.
///
/// ID: `7d6099dd`.
class SecurePlainPhone extends SecurePlainDataBase {
  /// Secure Plain Phone constructor.
  const SecurePlainPhone({
    required this.phone,
  }) : super._();

  /// Deserialize.
  factory SecurePlainPhone.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Phone.
  final String phone;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Secure Plain Email.
///
/// ID: `21ec5a5f`.
class SecurePlainEmail extends SecurePlainDataBase {
  /// Secure Plain Email constructor.
  const SecurePlainEmail({
    required this.email,
  }) : super._();

  /// Deserialize.
  factory SecurePlainEmail.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Email.
  final String email;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Secure Value Type.
abstract class SecureValueTypeBase extends TlConstructor {
  /// Predicate Secure Value Type constructor.
  const SecureValueTypeBase._() : super._();
}

/// Secure Value Type Personal Details.
///
/// ID: `9d2a81e3`.
class SecureValueTypePersonalDetails extends SecureValueTypeBase {
  /// Secure Value Type Personal Details constructor.
  const SecureValueTypePersonalDetails() : super._();

  /// Deserialize.
  factory SecureValueTypePersonalDetails.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Secure Value Type Passport.
///
/// ID: `3dac6a00`.
class SecureValueTypePassport extends SecureValueTypeBase {
  /// Secure Value Type Passport constructor.
  const SecureValueTypePassport() : super._();

  /// Deserialize.
  factory SecureValueTypePassport.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Secure Value Type Driver License.
///
/// ID: `06e425c4`.
class SecureValueTypeDriverLicense extends SecureValueTypeBase {
  /// Secure Value Type Driver License constructor.
  const SecureValueTypeDriverLicense() : super._();

  /// Deserialize.
  factory SecureValueTypeDriverLicense.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Secure Value Type Identity Card.
///
/// ID: `a0d0744b`.
class SecureValueTypeIdentityCard extends SecureValueTypeBase {
  /// Secure Value Type Identity Card constructor.
  const SecureValueTypeIdentityCard() : super._();

  /// Deserialize.
  factory SecureValueTypeIdentityCard.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Secure Value Type Internal Passport.
///
/// ID: `99a48f23`.
class SecureValueTypeInternalPassport extends SecureValueTypeBase {
  /// Secure Value Type Internal Passport constructor.
  const SecureValueTypeInternalPassport() : super._();

  /// Deserialize.
  factory SecureValueTypeInternalPassport.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Secure Value Type Address.
///
/// ID: `cbe31e26`.
class SecureValueTypeAddress extends SecureValueTypeBase {
  /// Secure Value Type Address constructor.
  const SecureValueTypeAddress() : super._();

  /// Deserialize.
  factory SecureValueTypeAddress.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Secure Value Type Utility Bill.
///
/// ID: `fc36954e`.
class SecureValueTypeUtilityBill extends SecureValueTypeBase {
  /// Secure Value Type Utility Bill constructor.
  const SecureValueTypeUtilityBill() : super._();

  /// Deserialize.
  factory SecureValueTypeUtilityBill.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Secure Value Type Bank Statement.
///
/// ID: `89137c0d`.
class SecureValueTypeBankStatement extends SecureValueTypeBase {
  /// Secure Value Type Bank Statement constructor.
  const SecureValueTypeBankStatement() : super._();

  /// Deserialize.
  factory SecureValueTypeBankStatement.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Secure Value Type Rental Agreement.
///
/// ID: `8b883488`.
class SecureValueTypeRentalAgreement extends SecureValueTypeBase {
  /// Secure Value Type Rental Agreement constructor.
  const SecureValueTypeRentalAgreement() : super._();

  /// Deserialize.
  factory SecureValueTypeRentalAgreement.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Secure Value Type Passport Registration.
///
/// ID: `99e3806a`.
class SecureValueTypePassportRegistration extends SecureValueTypeBase {
  /// Secure Value Type Passport Registration constructor.
  const SecureValueTypePassportRegistration() : super._();

  /// Deserialize.
  factory SecureValueTypePassportRegistration.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Secure Value Type Temporary Registration.
///
/// ID: `ea02ec33`.
class SecureValueTypeTemporaryRegistration extends SecureValueTypeBase {
  /// Secure Value Type Temporary Registration constructor.
  const SecureValueTypeTemporaryRegistration() : super._();

  /// Deserialize.
  factory SecureValueTypeTemporaryRegistration.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Secure Value Type Phone.
///
/// ID: `b320aadb`.
class SecureValueTypePhone extends SecureValueTypeBase {
  /// Secure Value Type Phone constructor.
  const SecureValueTypePhone() : super._();

  /// Deserialize.
  factory SecureValueTypePhone.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Secure Value Type Email.
///
/// ID: `8e3ca7ee`.
class SecureValueTypeEmail extends SecureValueTypeBase {
  /// Secure Value Type Email constructor.
  const SecureValueTypeEmail() : super._();

  /// Deserialize.
  factory SecureValueTypeEmail.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Secure Value.
abstract class SecureValueBase extends TlConstructor {
  /// Predicate Secure Value constructor.
  const SecureValueBase._() : super._();
}

/// Secure Value.
///
/// ID: `187fa0ca`.
class SecureValue extends SecureValueBase {
  /// Secure Value constructor.
  const SecureValue({
    required this.flags,
    required this.type,
    required this.data,
    required this.frontSide,
    required this.reverseSide,
    required this.selfie,
    required this.translation,
    required this.files,
    required this.plainData,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory SecureValue.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Type.
  final SecureValueTypeBase type;

  /// Data.
  final SecureDataBase? data;

  /// If [data] exists.
  bool get hasDataField => _bit(flags, 0);

  /// Front Side.
  final SecureFileBase? frontSide;

  /// If [frontSide] exists.
  bool get hasFrontSideField => _bit(flags, 1);

  /// Reverse Side.
  final SecureFileBase? reverseSide;

  /// If [reverseSide] exists.
  bool get hasReverseSideField => _bit(flags, 2);

  /// Selfie.
  final SecureFileBase? selfie;

  /// If [selfie] exists.
  bool get hasSelfieField => _bit(flags, 3);

  /// Translation.
  final List<SecureFileBase>? translation;

  /// If [translation] exists.
  bool get hasTranslationField => _bit(flags, 6);

  /// Files.
  final List<SecureFileBase>? files;

  /// If [files] exists.
  bool get hasFilesField => _bit(flags, 4);

  /// Plain Data.
  final SecurePlainDataBase? plainData;

  /// If [plainData] exists.
  bool get hasPlainDataField => _bit(flags, 5);

  /// Hash.
  final Uint8List hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Secure Value.
abstract class InputSecureValueBase extends TlConstructor {
  /// Predicate Input Secure Value constructor.
  const InputSecureValueBase._() : super._();
}

/// Input Secure Value.
///
/// ID: `db21d0a7`.
class InputSecureValue extends InputSecureValueBase {
  /// Input Secure Value constructor.
  const InputSecureValue({
    required this.flags,
    required this.type,
    required this.data,
    required this.frontSide,
    required this.reverseSide,
    required this.selfie,
    required this.translation,
    required this.files,
    required this.plainData,
  }) : super._();

  /// Deserialize.
  factory InputSecureValue.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Type.
  final SecureValueTypeBase type;

  /// Data.
  final SecureDataBase? data;

  /// If [data] exists.
  bool get hasDataField => _bit(flags, 0);

  /// Front Side.
  final InputSecureFileBase? frontSide;

  /// If [frontSide] exists.
  bool get hasFrontSideField => _bit(flags, 1);

  /// Reverse Side.
  final InputSecureFileBase? reverseSide;

  /// If [reverseSide] exists.
  bool get hasReverseSideField => _bit(flags, 2);

  /// Selfie.
  final InputSecureFileBase? selfie;

  /// If [selfie] exists.
  bool get hasSelfieField => _bit(flags, 3);

  /// Translation.
  final List<InputSecureFileBase>? translation;

  /// If [translation] exists.
  bool get hasTranslationField => _bit(flags, 6);

  /// Files.
  final List<InputSecureFileBase>? files;

  /// If [files] exists.
  bool get hasFilesField => _bit(flags, 4);

  /// Plain Data.
  final SecurePlainDataBase? plainData;

  /// If [plainData] exists.
  bool get hasPlainDataField => _bit(flags, 5);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Secure Value Hash.
abstract class SecureValueHashBase extends TlConstructor {
  /// Predicate Secure Value Hash constructor.
  const SecureValueHashBase._() : super._();
}

/// Secure Value Hash.
///
/// ID: `ed1ecdb0`.
class SecureValueHash extends SecureValueHashBase {
  /// Secure Value Hash constructor.
  const SecureValueHash({
    required this.type,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory SecureValueHash.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Type.
  final SecureValueTypeBase type;

  /// Hash.
  final Uint8List hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Secure Value Error.
abstract class SecureValueErrorBase extends TlConstructor {
  /// Predicate Secure Value Error constructor.
  const SecureValueErrorBase._() : super._();
}

/// Secure Value Error Data.
///
/// ID: `e8a40bd9`.
class SecureValueErrorData extends SecureValueErrorBase {
  /// Secure Value Error Data constructor.
  const SecureValueErrorData({
    required this.type,
    required this.dataHash,
    required this.field,
    required this.text,
  }) : super._();

  /// Deserialize.
  factory SecureValueErrorData.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Type.
  final SecureValueTypeBase type;

  /// Data Hash.
  final Uint8List dataHash;

  /// Field.
  final String field;

  /// Text.
  final String text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Secure Value Error Front Side.
///
/// ID: `00be3dfa`.
class SecureValueErrorFrontSide extends SecureValueErrorBase {
  /// Secure Value Error Front Side constructor.
  const SecureValueErrorFrontSide({
    required this.type,
    required this.fileHash,
    required this.text,
  }) : super._();

  /// Deserialize.
  factory SecureValueErrorFrontSide.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Type.
  final SecureValueTypeBase type;

  /// File Hash.
  final Uint8List fileHash;

  /// Text.
  final String text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Secure Value Error Reverse Side.
///
/// ID: `868a2aa5`.
class SecureValueErrorReverseSide extends SecureValueErrorBase {
  /// Secure Value Error Reverse Side constructor.
  const SecureValueErrorReverseSide({
    required this.type,
    required this.fileHash,
    required this.text,
  }) : super._();

  /// Deserialize.
  factory SecureValueErrorReverseSide.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Type.
  final SecureValueTypeBase type;

  /// File Hash.
  final Uint8List fileHash;

  /// Text.
  final String text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Secure Value Error Selfie.
///
/// ID: `e537ced6`.
class SecureValueErrorSelfie extends SecureValueErrorBase {
  /// Secure Value Error Selfie constructor.
  const SecureValueErrorSelfie({
    required this.type,
    required this.fileHash,
    required this.text,
  }) : super._();

  /// Deserialize.
  factory SecureValueErrorSelfie.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Type.
  final SecureValueTypeBase type;

  /// File Hash.
  final Uint8List fileHash;

  /// Text.
  final String text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Secure Value Error File.
///
/// ID: `7a700873`.
class SecureValueErrorFile extends SecureValueErrorBase {
  /// Secure Value Error File constructor.
  const SecureValueErrorFile({
    required this.type,
    required this.fileHash,
    required this.text,
  }) : super._();

  /// Deserialize.
  factory SecureValueErrorFile.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Type.
  final SecureValueTypeBase type;

  /// File Hash.
  final Uint8List fileHash;

  /// Text.
  final String text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Secure Value Error Files.
///
/// ID: `666220e9`.
class SecureValueErrorFiles extends SecureValueErrorBase {
  /// Secure Value Error Files constructor.
  const SecureValueErrorFiles({
    required this.type,
    required this.fileHash,
    required this.text,
  }) : super._();

  /// Deserialize.
  factory SecureValueErrorFiles.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Type.
  final SecureValueTypeBase type;

  /// File Hash.
  final List<Uint8List> fileHash;

  /// Text.
  final String text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Secure Value Error.
///
/// ID: `869d758f`.
class SecureValueError extends SecureValueErrorBase {
  /// Secure Value Error constructor.
  const SecureValueError({
    required this.type,
    required this.hash,
    required this.text,
  }) : super._();

  /// Deserialize.
  factory SecureValueError.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Type.
  final SecureValueTypeBase type;

  /// Hash.
  final Uint8List hash;

  /// Text.
  final String text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Secure Value Error Translation File.
///
/// ID: `a1144770`.
class SecureValueErrorTranslationFile extends SecureValueErrorBase {
  /// Secure Value Error Translation File constructor.
  const SecureValueErrorTranslationFile({
    required this.type,
    required this.fileHash,
    required this.text,
  }) : super._();

  /// Deserialize.
  factory SecureValueErrorTranslationFile.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Type.
  final SecureValueTypeBase type;

  /// File Hash.
  final Uint8List fileHash;

  /// Text.
  final String text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Secure Value Error Translation Files.
///
/// ID: `34636dd8`.
class SecureValueErrorTranslationFiles extends SecureValueErrorBase {
  /// Secure Value Error Translation Files constructor.
  const SecureValueErrorTranslationFiles({
    required this.type,
    required this.fileHash,
    required this.text,
  }) : super._();

  /// Deserialize.
  factory SecureValueErrorTranslationFiles.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Type.
  final SecureValueTypeBase type;

  /// File Hash.
  final List<Uint8List> fileHash;

  /// Text.
  final String text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Secure Credentials Encrypted.
abstract class SecureCredentialsEncryptedBase extends TlConstructor {
  /// Predicate Secure Credentials Encrypted constructor.
  const SecureCredentialsEncryptedBase._() : super._();
}

/// Secure Credentials Encrypted.
///
/// ID: `33f0ea47`.
class SecureCredentialsEncrypted extends SecureCredentialsEncryptedBase {
  /// Secure Credentials Encrypted constructor.
  const SecureCredentialsEncrypted({
    required this.data,
    required this.hash,
    required this.secret,
  }) : super._();

  /// Deserialize.
  factory SecureCredentialsEncrypted.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Data.
  final Uint8List data;

  /// Hash.
  final Uint8List hash;

  /// Secret.
  final Uint8List secret;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Account Authorization Form.
abstract class AccountAuthorizationFormBase extends TlConstructor {
  /// Predicate Account Authorization Form constructor.
  const AccountAuthorizationFormBase._() : super._();
}

/// Account Authorization Form.
///
/// ID: `ad2e1cd8`.
class AccountAuthorizationForm extends AccountAuthorizationFormBase {
  /// Account Authorization Form constructor.
  const AccountAuthorizationForm({
    required this.flags,
    required this.requiredTypes,
    required this.values,
    required this.errors,
    required this.users,
    required this.privacyPolicyUrl,
  }) : super._();

  /// Deserialize.
  factory AccountAuthorizationForm.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Required Types.
  final List<SecureRequiredTypeBase> requiredTypes;

  /// Values.
  final List<SecureValueBase> values;

  /// Errors.
  final List<SecureValueErrorBase> errors;

  /// Users.
  final List<UserBase> users;

  /// Privacy Policy Url.
  final String? privacyPolicyUrl;

  /// If [privacyPolicyUrl] exists.
  bool get hasPrivacyPolicyUrlField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Account Sent Email Code.
abstract class AccountSentEmailCodeBase extends TlConstructor {
  /// Predicate Account Sent Email Code constructor.
  const AccountSentEmailCodeBase._() : super._();
}

/// Account Sent Email Code.
///
/// ID: `811f854f`.
class AccountSentEmailCode extends AccountSentEmailCodeBase {
  /// Account Sent Email Code constructor.
  const AccountSentEmailCode({
    required this.emailPattern,
    required this.length,
  }) : super._();

  /// Deserialize.
  factory AccountSentEmailCode.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Email Pattern.
  final String emailPattern;

  /// Length.
  final int length;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Help Deep Link Info.
abstract class HelpDeepLinkInfoBase extends TlConstructor {
  /// Predicate Help Deep Link Info constructor.
  const HelpDeepLinkInfoBase._() : super._();
}

/// Help Deep Link Info Empty.
///
/// ID: `66afa166`.
class HelpDeepLinkInfoEmpty extends HelpDeepLinkInfoBase {
  /// Help Deep Link Info Empty constructor.
  const HelpDeepLinkInfoEmpty() : super._();

  /// Deserialize.
  factory HelpDeepLinkInfoEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Deep Link Info.
///
/// ID: `6a4ee832`.
class HelpDeepLinkInfo extends HelpDeepLinkInfoBase {
  /// Help Deep Link Info constructor.
  const HelpDeepLinkInfo({
    required this.flags,
    required this.message,
    required this.entities,
  }) : super._();

  /// Deserialize.
  factory HelpDeepLinkInfo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// update_app: bit
  bool get updateApp => _bit(flags, 0);

  /// Message.
  final String message;

  /// Entities.
  final List<MessageEntityBase>? entities;

  /// If [entities] exists.
  bool get hasEntitiesField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Saved Contact.
abstract class SavedContactBase extends TlConstructor {
  /// Predicate Saved Contact constructor.
  const SavedContactBase._() : super._();
}

/// Saved Phone Contact.
///
/// ID: `1142bd56`.
class SavedPhoneContact extends SavedContactBase {
  /// Saved Phone Contact constructor.
  const SavedPhoneContact({
    required this.phone,
    required this.firstName,
    required this.lastName,
    required this.date,
  }) : super._();

  /// Deserialize.
  factory SavedPhoneContact.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Phone.
  final String phone;

  /// First Name.
  final String firstName;

  /// Last Name.
  final String lastName;

  /// Date.
  final int date;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Account Takeout.
abstract class AccountTakeoutBase extends TlConstructor {
  /// Predicate Account Takeout constructor.
  const AccountTakeoutBase._() : super._();
}

/// Account Takeout.
///
/// ID: `4dba4501`.
class AccountTakeout extends AccountTakeoutBase {
  /// Account Takeout constructor.
  const AccountTakeout({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory AccountTakeout.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Password Kdf Algo.
abstract class PasswordKdfAlgoBase extends TlConstructor {
  /// Predicate Password Kdf Algo constructor.
  const PasswordKdfAlgoBase._() : super._();
}

/// Password Kdf Algo Unknown.
///
/// ID: `d45ab096`.
class PasswordKdfAlgoUnknown extends PasswordKdfAlgoBase {
  /// Password Kdf Algo Unknown constructor.
  const PasswordKdfAlgoUnknown() : super._();

  /// Deserialize.
  factory PasswordKdfAlgoUnknown.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Password Kdf Algo S H A256 S H A256 P B K D F2 H M A C S H A512iter100000 S H A256 Mod Pow.
///
/// ID: `3a912d4a`.
class PasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow
    extends PasswordKdfAlgoBase {
  /// Password Kdf Algo S H A256 S H A256 P B K D F2 H M A C S H A512iter100000 S H A256 Mod Pow constructor.
  const PasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow({
    required this.salt1,
    required this.salt2,
    required this.g,
    required this.p,
  }) : super._();

  /// Deserialize.
  factory PasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Salt1.
  final Uint8List salt1;

  /// Salt2.
  final Uint8List salt2;

  /// G.
  final int g;

  /// P.
  final Uint8List p;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Secure Password Kdf Algo.
abstract class SecurePasswordKdfAlgoBase extends TlConstructor {
  /// Predicate Secure Password Kdf Algo constructor.
  const SecurePasswordKdfAlgoBase._() : super._();
}

/// Secure Password Kdf Algo Unknown.
///
/// ID: `004a8537`.
class SecurePasswordKdfAlgoUnknown extends SecurePasswordKdfAlgoBase {
  /// Secure Password Kdf Algo Unknown constructor.
  const SecurePasswordKdfAlgoUnknown() : super._();

  /// Deserialize.
  factory SecurePasswordKdfAlgoUnknown.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Secure Password Kdf Algo P B K D F2 H M A C S H A512iter100000.
///
/// ID: `bbf2dda0`.
class SecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000
    extends SecurePasswordKdfAlgoBase {
  /// Secure Password Kdf Algo P B K D F2 H M A C S H A512iter100000 constructor.
  const SecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000({
    required this.salt,
  }) : super._();

  /// Deserialize.
  factory SecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Salt.
  final Uint8List salt;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Secure Password Kdf Algo S H A512.
///
/// ID: `86471d92`.
class SecurePasswordKdfAlgoSHA512 extends SecurePasswordKdfAlgoBase {
  /// Secure Password Kdf Algo S H A512 constructor.
  const SecurePasswordKdfAlgoSHA512({
    required this.salt,
  }) : super._();

  /// Deserialize.
  factory SecurePasswordKdfAlgoSHA512.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Salt.
  final Uint8List salt;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Secure Secret Settings.
abstract class SecureSecretSettingsBase extends TlConstructor {
  /// Predicate Secure Secret Settings constructor.
  const SecureSecretSettingsBase._() : super._();
}

/// Secure Secret Settings.
///
/// ID: `1527bcac`.
class SecureSecretSettings extends SecureSecretSettingsBase {
  /// Secure Secret Settings constructor.
  const SecureSecretSettings({
    required this.secureAlgo,
    required this.secureSecret,
    required this.secureSecretId,
  }) : super._();

  /// Deserialize.
  factory SecureSecretSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Secure Algo.
  final SecurePasswordKdfAlgoBase secureAlgo;

  /// Secure Secret.
  final Uint8List secureSecret;

  /// Secure Secret Id.
  final int secureSecretId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Check Password S R P.
abstract class InputCheckPasswordSRPBase extends TlConstructor {
  /// Predicate Input Check Password S R P constructor.
  const InputCheckPasswordSRPBase._() : super._();
}

/// Input Check Password Empty.
///
/// ID: `9880f658`.
class InputCheckPasswordEmpty extends InputCheckPasswordSRPBase {
  /// Input Check Password Empty constructor.
  const InputCheckPasswordEmpty() : super._();

  /// Deserialize.
  factory InputCheckPasswordEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Check Password S R P.
///
/// ID: `d27ff082`.
class InputCheckPasswordSRP extends InputCheckPasswordSRPBase {
  /// Input Check Password S R P constructor.
  const InputCheckPasswordSRP({
    required this.srpId,
    required this.a,
    required this.m1,
  }) : super._();

  /// Deserialize.
  factory InputCheckPasswordSRP.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Srp Id.
  final int srpId;

  /// A.
  final Uint8List a;

  /// M1.
  final Uint8List m1;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Secure Required Type.
abstract class SecureRequiredTypeBase extends TlConstructor {
  /// Predicate Secure Required Type constructor.
  const SecureRequiredTypeBase._() : super._();
}

/// Secure Required Type.
///
/// ID: `829d99da`.
class SecureRequiredType extends SecureRequiredTypeBase {
  /// Secure Required Type constructor.
  const SecureRequiredType({
    required this.flags,
    required this.type,
  }) : super._();

  /// Deserialize.
  factory SecureRequiredType.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// native_names: bit
  bool get nativeNames => _bit(flags, 0);

  /// selfie_required: bit
  bool get selfieRequired => _bit(flags, 1);

  /// translation_required: bit
  bool get translationRequired => _bit(flags, 2);

  /// Type.
  final SecureValueTypeBase type;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Secure Required Type One Of.
///
/// ID: `027477b4`.
class SecureRequiredTypeOneOf extends SecureRequiredTypeBase {
  /// Secure Required Type One Of constructor.
  const SecureRequiredTypeOneOf({
    required this.types,
  }) : super._();

  /// Deserialize.
  factory SecureRequiredTypeOneOf.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Types.
  final List<SecureRequiredTypeBase> types;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Help Passport Config.
abstract class HelpPassportConfigBase extends TlConstructor {
  /// Predicate Help Passport Config constructor.
  const HelpPassportConfigBase._() : super._();
}

/// Help Passport Config Not Modified.
///
/// ID: `bfb9f457`.
class HelpPassportConfigNotModified extends HelpPassportConfigBase {
  /// Help Passport Config Not Modified constructor.
  const HelpPassportConfigNotModified() : super._();

  /// Deserialize.
  factory HelpPassportConfigNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Passport Config.
///
/// ID: `a098d6af`.
class HelpPassportConfig extends HelpPassportConfigBase {
  /// Help Passport Config constructor.
  const HelpPassportConfig({
    required this.hash,
    required this.countriesLangs,
  }) : super._();

  /// Deserialize.
  factory HelpPassportConfig.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Countries Langs.
  final DataJSONBase countriesLangs;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input App Event.
abstract class InputAppEventBase extends TlConstructor {
  /// Predicate Input App Event constructor.
  const InputAppEventBase._() : super._();
}

/// Input App Event.
///
/// ID: `1d1b1245`.
class InputAppEvent extends InputAppEventBase {
  /// Input App Event constructor.
  const InputAppEvent({
    required this.time,
    required this.type,
    required this.peer,
    required this.data,
  }) : super._();

  /// Deserialize.
  factory InputAppEvent.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Time.
  final double time;

  /// Type.
  final String type;

  /// Peer.
  final int peer;

  /// Data.
  final JSONValueBase data;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate J S O N Object Value.
abstract class JSONObjectValueBase extends TlConstructor {
  /// Predicate J S O N Object Value constructor.
  const JSONObjectValueBase._() : super._();
}

/// Json Object Value.
///
/// ID: `c0de1bd9`.
class JsonObjectValue extends JSONObjectValueBase {
  /// Json Object Value constructor.
  const JsonObjectValue({
    required this.key,
    required this.value,
  }) : super._();

  /// Deserialize.
  factory JsonObjectValue.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Key.
  final String key;

  /// Value.
  final JSONValueBase value;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate J S O N Value.
abstract class JSONValueBase extends TlConstructor {
  /// Predicate J S O N Value constructor.
  const JSONValueBase._() : super._();
}

/// Json Null.
///
/// ID: `3f6d7b68`.
class JsonNull extends JSONValueBase {
  /// Json Null constructor.
  const JsonNull() : super._();

  /// Deserialize.
  factory JsonNull.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Json Bool.
///
/// ID: `c7345e6a`.
class JsonBool extends JSONValueBase {
  /// Json Bool constructor.
  const JsonBool({
    required this.value,
  }) : super._();

  /// Deserialize.
  factory JsonBool.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Value.
  final bool value;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Json Number.
///
/// ID: `2be0dfa4`.
class JsonNumber extends JSONValueBase {
  /// Json Number constructor.
  const JsonNumber({
    required this.value,
  }) : super._();

  /// Deserialize.
  factory JsonNumber.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Value.
  final double value;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Json String.
///
/// ID: `b71e767a`.
class JsonString extends JSONValueBase {
  /// Json String constructor.
  const JsonString({
    required this.value,
  }) : super._();

  /// Deserialize.
  factory JsonString.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Value.
  final String value;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Json Array.
///
/// ID: `f7444763`.
class JsonArray extends JSONValueBase {
  /// Json Array constructor.
  const JsonArray({
    required this.value,
  }) : super._();

  /// Deserialize.
  factory JsonArray.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Value.
  final List<JSONValueBase> value;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Json Object.
///
/// ID: `99c1d49d`.
class JsonObject extends JSONValueBase {
  /// Json Object constructor.
  const JsonObject({
    required this.value,
  }) : super._();

  /// Deserialize.
  factory JsonObject.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Value.
  final List<JSONObjectValueBase> value;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Page Table Cell.
abstract class PageTableCellBase extends TlConstructor {
  /// Predicate Page Table Cell constructor.
  const PageTableCellBase._() : super._();
}

/// Page Table Cell.
///
/// ID: `34566b6a`.
class PageTableCell extends PageTableCellBase {
  /// Page Table Cell constructor.
  const PageTableCell({
    required this.flags,
    required this.text,
    required this.colspan,
    required this.rowspan,
  }) : super._();

  /// Deserialize.
  factory PageTableCell.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// header: bit
  bool get header => _bit(flags, 0);

  /// align_center: bit
  bool get alignCenter => _bit(flags, 3);

  /// align_right: bit
  bool get alignRight => _bit(flags, 4);

  /// valign_middle: bit
  bool get valignMiddle => _bit(flags, 5);

  /// valign_bottom: bit
  bool get valignBottom => _bit(flags, 6);

  /// Text.
  final RichTextBase? text;

  /// If [text] exists.
  bool get hasTextField => _bit(flags, 7);

  /// Colspan.
  final int? colspan;

  /// If [colspan] exists.
  bool get hasColspanField => _bit(flags, 1);

  /// Rowspan.
  final int? rowspan;

  /// If [rowspan] exists.
  bool get hasRowspanField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Page Table Row.
abstract class PageTableRowBase extends TlConstructor {
  /// Predicate Page Table Row constructor.
  const PageTableRowBase._() : super._();
}

/// Page Table Row.
///
/// ID: `e0c0c5e5`.
class PageTableRow extends PageTableRowBase {
  /// Page Table Row constructor.
  const PageTableRow({
    required this.cells,
  }) : super._();

  /// Deserialize.
  factory PageTableRow.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Cells.
  final List<PageTableCellBase> cells;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Page Caption.
abstract class PageCaptionBase extends TlConstructor {
  /// Predicate Page Caption constructor.
  const PageCaptionBase._() : super._();
}

/// Page Caption.
///
/// ID: `6f747657`.
class PageCaption extends PageCaptionBase {
  /// Page Caption constructor.
  const PageCaption({
    required this.text,
    required this.credit,
  }) : super._();

  /// Deserialize.
  factory PageCaption.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final RichTextBase text;

  /// Credit.
  final RichTextBase credit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Page List Item.
abstract class PageListItemBase extends TlConstructor {
  /// Predicate Page List Item constructor.
  const PageListItemBase._() : super._();
}

/// Page List Item Text.
///
/// ID: `b92fb6cd`.
class PageListItemText extends PageListItemBase {
  /// Page List Item Text constructor.
  const PageListItemText({
    required this.text,
  }) : super._();

  /// Deserialize.
  factory PageListItemText.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final RichTextBase text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page List Item Blocks.
///
/// ID: `25e073fc`.
class PageListItemBlocks extends PageListItemBase {
  /// Page List Item Blocks constructor.
  const PageListItemBlocks({
    required this.blocks,
  }) : super._();

  /// Deserialize.
  factory PageListItemBlocks.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Blocks.
  final List<PageBlockBase> blocks;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Page List Ordered Item.
abstract class PageListOrderedItemBase extends TlConstructor {
  /// Predicate Page List Ordered Item constructor.
  const PageListOrderedItemBase._() : super._();
}

/// Page List Ordered Item Text.
///
/// ID: `5e068047`.
class PageListOrderedItemText extends PageListOrderedItemBase {
  /// Page List Ordered Item Text constructor.
  const PageListOrderedItemText({
    required this.num,
    required this.text,
  }) : super._();

  /// Deserialize.
  factory PageListOrderedItemText.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Num.
  final String num;

  /// Text.
  final RichTextBase text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Page List Ordered Item Blocks.
///
/// ID: `98dd8936`.
class PageListOrderedItemBlocks extends PageListOrderedItemBase {
  /// Page List Ordered Item Blocks constructor.
  const PageListOrderedItemBlocks({
    required this.num,
    required this.blocks,
  }) : super._();

  /// Deserialize.
  factory PageListOrderedItemBlocks.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Num.
  final String num;

  /// Blocks.
  final List<PageBlockBase> blocks;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Page Related Article.
abstract class PageRelatedArticleBase extends TlConstructor {
  /// Predicate Page Related Article constructor.
  const PageRelatedArticleBase._() : super._();
}

/// Page Related Article.
///
/// ID: `b390dc08`.
class PageRelatedArticle extends PageRelatedArticleBase {
  /// Page Related Article constructor.
  const PageRelatedArticle({
    required this.flags,
    required this.url,
    required this.webpageId,
    required this.title,
    required this.description,
    required this.photoId,
    required this.author,
    required this.publishedDate,
  }) : super._();

  /// Deserialize.
  factory PageRelatedArticle.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Url.
  final String url;

  /// Webpage Id.
  final int webpageId;

  /// Title.
  final String? title;

  /// If [title] exists.
  bool get hasTitleField => _bit(flags, 0);

  /// Description.
  final String? description;

  /// If [description] exists.
  bool get hasDescriptionField => _bit(flags, 1);

  /// Photo Id.
  final int? photoId;

  /// If [photoId] exists.
  bool get hasPhotoIdField => _bit(flags, 2);

  /// Author.
  final String? author;

  /// If [author] exists.
  bool get hasAuthorField => _bit(flags, 3);

  /// Published Date.
  final int? publishedDate;

  /// If [publishedDate] exists.
  bool get hasPublishedDateField => _bit(flags, 4);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Page.
abstract class PageBase extends TlConstructor {
  /// Predicate Page constructor.
  const PageBase._() : super._();
}

/// Page.
///
/// ID: `98657f0d`.
class Page extends PageBase {
  /// Page constructor.
  const Page({
    required this.flags,
    required this.url,
    required this.blocks,
    required this.photos,
    required this.documents,
    required this.views,
  }) : super._();

  /// Deserialize.
  factory Page.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// part: bit
  bool get part => _bit(flags, 0);

  /// rtl: bit
  bool get rtl => _bit(flags, 1);

  /// v2: bit
  bool get v2 => _bit(flags, 2);

  /// Url.
  final String url;

  /// Blocks.
  final List<PageBlockBase> blocks;

  /// Photos.
  final List<PhotoBase> photos;

  /// Documents.
  final List<DocumentBase> documents;

  /// Views.
  final int? views;

  /// If [views] exists.
  bool get hasViewsField => _bit(flags, 3);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Help Support Name.
abstract class HelpSupportNameBase extends TlConstructor {
  /// Predicate Help Support Name constructor.
  const HelpSupportNameBase._() : super._();
}

/// Help Support Name.
///
/// ID: `8c05f1c9`.
class HelpSupportName extends HelpSupportNameBase {
  /// Help Support Name constructor.
  const HelpSupportName({
    required this.name,
  }) : super._();

  /// Deserialize.
  factory HelpSupportName.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Name.
  final String name;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Help User Info.
abstract class HelpUserInfoBase extends TlConstructor {
  /// Predicate Help User Info constructor.
  const HelpUserInfoBase._() : super._();
}

/// Help User Info Empty.
///
/// ID: `f3ae2eed`.
class HelpUserInfoEmpty extends HelpUserInfoBase {
  /// Help User Info Empty constructor.
  const HelpUserInfoEmpty() : super._();

  /// Deserialize.
  factory HelpUserInfoEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help User Info.
///
/// ID: `01eb3758`.
class HelpUserInfo extends HelpUserInfoBase {
  /// Help User Info constructor.
  const HelpUserInfo({
    required this.message,
    required this.entities,
    required this.author,
    required this.date,
  }) : super._();

  /// Deserialize.
  factory HelpUserInfo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Message.
  final String message;

  /// Entities.
  final List<MessageEntityBase> entities;

  /// Author.
  final String author;

  /// Date.
  final int date;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Poll Answer.
abstract class PollAnswerBase extends TlConstructor {
  /// Predicate Poll Answer constructor.
  const PollAnswerBase._() : super._();
}

/// Poll Answer.
///
/// ID: `6ca9c2e9`.
class PollAnswer extends PollAnswerBase {
  /// Poll Answer constructor.
  const PollAnswer({
    required this.text,
    required this.option,
  }) : super._();

  /// Deserialize.
  factory PollAnswer.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final String text;

  /// Option.
  final Uint8List option;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Poll.
abstract class PollBase extends TlConstructor {
  /// Predicate Poll constructor.
  const PollBase._() : super._();
}

/// Poll.
///
/// ID: `86e18161`.
class Poll extends PollBase {
  /// Poll constructor.
  const Poll({
    required this.id,
    required this.flags,
    required this.question,
    required this.answers,
    required this.closePeriod,
    required this.closeDate,
  }) : super._();

  /// Deserialize.
  factory Poll.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Flags.
  final int flags;

  /// closed: bit
  bool get closed => _bit(flags, 0);

  /// public_voters: bit
  bool get publicVoters => _bit(flags, 1);

  /// multiple_choice: bit
  bool get multipleChoice => _bit(flags, 2);

  /// quiz: bit
  bool get quiz => _bit(flags, 3);

  /// Question.
  final String question;

  /// Answers.
  final List<PollAnswerBase> answers;

  /// Close Period.
  final int? closePeriod;

  /// If [closePeriod] exists.
  bool get hasClosePeriodField => _bit(flags, 4);

  /// Close Date.
  final int? closeDate;

  /// If [closeDate] exists.
  bool get hasCloseDateField => _bit(flags, 5);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Poll Answer Voters.
abstract class PollAnswerVotersBase extends TlConstructor {
  /// Predicate Poll Answer Voters constructor.
  const PollAnswerVotersBase._() : super._();
}

/// Poll Answer Voters.
///
/// ID: `3b6ddad2`.
class PollAnswerVoters extends PollAnswerVotersBase {
  /// Poll Answer Voters constructor.
  const PollAnswerVoters({
    required this.flags,
    required this.option,
    required this.voters,
  }) : super._();

  /// Deserialize.
  factory PollAnswerVoters.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// chosen: bit
  bool get chosen => _bit(flags, 0);

  /// correct: bit
  bool get correct => _bit(flags, 1);

  /// Option.
  final Uint8List option;

  /// Voters.
  final int voters;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Poll Results.
abstract class PollResultsBase extends TlConstructor {
  /// Predicate Poll Results constructor.
  const PollResultsBase._() : super._();
}

/// Poll Results.
///
/// ID: `7adf2420`.
class PollResults extends PollResultsBase {
  /// Poll Results constructor.
  const PollResults({
    required this.flags,
    required this.results,
    required this.totalVoters,
    required this.recentVoters,
    required this.solution,
    required this.solutionEntities,
  }) : super._();

  /// Deserialize.
  factory PollResults.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// min: bit
  bool get min => _bit(flags, 0);

  /// Results.
  final List<PollAnswerVotersBase>? results;

  /// If [results] exists.
  bool get hasResultsField => _bit(flags, 1);

  /// Total Voters.
  final int? totalVoters;

  /// If [totalVoters] exists.
  bool get hasTotalVotersField => _bit(flags, 2);

  /// Recent Voters.
  final List<PeerBase>? recentVoters;

  /// If [recentVoters] exists.
  bool get hasRecentVotersField => _bit(flags, 3);

  /// Solution.
  final String? solution;

  /// If [solution] exists.
  bool get hasSolutionField => _bit(flags, 4);

  /// Solution Entities.
  final List<MessageEntityBase>? solutionEntities;

  /// If [solutionEntities] exists.
  bool get hasSolutionEntitiesField => _bit(flags, 4);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Chat Onlines.
abstract class ChatOnlinesBase extends TlConstructor {
  /// Predicate Chat Onlines constructor.
  const ChatOnlinesBase._() : super._();
}

/// Chat Onlines.
///
/// ID: `f041e250`.
class ChatOnlines extends ChatOnlinesBase {
  /// Chat Onlines constructor.
  const ChatOnlines({
    required this.onlines,
  }) : super._();

  /// Deserialize.
  factory ChatOnlines.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Onlines.
  final int onlines;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Stats U R L.
abstract class StatsURLBase extends TlConstructor {
  /// Predicate Stats U R L constructor.
  const StatsURLBase._() : super._();
}

/// Stats U R L.
///
/// ID: `47a971e0`.
class StatsURL extends StatsURLBase {
  /// Stats U R L constructor.
  const StatsURL({
    required this.url,
  }) : super._();

  /// Deserialize.
  factory StatsURL.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Url.
  final String url;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Chat Admin Rights.
abstract class ChatAdminRightsBase extends TlConstructor {
  /// Predicate Chat Admin Rights constructor.
  const ChatAdminRightsBase._() : super._();
}

/// Chat Admin Rights.
///
/// ID: `5fb224d5`.
class ChatAdminRights extends ChatAdminRightsBase {
  /// Chat Admin Rights constructor.
  const ChatAdminRights({
    required this.flags,
  }) : super._();

  /// Deserialize.
  factory ChatAdminRights.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// change_info: bit
  bool get changeInfo => _bit(flags, 0);

  /// post_messages: bit
  bool get postMessages => _bit(flags, 1);

  /// edit_messages: bit
  bool get editMessages => _bit(flags, 2);

  /// delete_messages: bit
  bool get deleteMessages => _bit(flags, 3);

  /// ban_users: bit
  bool get banUsers => _bit(flags, 4);

  /// invite_users: bit
  bool get inviteUsers => _bit(flags, 5);

  /// pin_messages: bit
  bool get pinMessages => _bit(flags, 7);

  /// add_admins: bit
  bool get addAdmins => _bit(flags, 9);

  /// anonymous: bit
  bool get anonymous => _bit(flags, 10);

  /// manage_call: bit
  bool get manageCall => _bit(flags, 11);

  /// other: bit
  bool get other => _bit(flags, 12);

  /// manage_topics: bit
  bool get manageTopics => _bit(flags, 13);

  /// post_stories: bit
  bool get postStories => _bit(flags, 14);

  /// edit_stories: bit
  bool get editStories => _bit(flags, 15);

  /// delete_stories: bit
  bool get deleteStories => _bit(flags, 16);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Chat Banned Rights.
abstract class ChatBannedRightsBase extends TlConstructor {
  /// Predicate Chat Banned Rights constructor.
  const ChatBannedRightsBase._() : super._();
}

/// Chat Banned Rights.
///
/// ID: `9f120418`.
class ChatBannedRights extends ChatBannedRightsBase {
  /// Chat Banned Rights constructor.
  const ChatBannedRights({
    required this.flags,
    required this.untilDate,
  }) : super._();

  /// Deserialize.
  factory ChatBannedRights.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// view_messages: bit
  bool get viewMessages => _bit(flags, 0);

  /// send_messages: bit
  bool get sendMessages => _bit(flags, 1);

  /// send_media: bit
  bool get sendMedia => _bit(flags, 2);

  /// send_stickers: bit
  bool get sendStickers => _bit(flags, 3);

  /// send_gifs: bit
  bool get sendGifs => _bit(flags, 4);

  /// send_games: bit
  bool get sendGames => _bit(flags, 5);

  /// send_inline: bit
  bool get sendInline => _bit(flags, 6);

  /// embed_links: bit
  bool get embedLinks => _bit(flags, 7);

  /// send_polls: bit
  bool get sendPolls => _bit(flags, 8);

  /// change_info: bit
  bool get changeInfo => _bit(flags, 10);

  /// invite_users: bit
  bool get inviteUsers => _bit(flags, 15);

  /// pin_messages: bit
  bool get pinMessages => _bit(flags, 17);

  /// manage_topics: bit
  bool get manageTopics => _bit(flags, 18);

  /// send_photos: bit
  bool get sendPhotos => _bit(flags, 19);

  /// send_videos: bit
  bool get sendVideos => _bit(flags, 20);

  /// send_roundvideos: bit
  bool get sendRoundvideos => _bit(flags, 21);

  /// send_audios: bit
  bool get sendAudios => _bit(flags, 22);

  /// send_voices: bit
  bool get sendVoices => _bit(flags, 23);

  /// send_docs: bit
  bool get sendDocs => _bit(flags, 24);

  /// send_plain: bit
  bool get sendPlain => _bit(flags, 25);

  /// Until Date.
  final int untilDate;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Wall Paper.
abstract class InputWallPaperBase extends TlConstructor {
  /// Predicate Input Wall Paper constructor.
  const InputWallPaperBase._() : super._();
}

/// Input Wall Paper.
///
/// ID: `e630b979`.
class InputWallPaper extends InputWallPaperBase {
  /// Input Wall Paper constructor.
  const InputWallPaper({
    required this.id,
    required this.accessHash,
  }) : super._();

  /// Deserialize.
  factory InputWallPaper.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Wall Paper Slug.
///
/// ID: `72091c80`.
class InputWallPaperSlug extends InputWallPaperBase {
  /// Input Wall Paper Slug constructor.
  const InputWallPaperSlug({
    required this.slug,
  }) : super._();

  /// Deserialize.
  factory InputWallPaperSlug.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Slug.
  final String slug;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Wall Paper No File.
///
/// ID: `967a462e`.
class InputWallPaperNoFile extends InputWallPaperBase {
  /// Input Wall Paper No File constructor.
  const InputWallPaperNoFile({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory InputWallPaperNoFile.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Account Wall Papers.
abstract class AccountWallPapersBase extends TlConstructor {
  /// Predicate Account Wall Papers constructor.
  const AccountWallPapersBase._() : super._();
}

/// Account Wall Papers Not Modified.
///
/// ID: `1c199183`.
class AccountWallPapersNotModified extends AccountWallPapersBase {
  /// Account Wall Papers Not Modified constructor.
  const AccountWallPapersNotModified() : super._();

  /// Deserialize.
  factory AccountWallPapersNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Wall Papers.
///
/// ID: `cdc3858c`.
class AccountWallPapers extends AccountWallPapersBase {
  /// Account Wall Papers constructor.
  const AccountWallPapers({
    required this.hash,
    required this.wallpapers,
  }) : super._();

  /// Deserialize.
  factory AccountWallPapers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Wallpapers.
  final List<WallPaperBase> wallpapers;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Code Settings.
abstract class CodeSettingsBase extends TlConstructor {
  /// Predicate Code Settings constructor.
  const CodeSettingsBase._() : super._();
}

/// Code Settings.
///
/// ID: `ad253d78`.
class CodeSettings extends CodeSettingsBase {
  /// Code Settings constructor.
  const CodeSettings({
    required this.flags,
    required this.logoutTokens,
    required this.token,
    required this.appSandbox,
  }) : super._();

  /// Deserialize.
  factory CodeSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// allow_flashcall: bit
  bool get allowFlashcall => _bit(flags, 0);

  /// current_number: bit
  bool get currentNumber => _bit(flags, 1);

  /// allow_app_hash: bit
  bool get allowAppHash => _bit(flags, 4);

  /// allow_missed_call: bit
  bool get allowMissedCall => _bit(flags, 5);

  /// allow_firebase: bit
  bool get allowFirebase => _bit(flags, 7);

  /// Logout Tokens.
  final List<Uint8List>? logoutTokens;

  /// If [logoutTokens] exists.
  bool get hasLogoutTokensField => _bit(flags, 6);

  /// Token.
  final String? token;

  /// If [token] exists.
  bool get hasTokenField => _bit(flags, 8);

  /// App Sandbox.
  final bool? appSandbox;

  /// If [appSandbox] exists.
  bool get hasAppSandboxField => _bit(flags, 8);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Wall Paper Settings.
abstract class WallPaperSettingsBase extends TlConstructor {
  /// Predicate Wall Paper Settings constructor.
  const WallPaperSettingsBase._() : super._();
}

/// Wall Paper Settings.
///
/// ID: `372efcd0`.
class WallPaperSettings extends WallPaperSettingsBase {
  /// Wall Paper Settings constructor.
  const WallPaperSettings({
    required this.flags,
    required this.backgroundColor,
    required this.secondBackgroundColor,
    required this.thirdBackgroundColor,
    required this.fourthBackgroundColor,
    required this.intensity,
    required this.rotation,
    required this.emoticon,
  }) : super._();

  /// Deserialize.
  factory WallPaperSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// blur: bit
  bool get blur => _bit(flags, 1);

  /// motion: bit
  bool get motion => _bit(flags, 2);

  /// Background Color.
  final int? backgroundColor;

  /// If [backgroundColor] exists.
  bool get hasBackgroundColorField => _bit(flags, 0);

  /// Second Background Color.
  final int? secondBackgroundColor;

  /// If [secondBackgroundColor] exists.
  bool get hasSecondBackgroundColorField => _bit(flags, 4);

  /// Third Background Color.
  final int? thirdBackgroundColor;

  /// If [thirdBackgroundColor] exists.
  bool get hasThirdBackgroundColorField => _bit(flags, 5);

  /// Fourth Background Color.
  final int? fourthBackgroundColor;

  /// If [fourthBackgroundColor] exists.
  bool get hasFourthBackgroundColorField => _bit(flags, 6);

  /// Intensity.
  final int? intensity;

  /// If [intensity] exists.
  bool get hasIntensityField => _bit(flags, 3);

  /// Rotation.
  final int? rotation;

  /// If [rotation] exists.
  bool get hasRotationField => _bit(flags, 4);

  /// Emoticon.
  final String? emoticon;

  /// If [emoticon] exists.
  bool get hasEmoticonField => _bit(flags, 7);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Auto Download Settings.
abstract class AutoDownloadSettingsBase extends TlConstructor {
  /// Predicate Auto Download Settings constructor.
  const AutoDownloadSettingsBase._() : super._();
}

/// Auto Download Settings.
///
/// ID: `baa57628`.
class AutoDownloadSettings extends AutoDownloadSettingsBase {
  /// Auto Download Settings constructor.
  const AutoDownloadSettings({
    required this.flags,
    required this.photoSizeMax,
    required this.videoSizeMax,
    required this.fileSizeMax,
    required this.videoUploadMaxbitrate,
    required this.smallQueueActiveOperationsMax,
    required this.largeQueueActiveOperationsMax,
  }) : super._();

  /// Deserialize.
  factory AutoDownloadSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// disabled: bit
  bool get disabled => _bit(flags, 0);

  /// video_preload_large: bit
  bool get videoPreloadLarge => _bit(flags, 1);

  /// audio_preload_next: bit
  bool get audioPreloadNext => _bit(flags, 2);

  /// phonecalls_less_data: bit
  bool get phonecallsLessData => _bit(flags, 3);

  /// stories_preload: bit
  bool get storiesPreload => _bit(flags, 4);

  /// Photo Size Max.
  final int photoSizeMax;

  /// Video Size Max.
  final int videoSizeMax;

  /// File Size Max.
  final int fileSizeMax;

  /// Video Upload Maxbitrate.
  final int videoUploadMaxbitrate;

  /// Small Queue Active Operations Max.
  final int smallQueueActiveOperationsMax;

  /// Large Queue Active Operations Max.
  final int largeQueueActiveOperationsMax;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Account Auto Download Settings.
abstract class AccountAutoDownloadSettingsBase extends TlConstructor {
  /// Predicate Account Auto Download Settings constructor.
  const AccountAutoDownloadSettingsBase._() : super._();
}

/// Account Auto Download Settings.
///
/// ID: `63cacf26`.
class AccountAutoDownloadSettings extends AccountAutoDownloadSettingsBase {
  /// Account Auto Download Settings constructor.
  const AccountAutoDownloadSettings({
    required this.low,
    required this.medium,
    required this.high,
  }) : super._();

  /// Deserialize.
  factory AccountAutoDownloadSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Low.
  final AutoDownloadSettingsBase low;

  /// Medium.
  final AutoDownloadSettingsBase medium;

  /// High.
  final AutoDownloadSettingsBase high;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Emoji Keyword.
abstract class EmojiKeywordBase extends TlConstructor {
  /// Predicate Emoji Keyword constructor.
  const EmojiKeywordBase._() : super._();
}

/// Emoji Keyword.
///
/// ID: `d5b3b9f9`.
class EmojiKeyword extends EmojiKeywordBase {
  /// Emoji Keyword constructor.
  const EmojiKeyword({
    required this.keyword,
    required this.emoticons,
  }) : super._();

  /// Deserialize.
  factory EmojiKeyword.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Keyword.
  final String keyword;

  /// Emoticons.
  final List<String> emoticons;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Emoji Keyword Deleted.
///
/// ID: `236df622`.
class EmojiKeywordDeleted extends EmojiKeywordBase {
  /// Emoji Keyword Deleted constructor.
  const EmojiKeywordDeleted({
    required this.keyword,
    required this.emoticons,
  }) : super._();

  /// Deserialize.
  factory EmojiKeywordDeleted.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Keyword.
  final String keyword;

  /// Emoticons.
  final List<String> emoticons;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Emoji Keywords Difference.
abstract class EmojiKeywordsDifferenceBase extends TlConstructor {
  /// Predicate Emoji Keywords Difference constructor.
  const EmojiKeywordsDifferenceBase._() : super._();
}

/// Emoji Keywords Difference.
///
/// ID: `5cc761bd`.
class EmojiKeywordsDifference extends EmojiKeywordsDifferenceBase {
  /// Emoji Keywords Difference constructor.
  const EmojiKeywordsDifference({
    required this.langCode,
    required this.fromVersion,
    required this.version,
    required this.keywords,
  }) : super._();

  /// Deserialize.
  factory EmojiKeywordsDifference.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Lang Code.
  final String langCode;

  /// From Version.
  final int fromVersion;

  /// Version.
  final int version;

  /// Keywords.
  final List<EmojiKeywordBase> keywords;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Emoji U R L.
abstract class EmojiURLBase extends TlConstructor {
  /// Predicate Emoji U R L constructor.
  const EmojiURLBase._() : super._();
}

/// Emoji U R L.
///
/// ID: `a575739d`.
class EmojiURL extends EmojiURLBase {
  /// Emoji U R L constructor.
  const EmojiURL({
    required this.url,
  }) : super._();

  /// Deserialize.
  factory EmojiURL.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Url.
  final String url;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Emoji Language.
abstract class EmojiLanguageBase extends TlConstructor {
  /// Predicate Emoji Language constructor.
  const EmojiLanguageBase._() : super._();
}

/// Emoji Language.
///
/// ID: `b3fb5361`.
class EmojiLanguage extends EmojiLanguageBase {
  /// Emoji Language constructor.
  const EmojiLanguage({
    required this.langCode,
  }) : super._();

  /// Deserialize.
  factory EmojiLanguage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Lang Code.
  final String langCode;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Folder.
abstract class FolderBase extends TlConstructor {
  /// Predicate Folder constructor.
  const FolderBase._() : super._();
}

/// Folder.
///
/// ID: `ff544e65`.
class Folder extends FolderBase {
  /// Folder constructor.
  const Folder({
    required this.flags,
    required this.id,
    required this.title,
    required this.photo,
  }) : super._();

  /// Deserialize.
  factory Folder.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// autofill_new_broadcasts: bit
  bool get autofillNewBroadcasts => _bit(flags, 0);

  /// autofill_public_groups: bit
  bool get autofillPublicGroups => _bit(flags, 1);

  /// autofill_new_correspondents: bit
  bool get autofillNewCorrespondents => _bit(flags, 2);

  /// Id.
  final int id;

  /// Title.
  final String title;

  /// Photo.
  final ChatPhotoBase? photo;

  /// If [photo] exists.
  bool get hasPhotoField => _bit(flags, 3);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Folder Peer.
abstract class InputFolderPeerBase extends TlConstructor {
  /// Predicate Input Folder Peer constructor.
  const InputFolderPeerBase._() : super._();
}

/// Input Folder Peer.
///
/// ID: `fbd2c296`.
class InputFolderPeer extends InputFolderPeerBase {
  /// Input Folder Peer constructor.
  const InputFolderPeer({
    required this.peer,
    required this.folderId,
  }) : super._();

  /// Deserialize.
  factory InputFolderPeer.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Folder Id.
  final int folderId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Folder Peer.
abstract class FolderPeerBase extends TlConstructor {
  /// Predicate Folder Peer constructor.
  const FolderPeerBase._() : super._();
}

/// Folder Peer.
///
/// ID: `e9baa668`.
class FolderPeer extends FolderPeerBase {
  /// Folder Peer constructor.
  const FolderPeer({
    required this.peer,
    required this.folderId,
  }) : super._();

  /// Deserialize.
  factory FolderPeer.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Folder Id.
  final int folderId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Search Counter.
abstract class MessagesSearchCounterBase extends TlConstructor {
  /// Predicate Messages Search Counter constructor.
  const MessagesSearchCounterBase._() : super._();
}

/// Messages Search Counter.
///
/// ID: `e844ebff`.
class MessagesSearchCounter extends MessagesSearchCounterBase {
  /// Messages Search Counter constructor.
  const MessagesSearchCounter({
    required this.flags,
    required this.filter,
    required this.count,
  }) : super._();

  /// Deserialize.
  factory MessagesSearchCounter.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// inexact: bit
  bool get inexact => _bit(flags, 1);

  /// Filter.
  final MessagesFilterBase filter;

  /// Count.
  final int count;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Url Auth Result.
abstract class UrlAuthResultBase extends TlConstructor {
  /// Predicate Url Auth Result constructor.
  const UrlAuthResultBase._() : super._();
}

/// Url Auth Result Request.
///
/// ID: `92d33a0e`.
class UrlAuthResultRequest extends UrlAuthResultBase {
  /// Url Auth Result Request constructor.
  const UrlAuthResultRequest({
    required this.flags,
    required this.bot,
    required this.domain,
  }) : super._();

  /// Deserialize.
  factory UrlAuthResultRequest.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// request_write_access: bit
  bool get requestWriteAccess => _bit(flags, 0);

  /// Bot.
  final UserBase bot;

  /// Domain.
  final String domain;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Url Auth Result Accepted.
///
/// ID: `8f8c0e4e`.
class UrlAuthResultAccepted extends UrlAuthResultBase {
  /// Url Auth Result Accepted constructor.
  const UrlAuthResultAccepted({
    required this.url,
  }) : super._();

  /// Deserialize.
  factory UrlAuthResultAccepted.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Url.
  final String url;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Url Auth Result Default.
///
/// ID: `a9d6db1f`.
class UrlAuthResultDefault extends UrlAuthResultBase {
  /// Url Auth Result Default constructor.
  const UrlAuthResultDefault() : super._();

  /// Deserialize.
  factory UrlAuthResultDefault.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Channel Location.
abstract class ChannelLocationBase extends TlConstructor {
  /// Predicate Channel Location constructor.
  const ChannelLocationBase._() : super._();
}

/// Channel Location Empty.
///
/// ID: `bfb5ad8b`.
class ChannelLocationEmpty extends ChannelLocationBase {
  /// Channel Location Empty constructor.
  const ChannelLocationEmpty() : super._();

  /// Deserialize.
  factory ChannelLocationEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channel Location.
///
/// ID: `209b82db`.
class ChannelLocation extends ChannelLocationBase {
  /// Channel Location constructor.
  const ChannelLocation({
    required this.geoPoint,
    required this.address,
  }) : super._();

  /// Deserialize.
  factory ChannelLocation.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Geo Point.
  final GeoPointBase geoPoint;

  /// Address.
  final String address;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Peer Located.
abstract class PeerLocatedBase extends TlConstructor {
  /// Predicate Peer Located constructor.
  const PeerLocatedBase._() : super._();
}

/// Peer Located.
///
/// ID: `ca461b5d`.
class PeerLocated extends PeerLocatedBase {
  /// Peer Located constructor.
  const PeerLocated({
    required this.peer,
    required this.expires,
    required this.distance,
  }) : super._();

  /// Deserialize.
  factory PeerLocated.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Expires.
  final int expires;

  /// Distance.
  final int distance;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Peer Self Located.
///
/// ID: `f8ec284b`.
class PeerSelfLocated extends PeerLocatedBase {
  /// Peer Self Located constructor.
  const PeerSelfLocated({
    required this.expires,
  }) : super._();

  /// Deserialize.
  factory PeerSelfLocated.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Expires.
  final int expires;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Restriction Reason.
abstract class RestrictionReasonBase extends TlConstructor {
  /// Predicate Restriction Reason constructor.
  const RestrictionReasonBase._() : super._();
}

/// Restriction Reason.
///
/// ID: `d072acb4`.
class RestrictionReason extends RestrictionReasonBase {
  /// Restriction Reason constructor.
  const RestrictionReason({
    required this.platform,
    required this.reason,
    required this.text,
  }) : super._();

  /// Deserialize.
  factory RestrictionReason.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Platform.
  final String platform;

  /// Reason.
  final String reason;

  /// Text.
  final String text;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Theme.
abstract class InputThemeBase extends TlConstructor {
  /// Predicate Input Theme constructor.
  const InputThemeBase._() : super._();
}

/// Input Theme.
///
/// ID: `3c5693e9`.
class InputTheme extends InputThemeBase {
  /// Input Theme constructor.
  const InputTheme({
    required this.id,
    required this.accessHash,
  }) : super._();

  /// Deserialize.
  factory InputTheme.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Theme Slug.
///
/// ID: `f5890df1`.
class InputThemeSlug extends InputThemeBase {
  /// Input Theme Slug constructor.
  const InputThemeSlug({
    required this.slug,
  }) : super._();

  /// Deserialize.
  factory InputThemeSlug.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Slug.
  final String slug;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Theme.
abstract class ThemeBase extends TlConstructor {
  /// Predicate Theme constructor.
  const ThemeBase._() : super._();
}

/// Theme.
///
/// ID: `a00e67d6`.
class Theme extends ThemeBase {
  /// Theme constructor.
  const Theme({
    required this.flags,
    required this.id,
    required this.accessHash,
    required this.slug,
    required this.title,
    required this.document,
    required this.settings,
    required this.emoticon,
    required this.installsCount,
  }) : super._();

  /// Deserialize.
  factory Theme.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// creator: bit
  bool get creator => _bit(flags, 0);

  /// default: bit
  bool get ddefault => _bit(flags, 1);

  /// for_chat: bit
  bool get forChat => _bit(flags, 5);

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Slug.
  final String slug;

  /// Title.
  final String title;

  /// Document.
  final DocumentBase? document;

  /// If [document] exists.
  bool get hasDocumentField => _bit(flags, 2);

  /// Settings.
  final List<ThemeSettingsBase>? settings;

  /// If [settings] exists.
  bool get hasSettingsField => _bit(flags, 3);

  /// Emoticon.
  final String? emoticon;

  /// If [emoticon] exists.
  bool get hasEmoticonField => _bit(flags, 6);

  /// Installs Count.
  final int? installsCount;

  /// If [installsCount] exists.
  bool get hasInstallsCountField => _bit(flags, 4);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Account Themes.
abstract class AccountThemesBase extends TlConstructor {
  /// Predicate Account Themes constructor.
  const AccountThemesBase._() : super._();
}

/// Account Themes Not Modified.
///
/// ID: `f41eb622`.
class AccountThemesNotModified extends AccountThemesBase {
  /// Account Themes Not Modified constructor.
  const AccountThemesNotModified() : super._();

  /// Deserialize.
  factory AccountThemesNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Themes.
///
/// ID: `9a3d8c6d`.
class AccountThemes extends AccountThemesBase {
  /// Account Themes constructor.
  const AccountThemes({
    required this.hash,
    required this.themes,
  }) : super._();

  /// Deserialize.
  factory AccountThemes.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Themes.
  final List<ThemeBase> themes;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Auth Login Token.
abstract class AuthLoginTokenBase extends TlConstructor {
  /// Predicate Auth Login Token constructor.
  const AuthLoginTokenBase._() : super._();
}

/// Auth Login Token.
///
/// ID: `629f1980`.
class AuthLoginToken extends AuthLoginTokenBase {
  /// Auth Login Token constructor.
  const AuthLoginToken({
    required this.expires,
    required this.token,
  }) : super._();

  /// Deserialize.
  factory AuthLoginToken.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Expires.
  final int expires;

  /// Token.
  final Uint8List token;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Login Token Migrate To.
///
/// ID: `068e9916`.
class AuthLoginTokenMigrateTo extends AuthLoginTokenBase {
  /// Auth Login Token Migrate To constructor.
  const AuthLoginTokenMigrateTo({
    required this.dcId,
    required this.token,
  }) : super._();

  /// Deserialize.
  factory AuthLoginTokenMigrateTo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Dc Id.
  final int dcId;

  /// Token.
  final Uint8List token;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Login Token Success.
///
/// ID: `390d5c5e`.
class AuthLoginTokenSuccess extends AuthLoginTokenBase {
  /// Auth Login Token Success constructor.
  const AuthLoginTokenSuccess({
    required this.authorization,
  }) : super._();

  /// Deserialize.
  factory AuthLoginTokenSuccess.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Authorization.
  final AuthAuthorizationBase authorization;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Account Content Settings.
abstract class AccountContentSettingsBase extends TlConstructor {
  /// Predicate Account Content Settings constructor.
  const AccountContentSettingsBase._() : super._();
}

/// Account Content Settings.
///
/// ID: `57e28221`.
class AccountContentSettings extends AccountContentSettingsBase {
  /// Account Content Settings constructor.
  const AccountContentSettings({
    required this.flags,
  }) : super._();

  /// Deserialize.
  factory AccountContentSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// sensitive_enabled: bit
  bool get sensitiveEnabled => _bit(flags, 0);

  /// sensitive_can_change: bit
  bool get sensitiveCanChange => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Inactive Chats.
abstract class MessagesInactiveChatsBase extends TlConstructor {
  /// Predicate Messages Inactive Chats constructor.
  const MessagesInactiveChatsBase._() : super._();
}

/// Messages Inactive Chats.
///
/// ID: `a927fec5`.
class MessagesInactiveChats extends MessagesInactiveChatsBase {
  /// Messages Inactive Chats constructor.
  const MessagesInactiveChats({
    required this.dates,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory MessagesInactiveChats.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Dates.
  final List<int> dates;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Base Theme.
abstract class BaseThemeBase extends TlConstructor {
  /// Predicate Base Theme constructor.
  const BaseThemeBase._() : super._();
}

/// Base Theme Classic.
///
/// ID: `c3a12462`.
class BaseThemeClassic extends BaseThemeBase {
  /// Base Theme Classic constructor.
  const BaseThemeClassic() : super._();

  /// Deserialize.
  factory BaseThemeClassic.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Base Theme Day.
///
/// ID: `fbd81688`.
class BaseThemeDay extends BaseThemeBase {
  /// Base Theme Day constructor.
  const BaseThemeDay() : super._();

  /// Deserialize.
  factory BaseThemeDay.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Base Theme Night.
///
/// ID: `b7b31ea8`.
class BaseThemeNight extends BaseThemeBase {
  /// Base Theme Night constructor.
  const BaseThemeNight() : super._();

  /// Deserialize.
  factory BaseThemeNight.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Base Theme Tinted.
///
/// ID: `6d5f77ee`.
class BaseThemeTinted extends BaseThemeBase {
  /// Base Theme Tinted constructor.
  const BaseThemeTinted() : super._();

  /// Deserialize.
  factory BaseThemeTinted.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Base Theme Arctic.
///
/// ID: `5b11125a`.
class BaseThemeArctic extends BaseThemeBase {
  /// Base Theme Arctic constructor.
  const BaseThemeArctic() : super._();

  /// Deserialize.
  factory BaseThemeArctic.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Theme Settings.
abstract class InputThemeSettingsBase extends TlConstructor {
  /// Predicate Input Theme Settings constructor.
  const InputThemeSettingsBase._() : super._();
}

/// Input Theme Settings.
///
/// ID: `8fde504f`.
class InputThemeSettings extends InputThemeSettingsBase {
  /// Input Theme Settings constructor.
  const InputThemeSettings({
    required this.flags,
    required this.baseTheme,
    required this.accentColor,
    required this.outboxAccentColor,
    required this.messageColors,
    required this.wallpaper,
    required this.wallpaperSettings,
  }) : super._();

  /// Deserialize.
  factory InputThemeSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// message_colors_animated: bit
  bool get messageColorsAnimated => _bit(flags, 2);

  /// Base Theme.
  final BaseThemeBase baseTheme;

  /// Accent Color.
  final int accentColor;

  /// Outbox Accent Color.
  final int? outboxAccentColor;

  /// If [outboxAccentColor] exists.
  bool get hasOutboxAccentColorField => _bit(flags, 3);

  /// Message Colors.
  final List<int>? messageColors;

  /// If [messageColors] exists.
  bool get hasMessageColorsField => _bit(flags, 0);

  /// Wallpaper.
  final InputWallPaperBase? wallpaper;

  /// If [wallpaper] exists.
  bool get hasWallpaperField => _bit(flags, 1);

  /// Wallpaper Settings.
  final WallPaperSettingsBase? wallpaperSettings;

  /// If [wallpaperSettings] exists.
  bool get hasWallpaperSettingsField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Theme Settings.
abstract class ThemeSettingsBase extends TlConstructor {
  /// Predicate Theme Settings constructor.
  const ThemeSettingsBase._() : super._();
}

/// Theme Settings.
///
/// ID: `fa58b6d4`.
class ThemeSettings extends ThemeSettingsBase {
  /// Theme Settings constructor.
  const ThemeSettings({
    required this.flags,
    required this.baseTheme,
    required this.accentColor,
    required this.outboxAccentColor,
    required this.messageColors,
    required this.wallpaper,
  }) : super._();

  /// Deserialize.
  factory ThemeSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// message_colors_animated: bit
  bool get messageColorsAnimated => _bit(flags, 2);

  /// Base Theme.
  final BaseThemeBase baseTheme;

  /// Accent Color.
  final int accentColor;

  /// Outbox Accent Color.
  final int? outboxAccentColor;

  /// If [outboxAccentColor] exists.
  bool get hasOutboxAccentColorField => _bit(flags, 3);

  /// Message Colors.
  final List<int>? messageColors;

  /// If [messageColors] exists.
  bool get hasMessageColorsField => _bit(flags, 0);

  /// Wallpaper.
  final WallPaperBase? wallpaper;

  /// If [wallpaper] exists.
  bool get hasWallpaperField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Web Page Attribute.
abstract class WebPageAttributeBase extends TlConstructor {
  /// Predicate Web Page Attribute constructor.
  const WebPageAttributeBase._() : super._();
}

/// Web Page Attribute Theme.
///
/// ID: `54b56617`.
class WebPageAttributeTheme extends WebPageAttributeBase {
  /// Web Page Attribute Theme constructor.
  const WebPageAttributeTheme({
    required this.flags,
    required this.documents,
    required this.settings,
  }) : super._();

  /// Deserialize.
  factory WebPageAttributeTheme.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Documents.
  final List<DocumentBase>? documents;

  /// If [documents] exists.
  bool get hasDocumentsField => _bit(flags, 0);

  /// Settings.
  final ThemeSettingsBase? settings;

  /// If [settings] exists.
  bool get hasSettingsField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Web Page Attribute Story.
///
/// ID: `2e94c3e7`.
class WebPageAttributeStory extends WebPageAttributeBase {
  /// Web Page Attribute Story constructor.
  const WebPageAttributeStory({
    required this.flags,
    required this.peer,
    required this.id,
    required this.story,
  }) : super._();

  /// Deserialize.
  factory WebPageAttributeStory.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Peer.
  final PeerBase peer;

  /// Id.
  final int id;

  /// Story.
  final StoryItemBase? story;

  /// If [story] exists.
  bool get hasStoryField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Votes List.
abstract class MessagesVotesListBase extends TlConstructor {
  /// Predicate Messages Votes List constructor.
  const MessagesVotesListBase._() : super._();
}

/// Messages Votes List.
///
/// ID: `4899484e`.
class MessagesVotesList extends MessagesVotesListBase {
  /// Messages Votes List constructor.
  const MessagesVotesList({
    required this.flags,
    required this.count,
    required this.votes,
    required this.chats,
    required this.users,
    required this.nextOffset,
  }) : super._();

  /// Deserialize.
  factory MessagesVotesList.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Count.
  final int count;

  /// Votes.
  final List<MessagePeerVoteBase> votes;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Next Offset.
  final String? nextOffset;

  /// If [nextOffset] exists.
  bool get hasNextOffsetField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Bank Card Open Url.
abstract class BankCardOpenUrlBase extends TlConstructor {
  /// Predicate Bank Card Open Url constructor.
  const BankCardOpenUrlBase._() : super._();
}

/// Bank Card Open Url.
///
/// ID: `f568028a`.
class BankCardOpenUrl extends BankCardOpenUrlBase {
  /// Bank Card Open Url constructor.
  const BankCardOpenUrl({
    required this.url,
    required this.name,
  }) : super._();

  /// Deserialize.
  factory BankCardOpenUrl.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Url.
  final String url;

  /// Name.
  final String name;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Payments Bank Card Data.
abstract class PaymentsBankCardDataBase extends TlConstructor {
  /// Predicate Payments Bank Card Data constructor.
  const PaymentsBankCardDataBase._() : super._();
}

/// Payments Bank Card Data.
///
/// ID: `3e24e573`.
class PaymentsBankCardData extends PaymentsBankCardDataBase {
  /// Payments Bank Card Data constructor.
  const PaymentsBankCardData({
    required this.title,
    required this.openUrls,
  }) : super._();

  /// Deserialize.
  factory PaymentsBankCardData.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Title.
  final String title;

  /// Open Urls.
  final List<BankCardOpenUrlBase> openUrls;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Dialog Filter.
abstract class DialogFilterBase extends TlConstructor {
  /// Predicate Dialog Filter constructor.
  const DialogFilterBase._() : super._();
}

/// Dialog Filter.
///
/// ID: `7438f7e8`.
class DialogFilter extends DialogFilterBase {
  /// Dialog Filter constructor.
  const DialogFilter({
    required this.flags,
    required this.id,
    required this.title,
    required this.emoticon,
    required this.pinnedPeers,
    required this.includePeers,
    required this.excludePeers,
  }) : super._();

  /// Deserialize.
  factory DialogFilter.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// contacts: bit
  bool get contacts => _bit(flags, 0);

  /// non_contacts: bit
  bool get nonContacts => _bit(flags, 1);

  /// groups: bit
  bool get groups => _bit(flags, 2);

  /// broadcasts: bit
  bool get broadcasts => _bit(flags, 3);

  /// bots: bit
  bool get bots => _bit(flags, 4);

  /// exclude_muted: bit
  bool get excludeMuted => _bit(flags, 11);

  /// exclude_read: bit
  bool get excludeRead => _bit(flags, 12);

  /// exclude_archived: bit
  bool get excludeArchived => _bit(flags, 13);

  /// Id.
  final int id;

  /// Title.
  final String title;

  /// Emoticon.
  final String? emoticon;

  /// If [emoticon] exists.
  bool get hasEmoticonField => _bit(flags, 25);

  /// Pinned Peers.
  final List<InputPeerBase> pinnedPeers;

  /// Include Peers.
  final List<InputPeerBase> includePeers;

  /// Exclude Peers.
  final List<InputPeerBase> excludePeers;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Dialog Filter Default.
///
/// ID: `363293ae`.
class DialogFilterDefault extends DialogFilterBase {
  /// Dialog Filter Default constructor.
  const DialogFilterDefault() : super._();

  /// Deserialize.
  factory DialogFilterDefault.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Dialog Filter Chatlist.
///
/// ID: `d64a04a8`.
class DialogFilterChatlist extends DialogFilterBase {
  /// Dialog Filter Chatlist constructor.
  const DialogFilterChatlist({
    required this.flags,
    required this.id,
    required this.title,
    required this.emoticon,
    required this.pinnedPeers,
    required this.includePeers,
  }) : super._();

  /// Deserialize.
  factory DialogFilterChatlist.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// has_my_invites: bit
  bool get hasMyInvites => _bit(flags, 26);

  /// Id.
  final int id;

  /// Title.
  final String title;

  /// Emoticon.
  final String? emoticon;

  /// If [emoticon] exists.
  bool get hasEmoticonField => _bit(flags, 25);

  /// Pinned Peers.
  final List<InputPeerBase> pinnedPeers;

  /// Include Peers.
  final List<InputPeerBase> includePeers;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Dialog Filter Suggested.
abstract class DialogFilterSuggestedBase extends TlConstructor {
  /// Predicate Dialog Filter Suggested constructor.
  const DialogFilterSuggestedBase._() : super._();
}

/// Dialog Filter Suggested.
///
/// ID: `77744d4a`.
class DialogFilterSuggested extends DialogFilterSuggestedBase {
  /// Dialog Filter Suggested constructor.
  const DialogFilterSuggested({
    required this.filter,
    required this.description,
  }) : super._();

  /// Deserialize.
  factory DialogFilterSuggested.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Filter.
  final DialogFilterBase filter;

  /// Description.
  final String description;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Stats Date Range Days.
abstract class StatsDateRangeDaysBase extends TlConstructor {
  /// Predicate Stats Date Range Days constructor.
  const StatsDateRangeDaysBase._() : super._();
}

/// Stats Date Range Days.
///
/// ID: `b637edaf`.
class StatsDateRangeDays extends StatsDateRangeDaysBase {
  /// Stats Date Range Days constructor.
  const StatsDateRangeDays({
    required this.minDate,
    required this.maxDate,
  }) : super._();

  /// Deserialize.
  factory StatsDateRangeDays.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Min Date.
  final int minDate;

  /// Max Date.
  final int maxDate;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Stats Abs Value And Prev.
abstract class StatsAbsValueAndPrevBase extends TlConstructor {
  /// Predicate Stats Abs Value And Prev constructor.
  const StatsAbsValueAndPrevBase._() : super._();
}

/// Stats Abs Value And Prev.
///
/// ID: `cb43acde`.
class StatsAbsValueAndPrev extends StatsAbsValueAndPrevBase {
  /// Stats Abs Value And Prev constructor.
  const StatsAbsValueAndPrev({
    required this.current,
    required this.previous,
  }) : super._();

  /// Deserialize.
  factory StatsAbsValueAndPrev.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Current.
  final double current;

  /// Previous.
  final double previous;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Stats Percent Value.
abstract class StatsPercentValueBase extends TlConstructor {
  /// Predicate Stats Percent Value constructor.
  const StatsPercentValueBase._() : super._();
}

/// Stats Percent Value.
///
/// ID: `cbce2fe0`.
class StatsPercentValue extends StatsPercentValueBase {
  /// Stats Percent Value constructor.
  const StatsPercentValue({
    required this.part,
    required this.total,
  }) : super._();

  /// Deserialize.
  factory StatsPercentValue.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Part.
  final double part;

  /// Total.
  final double total;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Stats Graph.
abstract class StatsGraphBase extends TlConstructor {
  /// Predicate Stats Graph constructor.
  const StatsGraphBase._() : super._();
}

/// Stats Graph Async.
///
/// ID: `4a27eb2d`.
class StatsGraphAsync extends StatsGraphBase {
  /// Stats Graph Async constructor.
  const StatsGraphAsync({
    required this.token,
  }) : super._();

  /// Deserialize.
  factory StatsGraphAsync.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Token.
  final String token;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stats Graph Error.
///
/// ID: `bedc9822`.
class StatsGraphError extends StatsGraphBase {
  /// Stats Graph Error constructor.
  const StatsGraphError({
    required this.error,
  }) : super._();

  /// Deserialize.
  factory StatsGraphError.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Error.
  final String error;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stats Graph.
///
/// ID: `8ea464b6`.
class StatsGraph extends StatsGraphBase {
  /// Stats Graph constructor.
  const StatsGraph({
    required this.flags,
    required this.json,
    required this.zoomToken,
  }) : super._();

  /// Deserialize.
  factory StatsGraph.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Json.
  final DataJSONBase json;

  /// Zoom Token.
  final String? zoomToken;

  /// If [zoomToken] exists.
  bool get hasZoomTokenField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Stats Broadcast Stats.
abstract class StatsBroadcastStatsBase extends TlConstructor {
  /// Predicate Stats Broadcast Stats constructor.
  const StatsBroadcastStatsBase._() : super._();
}

/// Stats Broadcast Stats.
///
/// ID: `396ca5fc`.
class StatsBroadcastStats extends StatsBroadcastStatsBase {
  /// Stats Broadcast Stats constructor.
  const StatsBroadcastStats({
    required this.period,
    required this.followers,
    required this.viewsPerPost,
    required this.sharesPerPost,
    required this.reactionsPerPost,
    required this.viewsPerStory,
    required this.sharesPerStory,
    required this.reactionsPerStory,
    required this.enabledNotifications,
    required this.growthGraph,
    required this.followersGraph,
    required this.muteGraph,
    required this.topHoursGraph,
    required this.interactionsGraph,
    required this.ivInteractionsGraph,
    required this.viewsBySourceGraph,
    required this.newFollowersBySourceGraph,
    required this.languagesGraph,
    required this.reactionsByEmotionGraph,
    required this.storyInteractionsGraph,
    required this.storyReactionsByEmotionGraph,
    required this.recentPostsInteractions,
  }) : super._();

  /// Deserialize.
  factory StatsBroadcastStats.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Period.
  final StatsDateRangeDaysBase period;

  /// Followers.
  final StatsAbsValueAndPrevBase followers;

  /// Views Per Post.
  final StatsAbsValueAndPrevBase viewsPerPost;

  /// Shares Per Post.
  final StatsAbsValueAndPrevBase sharesPerPost;

  /// Reactions Per Post.
  final StatsAbsValueAndPrevBase reactionsPerPost;

  /// Views Per Story.
  final StatsAbsValueAndPrevBase viewsPerStory;

  /// Shares Per Story.
  final StatsAbsValueAndPrevBase sharesPerStory;

  /// Reactions Per Story.
  final StatsAbsValueAndPrevBase reactionsPerStory;

  /// Enabled Notifications.
  final StatsPercentValueBase enabledNotifications;

  /// Growth Graph.
  final StatsGraphBase growthGraph;

  /// Followers Graph.
  final StatsGraphBase followersGraph;

  /// Mute Graph.
  final StatsGraphBase muteGraph;

  /// Top Hours Graph.
  final StatsGraphBase topHoursGraph;

  /// Interactions Graph.
  final StatsGraphBase interactionsGraph;

  /// Iv Interactions Graph.
  final StatsGraphBase ivInteractionsGraph;

  /// Views By Source Graph.
  final StatsGraphBase viewsBySourceGraph;

  /// New Followers By Source Graph.
  final StatsGraphBase newFollowersBySourceGraph;

  /// Languages Graph.
  final StatsGraphBase languagesGraph;

  /// Reactions By Emotion Graph.
  final StatsGraphBase reactionsByEmotionGraph;

  /// Story Interactions Graph.
  final StatsGraphBase storyInteractionsGraph;

  /// Story Reactions By Emotion Graph.
  final StatsGraphBase storyReactionsByEmotionGraph;

  /// Recent Posts Interactions.
  final List<PostInteractionCountersBase> recentPostsInteractions;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Help Promo Data.
abstract class HelpPromoDataBase extends TlConstructor {
  /// Predicate Help Promo Data constructor.
  const HelpPromoDataBase._() : super._();
}

/// Help Promo Data Empty.
///
/// ID: `98f6ac75`.
class HelpPromoDataEmpty extends HelpPromoDataBase {
  /// Help Promo Data Empty constructor.
  const HelpPromoDataEmpty({
    required this.expires,
  }) : super._();

  /// Deserialize.
  factory HelpPromoDataEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Expires.
  final int expires;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Promo Data.
///
/// ID: `8c39793f`.
class HelpPromoData extends HelpPromoDataBase {
  /// Help Promo Data constructor.
  const HelpPromoData({
    required this.flags,
    required this.expires,
    required this.peer,
    required this.chats,
    required this.users,
    required this.psaType,
    required this.psaMessage,
  }) : super._();

  /// Deserialize.
  factory HelpPromoData.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// proxy: bit
  bool get proxy => _bit(flags, 0);

  /// Expires.
  final int expires;

  /// Peer.
  final PeerBase peer;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Psa Type.
  final String? psaType;

  /// If [psaType] exists.
  bool get hasPsaTypeField => _bit(flags, 1);

  /// Psa Message.
  final String? psaMessage;

  /// If [psaMessage] exists.
  bool get hasPsaMessageField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Video Size.
abstract class VideoSizeBase extends TlConstructor {
  /// Predicate Video Size constructor.
  const VideoSizeBase._() : super._();
}

/// Video Size.
///
/// ID: `de33b094`.
class VideoSize extends VideoSizeBase {
  /// Video Size constructor.
  const VideoSize({
    required this.flags,
    required this.type,
    required this.w,
    required this.h,
    required this.size,
    required this.videoStartTs,
  }) : super._();

  /// Deserialize.
  factory VideoSize.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Type.
  final String type;

  /// W.
  final int w;

  /// H.
  final int h;

  /// Size.
  final int size;

  /// Video Start Ts.
  final double? videoStartTs;

  /// If [videoStartTs] exists.
  bool get hasVideoStartTsField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Video Size Emoji Markup.
///
/// ID: `f85c413c`.
class VideoSizeEmojiMarkup extends VideoSizeBase {
  /// Video Size Emoji Markup constructor.
  const VideoSizeEmojiMarkup({
    required this.emojiId,
    required this.backgroundColors,
  }) : super._();

  /// Deserialize.
  factory VideoSizeEmojiMarkup.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Emoji Id.
  final int emojiId;

  /// Background Colors.
  final List<int> backgroundColors;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Video Size Sticker Markup.
///
/// ID: `0da082fe`.
class VideoSizeStickerMarkup extends VideoSizeBase {
  /// Video Size Sticker Markup constructor.
  const VideoSizeStickerMarkup({
    required this.stickerset,
    required this.stickerId,
    required this.backgroundColors,
  }) : super._();

  /// Deserialize.
  factory VideoSizeStickerMarkup.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Stickerset.
  final InputStickerSetBase stickerset;

  /// Sticker Id.
  final int stickerId;

  /// Background Colors.
  final List<int> backgroundColors;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Stats Group Top Poster.
abstract class StatsGroupTopPosterBase extends TlConstructor {
  /// Predicate Stats Group Top Poster constructor.
  const StatsGroupTopPosterBase._() : super._();
}

/// Stats Group Top Poster.
///
/// ID: `9d04af9b`.
class StatsGroupTopPoster extends StatsGroupTopPosterBase {
  /// Stats Group Top Poster constructor.
  const StatsGroupTopPoster({
    required this.userId,
    required this.messages,
    required this.avgChars,
  }) : super._();

  /// Deserialize.
  factory StatsGroupTopPoster.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final int userId;

  /// Messages.
  final int messages;

  /// Avg Chars.
  final int avgChars;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Stats Group Top Admin.
abstract class StatsGroupTopAdminBase extends TlConstructor {
  /// Predicate Stats Group Top Admin constructor.
  const StatsGroupTopAdminBase._() : super._();
}

/// Stats Group Top Admin.
///
/// ID: `d7584c87`.
class StatsGroupTopAdmin extends StatsGroupTopAdminBase {
  /// Stats Group Top Admin constructor.
  const StatsGroupTopAdmin({
    required this.userId,
    required this.deleted,
    required this.kicked,
    required this.banned,
  }) : super._();

  /// Deserialize.
  factory StatsGroupTopAdmin.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final int userId;

  /// Deleted.
  final int deleted;

  /// Kicked.
  final int kicked;

  /// Banned.
  final int banned;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Stats Group Top Inviter.
abstract class StatsGroupTopInviterBase extends TlConstructor {
  /// Predicate Stats Group Top Inviter constructor.
  const StatsGroupTopInviterBase._() : super._();
}

/// Stats Group Top Inviter.
///
/// ID: `535f779d`.
class StatsGroupTopInviter extends StatsGroupTopInviterBase {
  /// Stats Group Top Inviter constructor.
  const StatsGroupTopInviter({
    required this.userId,
    required this.invitations,
  }) : super._();

  /// Deserialize.
  factory StatsGroupTopInviter.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final int userId;

  /// Invitations.
  final int invitations;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Stats Megagroup Stats.
abstract class StatsMegagroupStatsBase extends TlConstructor {
  /// Predicate Stats Megagroup Stats constructor.
  const StatsMegagroupStatsBase._() : super._();
}

/// Stats Megagroup Stats.
///
/// ID: `ef7ff916`.
class StatsMegagroupStats extends StatsMegagroupStatsBase {
  /// Stats Megagroup Stats constructor.
  const StatsMegagroupStats({
    required this.period,
    required this.members,
    required this.messages,
    required this.viewers,
    required this.posters,
    required this.growthGraph,
    required this.membersGraph,
    required this.newMembersBySourceGraph,
    required this.languagesGraph,
    required this.messagesGraph,
    required this.actionsGraph,
    required this.topHoursGraph,
    required this.weekdaysGraph,
    required this.topPosters,
    required this.topAdmins,
    required this.topInviters,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory StatsMegagroupStats.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Period.
  final StatsDateRangeDaysBase period;

  /// Members.
  final StatsAbsValueAndPrevBase members;

  /// Messages.
  final StatsAbsValueAndPrevBase messages;

  /// Viewers.
  final StatsAbsValueAndPrevBase viewers;

  /// Posters.
  final StatsAbsValueAndPrevBase posters;

  /// Growth Graph.
  final StatsGraphBase growthGraph;

  /// Members Graph.
  final StatsGraphBase membersGraph;

  /// New Members By Source Graph.
  final StatsGraphBase newMembersBySourceGraph;

  /// Languages Graph.
  final StatsGraphBase languagesGraph;

  /// Messages Graph.
  final StatsGraphBase messagesGraph;

  /// Actions Graph.
  final StatsGraphBase actionsGraph;

  /// Top Hours Graph.
  final StatsGraphBase topHoursGraph;

  /// Weekdays Graph.
  final StatsGraphBase weekdaysGraph;

  /// Top Posters.
  final List<StatsGroupTopPosterBase> topPosters;

  /// Top Admins.
  final List<StatsGroupTopAdminBase> topAdmins;

  /// Top Inviters.
  final List<StatsGroupTopInviterBase> topInviters;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Global Privacy Settings.
abstract class GlobalPrivacySettingsBase extends TlConstructor {
  /// Predicate Global Privacy Settings constructor.
  const GlobalPrivacySettingsBase._() : super._();
}

/// Global Privacy Settings.
///
/// ID: `734c4ccb`.
class GlobalPrivacySettings extends GlobalPrivacySettingsBase {
  /// Global Privacy Settings constructor.
  const GlobalPrivacySettings({
    required this.flags,
  }) : super._();

  /// Deserialize.
  factory GlobalPrivacySettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// archive_and_mute_new_noncontact_peers: bit
  bool get archiveAndMuteNewNoncontactPeers => _bit(flags, 0);

  /// keep_archived_unmuted: bit
  bool get keepArchivedUnmuted => _bit(flags, 1);

  /// keep_archived_folders: bit
  bool get keepArchivedFolders => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Help Country Code.
abstract class HelpCountryCodeBase extends TlConstructor {
  /// Predicate Help Country Code constructor.
  const HelpCountryCodeBase._() : super._();
}

/// Help Country Code.
///
/// ID: `4203c5ef`.
class HelpCountryCode extends HelpCountryCodeBase {
  /// Help Country Code constructor.
  const HelpCountryCode({
    required this.flags,
    required this.countryCode,
    required this.prefixes,
    required this.patterns,
  }) : super._();

  /// Deserialize.
  factory HelpCountryCode.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Country Code.
  final String countryCode;

  /// Prefixes.
  final List<String>? prefixes;

  /// If [prefixes] exists.
  bool get hasPrefixesField => _bit(flags, 0);

  /// Patterns.
  final List<String>? patterns;

  /// If [patterns] exists.
  bool get hasPatternsField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Help Country.
abstract class HelpCountryBase extends TlConstructor {
  /// Predicate Help Country constructor.
  const HelpCountryBase._() : super._();
}

/// Help Country.
///
/// ID: `c3878e23`.
class HelpCountry extends HelpCountryBase {
  /// Help Country constructor.
  const HelpCountry({
    required this.flags,
    required this.iso2,
    required this.defaultName,
    required this.name,
    required this.countryCodes,
  }) : super._();

  /// Deserialize.
  factory HelpCountry.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// hidden: bit
  bool get hidden => _bit(flags, 0);

  /// Iso2.
  final String iso2;

  /// Default Name.
  final String defaultName;

  /// Name.
  final String? name;

  /// If [name] exists.
  bool get hasNameField => _bit(flags, 1);

  /// Country Codes.
  final List<HelpCountryCodeBase> countryCodes;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Help Countries List.
abstract class HelpCountriesListBase extends TlConstructor {
  /// Predicate Help Countries List constructor.
  const HelpCountriesListBase._() : super._();
}

/// Help Countries List Not Modified.
///
/// ID: `93cc1f32`.
class HelpCountriesListNotModified extends HelpCountriesListBase {
  /// Help Countries List Not Modified constructor.
  const HelpCountriesListNotModified() : super._();

  /// Deserialize.
  factory HelpCountriesListNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Countries List.
///
/// ID: `87d0759e`.
class HelpCountriesList extends HelpCountriesListBase {
  /// Help Countries List constructor.
  const HelpCountriesList({
    required this.countries,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory HelpCountriesList.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Countries.
  final List<HelpCountryBase> countries;

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Message Views.
abstract class MessageViewsBase extends TlConstructor {
  /// Predicate Message Views constructor.
  const MessageViewsBase._() : super._();
}

/// Message Views.
///
/// ID: `455b853d`.
class MessageViews extends MessageViewsBase {
  /// Message Views constructor.
  const MessageViews({
    required this.flags,
    required this.views,
    required this.forwards,
    required this.replies,
  }) : super._();

  /// Deserialize.
  factory MessageViews.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Views.
  final int? views;

  /// If [views] exists.
  bool get hasViewsField => _bit(flags, 0);

  /// Forwards.
  final int? forwards;

  /// If [forwards] exists.
  bool get hasForwardsField => _bit(flags, 1);

  /// Replies.
  final MessageRepliesBase? replies;

  /// If [replies] exists.
  bool get hasRepliesField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Message Views.
abstract class MessagesMessageViewsBase extends TlConstructor {
  /// Predicate Messages Message Views constructor.
  const MessagesMessageViewsBase._() : super._();
}

/// Messages Message Views.
///
/// ID: `b6c4f543`.
class MessagesMessageViews extends MessagesMessageViewsBase {
  /// Messages Message Views constructor.
  const MessagesMessageViews({
    required this.views,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory MessagesMessageViews.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Views.
  final List<MessageViewsBase> views;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Discussion Message.
abstract class MessagesDiscussionMessageBase extends TlConstructor {
  /// Predicate Messages Discussion Message constructor.
  const MessagesDiscussionMessageBase._() : super._();
}

/// Messages Discussion Message.
///
/// ID: `a6341782`.
class MessagesDiscussionMessage extends MessagesDiscussionMessageBase {
  /// Messages Discussion Message constructor.
  const MessagesDiscussionMessage({
    required this.flags,
    required this.messages,
    required this.maxId,
    required this.readInboxMaxId,
    required this.readOutboxMaxId,
    required this.unreadCount,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory MessagesDiscussionMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Messages.
  final List<MessageBase> messages;

  /// Max Id.
  final int? maxId;

  /// If [maxId] exists.
  bool get hasMaxIdField => _bit(flags, 0);

  /// Read Inbox Max Id.
  final int? readInboxMaxId;

  /// If [readInboxMaxId] exists.
  bool get hasReadInboxMaxIdField => _bit(flags, 1);

  /// Read Outbox Max Id.
  final int? readOutboxMaxId;

  /// If [readOutboxMaxId] exists.
  bool get hasReadOutboxMaxIdField => _bit(flags, 2);

  /// Unread Count.
  final int unreadCount;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Message Reply Header.
abstract class MessageReplyHeaderBase extends TlConstructor {
  /// Predicate Message Reply Header constructor.
  const MessageReplyHeaderBase._() : super._();
}

/// Message Reply Header.
///
/// ID: `afbc09db`.
class MessageReplyHeader extends MessageReplyHeaderBase {
  /// Message Reply Header constructor.
  const MessageReplyHeader({
    required this.flags,
    required this.replyToMsgId,
    required this.replyToPeerId,
    required this.replyFrom,
    required this.replyMedia,
    required this.replyToTopId,
    required this.quoteText,
    required this.quoteEntities,
    required this.quoteOffset,
  }) : super._();

  /// Deserialize.
  factory MessageReplyHeader.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// reply_to_scheduled: bit
  bool get replyToScheduled => _bit(flags, 2);

  /// forum_topic: bit
  bool get forumTopic => _bit(flags, 3);

  /// quote: bit
  bool get quote => _bit(flags, 9);

  /// Reply To Msg Id.
  final int? replyToMsgId;

  /// If [replyToMsgId] exists.
  bool get hasReplyToMsgIdField => _bit(flags, 4);

  /// Reply To Peer Id.
  final PeerBase? replyToPeerId;

  /// If [replyToPeerId] exists.
  bool get hasReplyToPeerIdField => _bit(flags, 0);

  /// Reply From.
  final MessageFwdHeaderBase? replyFrom;

  /// If [replyFrom] exists.
  bool get hasReplyFromField => _bit(flags, 5);

  /// Reply Media.
  final MessageMediaBase? replyMedia;

  /// If [replyMedia] exists.
  bool get hasReplyMediaField => _bit(flags, 8);

  /// Reply To Top Id.
  final int? replyToTopId;

  /// If [replyToTopId] exists.
  bool get hasReplyToTopIdField => _bit(flags, 1);

  /// Quote Text.
  final String? quoteText;

  /// If [quoteText] exists.
  bool get hasQuoteTextField => _bit(flags, 6);

  /// Quote Entities.
  final List<MessageEntityBase>? quoteEntities;

  /// If [quoteEntities] exists.
  bool get hasQuoteEntitiesField => _bit(flags, 7);

  /// Quote Offset.
  final int? quoteOffset;

  /// If [quoteOffset] exists.
  bool get hasQuoteOffsetField => _bit(flags, 10);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Reply Story Header.
///
/// ID: `9c98bfc1`.
class MessageReplyStoryHeader extends MessageReplyHeaderBase {
  /// Message Reply Story Header constructor.
  const MessageReplyStoryHeader({
    required this.userId,
    required this.storyId,
  }) : super._();

  /// Deserialize.
  factory MessageReplyStoryHeader.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final int userId;

  /// Story Id.
  final int storyId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Message Replies.
abstract class MessageRepliesBase extends TlConstructor {
  /// Predicate Message Replies constructor.
  const MessageRepliesBase._() : super._();
}

/// Message Replies.
///
/// ID: `83d60fc2`.
class MessageReplies extends MessageRepliesBase {
  /// Message Replies constructor.
  const MessageReplies({
    required this.flags,
    required this.replies,
    required this.repliesPts,
    required this.recentRepliers,
    required this.channelId,
    required this.maxId,
    required this.readMaxId,
  }) : super._();

  /// Deserialize.
  factory MessageReplies.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// comments: bit
  bool get comments => _bit(flags, 0);

  /// Replies.
  final int replies;

  /// Replies Pts.
  final int repliesPts;

  /// Recent Repliers.
  final List<PeerBase>? recentRepliers;

  /// If [recentRepliers] exists.
  bool get hasRecentRepliersField => _bit(flags, 1);

  /// Channel Id.
  final int? channelId;

  /// If [channelId] exists.
  bool get hasChannelIdField => _bit(flags, 0);

  /// Max Id.
  final int? maxId;

  /// If [maxId] exists.
  bool get hasMaxIdField => _bit(flags, 2);

  /// Read Max Id.
  final int? readMaxId;

  /// If [readMaxId] exists.
  bool get hasReadMaxIdField => _bit(flags, 3);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Peer Blocked.
abstract class PeerBlockedBase extends TlConstructor {
  /// Predicate Peer Blocked constructor.
  const PeerBlockedBase._() : super._();
}

/// Peer Blocked.
///
/// ID: `e8fd8014`.
class PeerBlocked extends PeerBlockedBase {
  /// Peer Blocked constructor.
  const PeerBlocked({
    required this.peerId,
    required this.date,
  }) : super._();

  /// Deserialize.
  factory PeerBlocked.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer Id.
  final PeerBase peerId;

  /// Date.
  final int date;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Stats Message Stats.
abstract class StatsMessageStatsBase extends TlConstructor {
  /// Predicate Stats Message Stats constructor.
  const StatsMessageStatsBase._() : super._();
}

/// Stats Message Stats.
///
/// ID: `7fe91c14`.
class StatsMessageStats extends StatsMessageStatsBase {
  /// Stats Message Stats constructor.
  const StatsMessageStats({
    required this.viewsGraph,
    required this.reactionsByEmotionGraph,
  }) : super._();

  /// Deserialize.
  factory StatsMessageStats.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Views Graph.
  final StatsGraphBase viewsGraph;

  /// Reactions By Emotion Graph.
  final StatsGraphBase reactionsByEmotionGraph;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Group Call.
abstract class GroupCallBase extends TlConstructor {
  /// Predicate Group Call constructor.
  const GroupCallBase._() : super._();
}

/// Group Call Discarded.
///
/// ID: `7780bcb4`.
class GroupCallDiscarded extends GroupCallBase {
  /// Group Call Discarded constructor.
  const GroupCallDiscarded({
    required this.id,
    required this.accessHash,
    required this.duration,
  }) : super._();

  /// Deserialize.
  factory GroupCallDiscarded.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Duration.
  final int duration;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Group Call.
///
/// ID: `d597650c`.
class GroupCall extends GroupCallBase {
  /// Group Call constructor.
  const GroupCall({
    required this.flags,
    required this.id,
    required this.accessHash,
    required this.participantsCount,
    required this.title,
    required this.streamDcId,
    required this.recordStartDate,
    required this.scheduleDate,
    required this.unmutedVideoCount,
    required this.unmutedVideoLimit,
    required this.version,
  }) : super._();

  /// Deserialize.
  factory GroupCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// join_muted: bit
  bool get joinMuted => _bit(flags, 1);

  /// can_change_join_muted: bit
  bool get canChangeJoinMuted => _bit(flags, 2);

  /// join_date_asc: bit
  bool get joinDateAsc => _bit(flags, 6);

  /// schedule_start_subscribed: bit
  bool get scheduleStartSubscribed => _bit(flags, 8);

  /// can_start_video: bit
  bool get canStartVideo => _bit(flags, 9);

  /// record_video_active: bit
  bool get recordVideoActive => _bit(flags, 11);

  /// rtmp_stream: bit
  bool get rtmpStream => _bit(flags, 12);

  /// listeners_hidden: bit
  bool get listenersHidden => _bit(flags, 13);

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Participants Count.
  final int participantsCount;

  /// Title.
  final String? title;

  /// If [title] exists.
  bool get hasTitleField => _bit(flags, 3);

  /// Stream Dc Id.
  final int? streamDcId;

  /// If [streamDcId] exists.
  bool get hasStreamDcIdField => _bit(flags, 4);

  /// Record Start Date.
  final int? recordStartDate;

  /// If [recordStartDate] exists.
  bool get hasRecordStartDateField => _bit(flags, 5);

  /// Schedule Date.
  final int? scheduleDate;

  /// If [scheduleDate] exists.
  bool get hasScheduleDateField => _bit(flags, 7);

  /// Unmuted Video Count.
  final int? unmutedVideoCount;

  /// If [unmutedVideoCount] exists.
  bool get hasUnmutedVideoCountField => _bit(flags, 10);

  /// Unmuted Video Limit.
  final int unmutedVideoLimit;

  /// Version.
  final int version;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Group Call.
abstract class InputGroupCallBase extends TlConstructor {
  /// Predicate Input Group Call constructor.
  const InputGroupCallBase._() : super._();
}

/// Input Group Call.
///
/// ID: `d8aa840f`.
class InputGroupCall extends InputGroupCallBase {
  /// Input Group Call constructor.
  const InputGroupCall({
    required this.id,
    required this.accessHash,
  }) : super._();

  /// Deserialize.
  factory InputGroupCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Group Call Participant.
abstract class GroupCallParticipantBase extends TlConstructor {
  /// Predicate Group Call Participant constructor.
  const GroupCallParticipantBase._() : super._();
}

/// Group Call Participant.
///
/// ID: `eba636fe`.
class GroupCallParticipant extends GroupCallParticipantBase {
  /// Group Call Participant constructor.
  const GroupCallParticipant({
    required this.flags,
    required this.peer,
    required this.date,
    required this.activeDate,
    required this.source,
    required this.volume,
    required this.about,
    required this.raiseHandRating,
    required this.video,
    required this.presentation,
  }) : super._();

  /// Deserialize.
  factory GroupCallParticipant.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// muted: bit
  bool get muted => _bit(flags, 0);

  /// left: bit
  bool get left => _bit(flags, 1);

  /// can_self_unmute: bit
  bool get canSelfUnmute => _bit(flags, 2);

  /// just_joined: bit
  bool get justJoined => _bit(flags, 4);

  /// versioned: bit
  bool get versioned => _bit(flags, 5);

  /// min: bit
  bool get min => _bit(flags, 8);

  /// muted_by_you: bit
  bool get mutedByYou => _bit(flags, 9);

  /// volume_by_admin: bit
  bool get volumeByAdmin => _bit(flags, 10);

  /// self: bit
  bool get self => _bit(flags, 12);

  /// video_joined: bit
  bool get videoJoined => _bit(flags, 15);

  /// Peer.
  final PeerBase peer;

  /// Date.
  final int date;

  /// Active Date.
  final int? activeDate;

  /// If [activeDate] exists.
  bool get hasActiveDateField => _bit(flags, 3);

  /// Source.
  final int source;

  /// Volume.
  final int? volume;

  /// If [volume] exists.
  bool get hasVolumeField => _bit(flags, 7);

  /// About.
  final String? about;

  /// If [about] exists.
  bool get hasAboutField => _bit(flags, 11);

  /// Raise Hand Rating.
  final int? raiseHandRating;

  /// If [raiseHandRating] exists.
  bool get hasRaiseHandRatingField => _bit(flags, 13);

  /// Video.
  final GroupCallParticipantVideoBase? video;

  /// If [video] exists.
  bool get hasVideoField => _bit(flags, 6);

  /// Presentation.
  final GroupCallParticipantVideoBase? presentation;

  /// If [presentation] exists.
  bool get hasPresentationField => _bit(flags, 14);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Phone Group Call.
abstract class PhoneGroupCallBase extends TlConstructor {
  /// Predicate Phone Group Call constructor.
  const PhoneGroupCallBase._() : super._();
}

/// Phone Group Call.
///
/// ID: `9e727aad`.
class PhoneGroupCall extends PhoneGroupCallBase {
  /// Phone Group Call constructor.
  const PhoneGroupCall({
    required this.call,
    required this.participants,
    required this.participantsNextOffset,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory PhoneGroupCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Call.
  final GroupCallBase call;

  /// Participants.
  final List<GroupCallParticipantBase> participants;

  /// Participants Next Offset.
  final String participantsNextOffset;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Phone Group Participants.
abstract class PhoneGroupParticipantsBase extends TlConstructor {
  /// Predicate Phone Group Participants constructor.
  const PhoneGroupParticipantsBase._() : super._();
}

/// Phone Group Participants.
///
/// ID: `f47751b6`.
class PhoneGroupParticipants extends PhoneGroupParticipantsBase {
  /// Phone Group Participants constructor.
  const PhoneGroupParticipants({
    required this.count,
    required this.participants,
    required this.nextOffset,
    required this.chats,
    required this.users,
    required this.version,
  }) : super._();

  /// Deserialize.
  factory PhoneGroupParticipants.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Count.
  final int count;

  /// Participants.
  final List<GroupCallParticipantBase> participants;

  /// Next Offset.
  final String nextOffset;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Version.
  final int version;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Inline Query Peer Type.
abstract class InlineQueryPeerTypeBase extends TlConstructor {
  /// Predicate Inline Query Peer Type constructor.
  const InlineQueryPeerTypeBase._() : super._();
}

/// Inline Query Peer Type Same Bot P M.
///
/// ID: `3081ed9d`.
class InlineQueryPeerTypeSameBotPM extends InlineQueryPeerTypeBase {
  /// Inline Query Peer Type Same Bot P M constructor.
  const InlineQueryPeerTypeSameBotPM() : super._();

  /// Deserialize.
  factory InlineQueryPeerTypeSameBotPM.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Inline Query Peer Type P M.
///
/// ID: `833c0fac`.
class InlineQueryPeerTypePM extends InlineQueryPeerTypeBase {
  /// Inline Query Peer Type P M constructor.
  const InlineQueryPeerTypePM() : super._();

  /// Deserialize.
  factory InlineQueryPeerTypePM.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Inline Query Peer Type Chat.
///
/// ID: `d766c50a`.
class InlineQueryPeerTypeChat extends InlineQueryPeerTypeBase {
  /// Inline Query Peer Type Chat constructor.
  const InlineQueryPeerTypeChat() : super._();

  /// Deserialize.
  factory InlineQueryPeerTypeChat.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Inline Query Peer Type Megagroup.
///
/// ID: `5ec4be43`.
class InlineQueryPeerTypeMegagroup extends InlineQueryPeerTypeBase {
  /// Inline Query Peer Type Megagroup constructor.
  const InlineQueryPeerTypeMegagroup() : super._();

  /// Deserialize.
  factory InlineQueryPeerTypeMegagroup.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Inline Query Peer Type Broadcast.
///
/// ID: `6334ee9a`.
class InlineQueryPeerTypeBroadcast extends InlineQueryPeerTypeBase {
  /// Inline Query Peer Type Broadcast constructor.
  const InlineQueryPeerTypeBroadcast() : super._();

  /// Deserialize.
  factory InlineQueryPeerTypeBroadcast.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Inline Query Peer Type Bot P M.
///
/// ID: `0e3b2d0c`.
class InlineQueryPeerTypeBotPM extends InlineQueryPeerTypeBase {
  /// Inline Query Peer Type Bot P M constructor.
  const InlineQueryPeerTypeBotPM() : super._();

  /// Deserialize.
  factory InlineQueryPeerTypeBotPM.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages History Import.
abstract class MessagesHistoryImportBase extends TlConstructor {
  /// Predicate Messages History Import constructor.
  const MessagesHistoryImportBase._() : super._();
}

/// Messages History Import.
///
/// ID: `1662af0b`.
class MessagesHistoryImport extends MessagesHistoryImportBase {
  /// Messages History Import constructor.
  const MessagesHistoryImport({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory MessagesHistoryImport.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages History Import Parsed.
abstract class MessagesHistoryImportParsedBase extends TlConstructor {
  /// Predicate Messages History Import Parsed constructor.
  const MessagesHistoryImportParsedBase._() : super._();
}

/// Messages History Import Parsed.
///
/// ID: `5e0fb7b9`.
class MessagesHistoryImportParsed extends MessagesHistoryImportParsedBase {
  /// Messages History Import Parsed constructor.
  const MessagesHistoryImportParsed({
    required this.flags,
    required this.title,
  }) : super._();

  /// Deserialize.
  factory MessagesHistoryImportParsed.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// pm: bit
  bool get pm => _bit(flags, 0);

  /// group: bit
  bool get group => _bit(flags, 1);

  /// Title.
  final String? title;

  /// If [title] exists.
  bool get hasTitleField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Affected Found Messages.
abstract class MessagesAffectedFoundMessagesBase extends TlConstructor {
  /// Predicate Messages Affected Found Messages constructor.
  const MessagesAffectedFoundMessagesBase._() : super._();
}

/// Messages Affected Found Messages.
///
/// ID: `ef8d3e6c`.
class MessagesAffectedFoundMessages extends MessagesAffectedFoundMessagesBase {
  /// Messages Affected Found Messages constructor.
  const MessagesAffectedFoundMessages({
    required this.pts,
    required this.ptsCount,
    required this.offset,
    required this.messages,
  }) : super._();

  /// Deserialize.
  factory MessagesAffectedFoundMessages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Pts.
  final int pts;

  /// Pts Count.
  final int ptsCount;

  /// Offset.
  final int offset;

  /// Messages.
  final List<int> messages;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Chat Invite Importer.
abstract class ChatInviteImporterBase extends TlConstructor {
  /// Predicate Chat Invite Importer constructor.
  const ChatInviteImporterBase._() : super._();
}

/// Chat Invite Importer.
///
/// ID: `8c5adfd9`.
class ChatInviteImporter extends ChatInviteImporterBase {
  /// Chat Invite Importer constructor.
  const ChatInviteImporter({
    required this.flags,
    required this.userId,
    required this.date,
    required this.about,
    required this.approvedBy,
  }) : super._();

  /// Deserialize.
  factory ChatInviteImporter.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// requested: bit
  bool get requested => _bit(flags, 0);

  /// via_chatlist: bit
  bool get viaChatlist => _bit(flags, 3);

  /// User Id.
  final int userId;

  /// Date.
  final int date;

  /// About.
  final String? about;

  /// If [about] exists.
  bool get hasAboutField => _bit(flags, 2);

  /// Approved By.
  final int? approvedBy;

  /// If [approvedBy] exists.
  bool get hasApprovedByField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Exported Chat Invites.
abstract class MessagesExportedChatInvitesBase extends TlConstructor {
  /// Predicate Messages Exported Chat Invites constructor.
  const MessagesExportedChatInvitesBase._() : super._();
}

/// Messages Exported Chat Invites.
///
/// ID: `bdc62dcc`.
class MessagesExportedChatInvites extends MessagesExportedChatInvitesBase {
  /// Messages Exported Chat Invites constructor.
  const MessagesExportedChatInvites({
    required this.count,
    required this.invites,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory MessagesExportedChatInvites.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Count.
  final int count;

  /// Invites.
  final List<ExportedChatInviteBase> invites;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Exported Chat Invite.
abstract class MessagesExportedChatInviteBase extends TlConstructor {
  /// Predicate Messages Exported Chat Invite constructor.
  const MessagesExportedChatInviteBase._() : super._();
}

/// Messages Exported Chat Invite.
///
/// ID: `1871be50`.
class MessagesExportedChatInvite extends MessagesExportedChatInviteBase {
  /// Messages Exported Chat Invite constructor.
  const MessagesExportedChatInvite({
    required this.invite,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory MessagesExportedChatInvite.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Invite.
  final ExportedChatInviteBase invite;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Exported Chat Invite Replaced.
///
/// ID: `222600ef`.
class MessagesExportedChatInviteReplaced
    extends MessagesExportedChatInviteBase {
  /// Messages Exported Chat Invite Replaced constructor.
  const MessagesExportedChatInviteReplaced({
    required this.invite,
    required this.newInvite,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory MessagesExportedChatInviteReplaced.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Invite.
  final ExportedChatInviteBase invite;

  /// New Invite.
  final ExportedChatInviteBase newInvite;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Chat Invite Importers.
abstract class MessagesChatInviteImportersBase extends TlConstructor {
  /// Predicate Messages Chat Invite Importers constructor.
  const MessagesChatInviteImportersBase._() : super._();
}

/// Messages Chat Invite Importers.
///
/// ID: `81b6b00a`.
class MessagesChatInviteImporters extends MessagesChatInviteImportersBase {
  /// Messages Chat Invite Importers constructor.
  const MessagesChatInviteImporters({
    required this.count,
    required this.importers,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory MessagesChatInviteImporters.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Count.
  final int count;

  /// Importers.
  final List<ChatInviteImporterBase> importers;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Chat Admin With Invites.
abstract class ChatAdminWithInvitesBase extends TlConstructor {
  /// Predicate Chat Admin With Invites constructor.
  const ChatAdminWithInvitesBase._() : super._();
}

/// Chat Admin With Invites.
///
/// ID: `f2ecef23`.
class ChatAdminWithInvites extends ChatAdminWithInvitesBase {
  /// Chat Admin With Invites constructor.
  const ChatAdminWithInvites({
    required this.adminId,
    required this.invitesCount,
    required this.revokedInvitesCount,
  }) : super._();

  /// Deserialize.
  factory ChatAdminWithInvites.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Admin Id.
  final int adminId;

  /// Invites Count.
  final int invitesCount;

  /// Revoked Invites Count.
  final int revokedInvitesCount;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Chat Admins With Invites.
abstract class MessagesChatAdminsWithInvitesBase extends TlConstructor {
  /// Predicate Messages Chat Admins With Invites constructor.
  const MessagesChatAdminsWithInvitesBase._() : super._();
}

/// Messages Chat Admins With Invites.
///
/// ID: `b69b72d7`.
class MessagesChatAdminsWithInvites extends MessagesChatAdminsWithInvitesBase {
  /// Messages Chat Admins With Invites constructor.
  const MessagesChatAdminsWithInvites({
    required this.admins,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory MessagesChatAdminsWithInvites.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Admins.
  final List<ChatAdminWithInvitesBase> admins;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Checked History Import Peer.
abstract class MessagesCheckedHistoryImportPeerBase extends TlConstructor {
  /// Predicate Messages Checked History Import Peer constructor.
  const MessagesCheckedHistoryImportPeerBase._() : super._();
}

/// Messages Checked History Import Peer.
///
/// ID: `a24de717`.
class MessagesCheckedHistoryImportPeer
    extends MessagesCheckedHistoryImportPeerBase {
  /// Messages Checked History Import Peer constructor.
  const MessagesCheckedHistoryImportPeer({
    required this.confirmText,
  }) : super._();

  /// Deserialize.
  factory MessagesCheckedHistoryImportPeer.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Confirm Text.
  final String confirmText;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Phone Join As Peers.
abstract class PhoneJoinAsPeersBase extends TlConstructor {
  /// Predicate Phone Join As Peers constructor.
  const PhoneJoinAsPeersBase._() : super._();
}

/// Phone Join As Peers.
///
/// ID: `afe5623f`.
class PhoneJoinAsPeers extends PhoneJoinAsPeersBase {
  /// Phone Join As Peers constructor.
  const PhoneJoinAsPeers({
    required this.peers,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory PhoneJoinAsPeers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peers.
  final List<PeerBase> peers;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Phone Exported Group Call Invite.
abstract class PhoneExportedGroupCallInviteBase extends TlConstructor {
  /// Predicate Phone Exported Group Call Invite constructor.
  const PhoneExportedGroupCallInviteBase._() : super._();
}

/// Phone Exported Group Call Invite.
///
/// ID: `204bd158`.
class PhoneExportedGroupCallInvite extends PhoneExportedGroupCallInviteBase {
  /// Phone Exported Group Call Invite constructor.
  const PhoneExportedGroupCallInvite({
    required this.link,
  }) : super._();

  /// Deserialize.
  factory PhoneExportedGroupCallInvite.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Link.
  final String link;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Group Call Participant Video Source Group.
abstract class GroupCallParticipantVideoSourceGroupBase extends TlConstructor {
  /// Predicate Group Call Participant Video Source Group constructor.
  const GroupCallParticipantVideoSourceGroupBase._() : super._();
}

/// Group Call Participant Video Source Group.
///
/// ID: `dcb118b7`.
class GroupCallParticipantVideoSourceGroup
    extends GroupCallParticipantVideoSourceGroupBase {
  /// Group Call Participant Video Source Group constructor.
  const GroupCallParticipantVideoSourceGroup({
    required this.semantics,
    required this.sources,
  }) : super._();

  /// Deserialize.
  factory GroupCallParticipantVideoSourceGroup.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Semantics.
  final String semantics;

  /// Sources.
  final List<int> sources;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Group Call Participant Video.
abstract class GroupCallParticipantVideoBase extends TlConstructor {
  /// Predicate Group Call Participant Video constructor.
  const GroupCallParticipantVideoBase._() : super._();
}

/// Group Call Participant Video.
///
/// ID: `67753ac8`.
class GroupCallParticipantVideo extends GroupCallParticipantVideoBase {
  /// Group Call Participant Video constructor.
  const GroupCallParticipantVideo({
    required this.flags,
    required this.endpoint,
    required this.sourceGroups,
    required this.audioSource,
  }) : super._();

  /// Deserialize.
  factory GroupCallParticipantVideo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// paused: bit
  bool get paused => _bit(flags, 0);

  /// Endpoint.
  final String endpoint;

  /// Source Groups.
  final List<GroupCallParticipantVideoSourceGroupBase> sourceGroups;

  /// Audio Source.
  final int? audioSource;

  /// If [audioSource] exists.
  bool get hasAudioSourceField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Stickers Suggested Short Name.
abstract class StickersSuggestedShortNameBase extends TlConstructor {
  /// Predicate Stickers Suggested Short Name constructor.
  const StickersSuggestedShortNameBase._() : super._();
}

/// Stickers Suggested Short Name.
///
/// ID: `85fea03f`.
class StickersSuggestedShortName extends StickersSuggestedShortNameBase {
  /// Stickers Suggested Short Name constructor.
  const StickersSuggestedShortName({
    required this.shortName,
  }) : super._();

  /// Deserialize.
  factory StickersSuggestedShortName.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Short Name.
  final String shortName;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Bot Command Scope.
abstract class BotCommandScopeBase extends TlConstructor {
  /// Predicate Bot Command Scope constructor.
  const BotCommandScopeBase._() : super._();
}

/// Bot Command Scope Default.
///
/// ID: `2f6cb2ab`.
class BotCommandScopeDefault extends BotCommandScopeBase {
  /// Bot Command Scope Default constructor.
  const BotCommandScopeDefault() : super._();

  /// Deserialize.
  factory BotCommandScopeDefault.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bot Command Scope Users.
///
/// ID: `3c4f04d8`.
class BotCommandScopeUsers extends BotCommandScopeBase {
  /// Bot Command Scope Users constructor.
  const BotCommandScopeUsers() : super._();

  /// Deserialize.
  factory BotCommandScopeUsers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bot Command Scope Chats.
///
/// ID: `6fe1a881`.
class BotCommandScopeChats extends BotCommandScopeBase {
  /// Bot Command Scope Chats constructor.
  const BotCommandScopeChats() : super._();

  /// Deserialize.
  factory BotCommandScopeChats.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bot Command Scope Chat Admins.
///
/// ID: `b9aa606a`.
class BotCommandScopeChatAdmins extends BotCommandScopeBase {
  /// Bot Command Scope Chat Admins constructor.
  const BotCommandScopeChatAdmins() : super._();

  /// Deserialize.
  factory BotCommandScopeChatAdmins.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bot Command Scope Peer.
///
/// ID: `db9d897d`.
class BotCommandScopePeer extends BotCommandScopeBase {
  /// Bot Command Scope Peer constructor.
  const BotCommandScopePeer({
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory BotCommandScopePeer.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bot Command Scope Peer Admins.
///
/// ID: `3fd863d1`.
class BotCommandScopePeerAdmins extends BotCommandScopeBase {
  /// Bot Command Scope Peer Admins constructor.
  const BotCommandScopePeerAdmins({
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory BotCommandScopePeerAdmins.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bot Command Scope Peer User.
///
/// ID: `0a1321f3`.
class BotCommandScopePeerUser extends BotCommandScopeBase {
  /// Bot Command Scope Peer User constructor.
  const BotCommandScopePeerUser({
    required this.peer,
    required this.userId,
  }) : super._();

  /// Deserialize.
  factory BotCommandScopePeerUser.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// User Id.
  final InputUserBase userId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Account Reset Password Result.
abstract class AccountResetPasswordResultBase extends TlConstructor {
  /// Predicate Account Reset Password Result constructor.
  const AccountResetPasswordResultBase._() : super._();
}

/// Account Reset Password Failed Wait.
///
/// ID: `e3779861`.
class AccountResetPasswordFailedWait extends AccountResetPasswordResultBase {
  /// Account Reset Password Failed Wait constructor.
  const AccountResetPasswordFailedWait({
    required this.retryDate,
  }) : super._();

  /// Deserialize.
  factory AccountResetPasswordFailedWait.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Retry Date.
  final int retryDate;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Reset Password Requested Wait.
///
/// ID: `e9effc7d`.
class AccountResetPasswordRequestedWait extends AccountResetPasswordResultBase {
  /// Account Reset Password Requested Wait constructor.
  const AccountResetPasswordRequestedWait({
    required this.untilDate,
  }) : super._();

  /// Deserialize.
  factory AccountResetPasswordRequestedWait.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Until Date.
  final int untilDate;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Reset Password Ok.
///
/// ID: `e926d63e`.
class AccountResetPasswordOk extends AccountResetPasswordResultBase {
  /// Account Reset Password Ok constructor.
  const AccountResetPasswordOk() : super._();

  /// Deserialize.
  factory AccountResetPasswordOk.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Sponsored Message.
abstract class SponsoredMessageBase extends TlConstructor {
  /// Predicate Sponsored Message constructor.
  const SponsoredMessageBase._() : super._();
}

/// Sponsored Message.
///
/// ID: `ed5383f7`.
class SponsoredMessage extends SponsoredMessageBase {
  /// Sponsored Message constructor.
  const SponsoredMessage({
    required this.flags,
    required this.randomId,
    required this.fromId,
    required this.chatInvite,
    required this.chatInviteHash,
    required this.channelPost,
    required this.startParam,
    required this.webpage,
    required this.app,
    required this.message,
    required this.entities,
    required this.buttonText,
    required this.sponsorInfo,
    required this.additionalInfo,
  }) : super._();

  /// Deserialize.
  factory SponsoredMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// recommended: bit
  bool get recommended => _bit(flags, 5);

  /// show_peer_photo: bit
  bool get showPeerPhoto => _bit(flags, 6);

  /// Random Id.
  final Uint8List randomId;

  /// From Id.
  final PeerBase? fromId;

  /// If [fromId] exists.
  bool get hasFromIdField => _bit(flags, 3);

  /// Chat Invite.
  final ChatInviteBase? chatInvite;

  /// If [chatInvite] exists.
  bool get hasChatInviteField => _bit(flags, 4);

  /// Chat Invite Hash.
  final String? chatInviteHash;

  /// If [chatInviteHash] exists.
  bool get hasChatInviteHashField => _bit(flags, 4);

  /// Channel Post.
  final int? channelPost;

  /// If [channelPost] exists.
  bool get hasChannelPostField => _bit(flags, 2);

  /// Start Param.
  final String? startParam;

  /// If [startParam] exists.
  bool get hasStartParamField => _bit(flags, 0);

  /// Webpage.
  final SponsoredWebPageBase? webpage;

  /// If [webpage] exists.
  bool get hasWebpageField => _bit(flags, 9);

  /// App.
  final BotAppBase? app;

  /// If [app] exists.
  bool get hasAppField => _bit(flags, 10);

  /// Message.
  final String message;

  /// Entities.
  final List<MessageEntityBase>? entities;

  /// If [entities] exists.
  bool get hasEntitiesField => _bit(flags, 1);

  /// Button Text.
  final String? buttonText;

  /// If [buttonText] exists.
  bool get hasButtonTextField => _bit(flags, 11);

  /// Sponsor Info.
  final String? sponsorInfo;

  /// If [sponsorInfo] exists.
  bool get hasSponsorInfoField => _bit(flags, 7);

  /// Additional Info.
  final String? additionalInfo;

  /// If [additionalInfo] exists.
  bool get hasAdditionalInfoField => _bit(flags, 8);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Sponsored Messages.
abstract class MessagesSponsoredMessagesBase extends TlConstructor {
  /// Predicate Messages Sponsored Messages constructor.
  const MessagesSponsoredMessagesBase._() : super._();
}

/// Messages Sponsored Messages.
///
/// ID: `c9ee1d87`.
class MessagesSponsoredMessages extends MessagesSponsoredMessagesBase {
  /// Messages Sponsored Messages constructor.
  const MessagesSponsoredMessages({
    required this.flags,
    required this.postsBetween,
    required this.messages,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory MessagesSponsoredMessages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Posts Between.
  final int? postsBetween;

  /// If [postsBetween] exists.
  bool get hasPostsBetweenField => _bit(flags, 0);

  /// Messages.
  final List<SponsoredMessageBase> messages;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Sponsored Messages Empty.
///
/// ID: `1839490f`.
class MessagesSponsoredMessagesEmpty extends MessagesSponsoredMessagesBase {
  /// Messages Sponsored Messages Empty constructor.
  const MessagesSponsoredMessagesEmpty() : super._();

  /// Deserialize.
  factory MessagesSponsoredMessagesEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Search Results Calendar Period.
abstract class SearchResultsCalendarPeriodBase extends TlConstructor {
  /// Predicate Search Results Calendar Period constructor.
  const SearchResultsCalendarPeriodBase._() : super._();
}

/// Search Results Calendar Period.
///
/// ID: `c9b0539f`.
class SearchResultsCalendarPeriod extends SearchResultsCalendarPeriodBase {
  /// Search Results Calendar Period constructor.
  const SearchResultsCalendarPeriod({
    required this.date,
    required this.minMsgId,
    required this.maxMsgId,
    required this.count,
  }) : super._();

  /// Deserialize.
  factory SearchResultsCalendarPeriod.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Date.
  final int date;

  /// Min Msg Id.
  final int minMsgId;

  /// Max Msg Id.
  final int maxMsgId;

  /// Count.
  final int count;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Search Results Calendar.
abstract class MessagesSearchResultsCalendarBase extends TlConstructor {
  /// Predicate Messages Search Results Calendar constructor.
  const MessagesSearchResultsCalendarBase._() : super._();
}

/// Messages Search Results Calendar.
///
/// ID: `147ee23c`.
class MessagesSearchResultsCalendar extends MessagesSearchResultsCalendarBase {
  /// Messages Search Results Calendar constructor.
  const MessagesSearchResultsCalendar({
    required this.flags,
    required this.count,
    required this.minDate,
    required this.minMsgId,
    required this.offsetIdOffset,
    required this.periods,
    required this.messages,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory MessagesSearchResultsCalendar.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// inexact: bit
  bool get inexact => _bit(flags, 0);

  /// Count.
  final int count;

  /// Min Date.
  final int minDate;

  /// Min Msg Id.
  final int minMsgId;

  /// Offset Id Offset.
  final int? offsetIdOffset;

  /// If [offsetIdOffset] exists.
  bool get hasOffsetIdOffsetField => _bit(flags, 1);

  /// Periods.
  final List<SearchResultsCalendarPeriodBase> periods;

  /// Messages.
  final List<MessageBase> messages;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Search Results Position.
abstract class SearchResultsPositionBase extends TlConstructor {
  /// Predicate Search Results Position constructor.
  const SearchResultsPositionBase._() : super._();
}

/// Search Result Position.
///
/// ID: `7f648b67`.
class SearchResultPosition extends SearchResultsPositionBase {
  /// Search Result Position constructor.
  const SearchResultPosition({
    required this.msgId,
    required this.date,
    required this.offset,
  }) : super._();

  /// Deserialize.
  factory SearchResultPosition.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Msg Id.
  final int msgId;

  /// Date.
  final int date;

  /// Offset.
  final int offset;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Search Results Positions.
abstract class MessagesSearchResultsPositionsBase extends TlConstructor {
  /// Predicate Messages Search Results Positions constructor.
  const MessagesSearchResultsPositionsBase._() : super._();
}

/// Messages Search Results Positions.
///
/// ID: `53b22baf`.
class MessagesSearchResultsPositions
    extends MessagesSearchResultsPositionsBase {
  /// Messages Search Results Positions constructor.
  const MessagesSearchResultsPositions({
    required this.count,
    required this.positions,
  }) : super._();

  /// Deserialize.
  factory MessagesSearchResultsPositions.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Count.
  final int count;

  /// Positions.
  final List<SearchResultsPositionBase> positions;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Channels Send As Peers.
abstract class ChannelsSendAsPeersBase extends TlConstructor {
  /// Predicate Channels Send As Peers constructor.
  const ChannelsSendAsPeersBase._() : super._();
}

/// Channels Send As Peers.
///
/// ID: `f496b0c6`.
class ChannelsSendAsPeers extends ChannelsSendAsPeersBase {
  /// Channels Send As Peers constructor.
  const ChannelsSendAsPeers({
    required this.peers,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory ChannelsSendAsPeers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peers.
  final List<SendAsPeerBase> peers;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Users User Full.
abstract class UsersUserFullBase extends TlConstructor {
  /// Predicate Users User Full constructor.
  const UsersUserFullBase._() : super._();
}

/// Users User Full.
///
/// ID: `3b6d152e`.
class UsersUserFull extends UsersUserFullBase {
  /// Users User Full constructor.
  const UsersUserFull({
    required this.fullUser,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory UsersUserFull.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Full User.
  final UserFullBase fullUser;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Peer Settings.
abstract class MessagesPeerSettingsBase extends TlConstructor {
  /// Predicate Messages Peer Settings constructor.
  const MessagesPeerSettingsBase._() : super._();
}

/// Messages Peer Settings.
///
/// ID: `6880b94d`.
class MessagesPeerSettings extends MessagesPeerSettingsBase {
  /// Messages Peer Settings constructor.
  const MessagesPeerSettings({
    required this.settings,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory MessagesPeerSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Settings.
  final PeerSettingsBase settings;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Auth Logged Out.
abstract class AuthLoggedOutBase extends TlConstructor {
  /// Predicate Auth Logged Out constructor.
  const AuthLoggedOutBase._() : super._();
}

/// Auth Logged Out.
///
/// ID: `c3a2835f`.
class AuthLoggedOut extends AuthLoggedOutBase {
  /// Auth Logged Out constructor.
  const AuthLoggedOut({
    required this.flags,
    required this.futureAuthToken,
  }) : super._();

  /// Deserialize.
  factory AuthLoggedOut.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Future Auth Token.
  final Uint8List? futureAuthToken;

  /// If [futureAuthToken] exists.
  bool get hasFutureAuthTokenField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Reaction Count.
abstract class ReactionCountBase extends TlConstructor {
  /// Predicate Reaction Count constructor.
  const ReactionCountBase._() : super._();
}

/// Reaction Count.
///
/// ID: `a3d1cb80`.
class ReactionCount extends ReactionCountBase {
  /// Reaction Count constructor.
  const ReactionCount({
    required this.flags,
    required this.chosenOrder,
    required this.reaction,
    required this.count,
  }) : super._();

  /// Deserialize.
  factory ReactionCount.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Chosen Order.
  final int? chosenOrder;

  /// If [chosenOrder] exists.
  bool get hasChosenOrderField => _bit(flags, 0);

  /// Reaction.
  final ReactionBase reaction;

  /// Count.
  final int count;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Message Reactions.
abstract class MessageReactionsBase extends TlConstructor {
  /// Predicate Message Reactions constructor.
  const MessageReactionsBase._() : super._();
}

/// Message Reactions.
///
/// ID: `4f2b9479`.
class MessageReactions extends MessageReactionsBase {
  /// Message Reactions constructor.
  const MessageReactions({
    required this.flags,
    required this.results,
    required this.recentReactions,
  }) : super._();

  /// Deserialize.
  factory MessageReactions.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// min: bit
  bool get min => _bit(flags, 0);

  /// can_see_list: bit
  bool get canSeeList => _bit(flags, 2);

  /// Results.
  final List<ReactionCountBase> results;

  /// Recent Reactions.
  final List<MessagePeerReactionBase>? recentReactions;

  /// If [recentReactions] exists.
  bool get hasRecentReactionsField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Message Reactions List.
abstract class MessagesMessageReactionsListBase extends TlConstructor {
  /// Predicate Messages Message Reactions List constructor.
  const MessagesMessageReactionsListBase._() : super._();
}

/// Messages Message Reactions List.
///
/// ID: `31bd492d`.
class MessagesMessageReactionsList extends MessagesMessageReactionsListBase {
  /// Messages Message Reactions List constructor.
  const MessagesMessageReactionsList({
    required this.flags,
    required this.count,
    required this.reactions,
    required this.chats,
    required this.users,
    required this.nextOffset,
  }) : super._();

  /// Deserialize.
  factory MessagesMessageReactionsList.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Count.
  final int count;

  /// Reactions.
  final List<MessagePeerReactionBase> reactions;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Next Offset.
  final String? nextOffset;

  /// If [nextOffset] exists.
  bool get hasNextOffsetField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Available Reaction.
abstract class AvailableReactionBase extends TlConstructor {
  /// Predicate Available Reaction constructor.
  const AvailableReactionBase._() : super._();
}

/// Available Reaction.
///
/// ID: `c077ec01`.
class AvailableReaction extends AvailableReactionBase {
  /// Available Reaction constructor.
  const AvailableReaction({
    required this.flags,
    required this.reaction,
    required this.title,
    required this.staticIcon,
    required this.appearAnimation,
    required this.selectAnimation,
    required this.activateAnimation,
    required this.effectAnimation,
    required this.aroundAnimation,
    required this.centerIcon,
  }) : super._();

  /// Deserialize.
  factory AvailableReaction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// inactive: bit
  bool get inactive => _bit(flags, 0);

  /// premium: bit
  bool get premium => _bit(flags, 2);

  /// Reaction.
  final String reaction;

  /// Title.
  final String title;

  /// Static Icon.
  final DocumentBase staticIcon;

  /// Appear Animation.
  final DocumentBase appearAnimation;

  /// Select Animation.
  final DocumentBase selectAnimation;

  /// Activate Animation.
  final DocumentBase activateAnimation;

  /// Effect Animation.
  final DocumentBase effectAnimation;

  /// Around Animation.
  final DocumentBase? aroundAnimation;

  /// If [aroundAnimation] exists.
  bool get hasAroundAnimationField => _bit(flags, 1);

  /// Center Icon.
  final DocumentBase? centerIcon;

  /// If [centerIcon] exists.
  bool get hasCenterIconField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Available Reactions.
abstract class MessagesAvailableReactionsBase extends TlConstructor {
  /// Predicate Messages Available Reactions constructor.
  const MessagesAvailableReactionsBase._() : super._();
}

/// Messages Available Reactions Not Modified.
///
/// ID: `9f071957`.
class MessagesAvailableReactionsNotModified
    extends MessagesAvailableReactionsBase {
  /// Messages Available Reactions Not Modified constructor.
  const MessagesAvailableReactionsNotModified() : super._();

  /// Deserialize.
  factory MessagesAvailableReactionsNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Available Reactions.
///
/// ID: `768e3aad`.
class MessagesAvailableReactions extends MessagesAvailableReactionsBase {
  /// Messages Available Reactions constructor.
  const MessagesAvailableReactions({
    required this.hash,
    required this.reactions,
  }) : super._();

  /// Deserialize.
  factory MessagesAvailableReactions.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Reactions.
  final List<AvailableReactionBase> reactions;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Message Peer Reaction.
abstract class MessagePeerReactionBase extends TlConstructor {
  /// Predicate Message Peer Reaction constructor.
  const MessagePeerReactionBase._() : super._();
}

/// Message Peer Reaction.
///
/// ID: `8c79b63c`.
class MessagePeerReaction extends MessagePeerReactionBase {
  /// Message Peer Reaction constructor.
  const MessagePeerReaction({
    required this.flags,
    required this.peerId,
    required this.date,
    required this.reaction,
  }) : super._();

  /// Deserialize.
  factory MessagePeerReaction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// big: bit
  bool get big => _bit(flags, 0);

  /// unread: bit
  bool get unread => _bit(flags, 1);

  /// my: bit
  bool get my => _bit(flags, 2);

  /// Peer Id.
  final PeerBase peerId;

  /// Date.
  final int date;

  /// Reaction.
  final ReactionBase reaction;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Group Call Stream Channel.
abstract class GroupCallStreamChannelBase extends TlConstructor {
  /// Predicate Group Call Stream Channel constructor.
  const GroupCallStreamChannelBase._() : super._();
}

/// Group Call Stream Channel.
///
/// ID: `80eb48af`.
class GroupCallStreamChannel extends GroupCallStreamChannelBase {
  /// Group Call Stream Channel constructor.
  const GroupCallStreamChannel({
    required this.channel,
    required this.scale,
    required this.lastTimestampMs,
  }) : super._();

  /// Deserialize.
  factory GroupCallStreamChannel.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final int channel;

  /// Scale.
  final int scale;

  /// Last Timestamp Ms.
  final int lastTimestampMs;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Phone Group Call Stream Channels.
abstract class PhoneGroupCallStreamChannelsBase extends TlConstructor {
  /// Predicate Phone Group Call Stream Channels constructor.
  const PhoneGroupCallStreamChannelsBase._() : super._();
}

/// Phone Group Call Stream Channels.
///
/// ID: `d0e482b2`.
class PhoneGroupCallStreamChannels extends PhoneGroupCallStreamChannelsBase {
  /// Phone Group Call Stream Channels constructor.
  const PhoneGroupCallStreamChannels({
    required this.channels,
  }) : super._();

  /// Deserialize.
  factory PhoneGroupCallStreamChannels.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channels.
  final List<GroupCallStreamChannelBase> channels;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Phone Group Call Stream Rtmp Url.
abstract class PhoneGroupCallStreamRtmpUrlBase extends TlConstructor {
  /// Predicate Phone Group Call Stream Rtmp Url constructor.
  const PhoneGroupCallStreamRtmpUrlBase._() : super._();
}

/// Phone Group Call Stream Rtmp Url.
///
/// ID: `2dbf3432`.
class PhoneGroupCallStreamRtmpUrl extends PhoneGroupCallStreamRtmpUrlBase {
  /// Phone Group Call Stream Rtmp Url constructor.
  const PhoneGroupCallStreamRtmpUrl({
    required this.url,
    required this.key,
  }) : super._();

  /// Deserialize.
  factory PhoneGroupCallStreamRtmpUrl.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Url.
  final String url;

  /// Key.
  final String key;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Attach Menu Bot Icon Color.
abstract class AttachMenuBotIconColorBase extends TlConstructor {
  /// Predicate Attach Menu Bot Icon Color constructor.
  const AttachMenuBotIconColorBase._() : super._();
}

/// Attach Menu Bot Icon Color.
///
/// ID: `4576f3f0`.
class AttachMenuBotIconColor extends AttachMenuBotIconColorBase {
  /// Attach Menu Bot Icon Color constructor.
  const AttachMenuBotIconColor({
    required this.name,
    required this.color,
  }) : super._();

  /// Deserialize.
  factory AttachMenuBotIconColor.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Name.
  final String name;

  /// Color.
  final int color;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Attach Menu Bot Icon.
abstract class AttachMenuBotIconBase extends TlConstructor {
  /// Predicate Attach Menu Bot Icon constructor.
  const AttachMenuBotIconBase._() : super._();
}

/// Attach Menu Bot Icon.
///
/// ID: `b2a7386b`.
class AttachMenuBotIcon extends AttachMenuBotIconBase {
  /// Attach Menu Bot Icon constructor.
  const AttachMenuBotIcon({
    required this.flags,
    required this.name,
    required this.icon,
    required this.colors,
  }) : super._();

  /// Deserialize.
  factory AttachMenuBotIcon.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Name.
  final String name;

  /// Icon.
  final DocumentBase icon;

  /// Colors.
  final List<AttachMenuBotIconColorBase>? colors;

  /// If [colors] exists.
  bool get hasColorsField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Attach Menu Bot.
abstract class AttachMenuBotBase extends TlConstructor {
  /// Predicate Attach Menu Bot constructor.
  const AttachMenuBotBase._() : super._();
}

/// Attach Menu Bot.
///
/// ID: `d90d8dfe`.
class AttachMenuBot extends AttachMenuBotBase {
  /// Attach Menu Bot constructor.
  const AttachMenuBot({
    required this.flags,
    required this.botId,
    required this.shortName,
    required this.peerTypes,
    required this.icons,
  }) : super._();

  /// Deserialize.
  factory AttachMenuBot.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// inactive: bit
  bool get inactive => _bit(flags, 0);

  /// has_settings: bit
  bool get hasSettings => _bit(flags, 1);

  /// request_write_access: bit
  bool get requestWriteAccess => _bit(flags, 2);

  /// show_in_attach_menu: bit
  bool get showInAttachMenu => _bit(flags, 3);

  /// show_in_side_menu: bit
  bool get showInSideMenu => _bit(flags, 4);

  /// side_menu_disclaimer_needed: bit
  bool get sideMenuDisclaimerNeeded => _bit(flags, 5);

  /// Bot Id.
  final int botId;

  /// Short Name.
  final String shortName;

  /// Peer Types.
  final List<AttachMenuPeerTypeBase>? peerTypes;

  /// If [peerTypes] exists.
  bool get hasPeerTypesField => _bit(flags, 3);

  /// Icons.
  final List<AttachMenuBotIconBase> icons;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Attach Menu Bots.
abstract class AttachMenuBotsBase extends TlConstructor {
  /// Predicate Attach Menu Bots constructor.
  const AttachMenuBotsBase._() : super._();
}

/// Attach Menu Bots Not Modified.
///
/// ID: `f1d88a5c`.
class AttachMenuBotsNotModified extends AttachMenuBotsBase {
  /// Attach Menu Bots Not Modified constructor.
  const AttachMenuBotsNotModified() : super._();

  /// Deserialize.
  factory AttachMenuBotsNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Attach Menu Bots.
///
/// ID: `3c4301c0`.
class AttachMenuBots extends AttachMenuBotsBase {
  /// Attach Menu Bots constructor.
  const AttachMenuBots({
    required this.hash,
    required this.bots,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory AttachMenuBots.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Bots.
  final List<AttachMenuBotBase> bots;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Attach Menu Bots Bot.
abstract class AttachMenuBotsBotBase extends TlConstructor {
  /// Predicate Attach Menu Bots Bot constructor.
  const AttachMenuBotsBotBase._() : super._();
}

/// Attach Menu Bots Bot.
///
/// ID: `93bf667f`.
class AttachMenuBotsBot extends AttachMenuBotsBotBase {
  /// Attach Menu Bots Bot constructor.
  const AttachMenuBotsBot({
    required this.bot,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory AttachMenuBotsBot.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Bot.
  final AttachMenuBotBase bot;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Web View Result.
abstract class WebViewResultBase extends TlConstructor {
  /// Predicate Web View Result constructor.
  const WebViewResultBase._() : super._();
}

/// Web View Result Url.
///
/// ID: `0c14557c`.
class WebViewResultUrl extends WebViewResultBase {
  /// Web View Result Url constructor.
  const WebViewResultUrl({
    required this.queryId,
    required this.url,
  }) : super._();

  /// Deserialize.
  factory WebViewResultUrl.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Query Id.
  final int queryId;

  /// Url.
  final String url;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Simple Web View Result.
abstract class SimpleWebViewResultBase extends TlConstructor {
  /// Predicate Simple Web View Result constructor.
  const SimpleWebViewResultBase._() : super._();
}

/// Simple Web View Result Url.
///
/// ID: `882f76bb`.
class SimpleWebViewResultUrl extends SimpleWebViewResultBase {
  /// Simple Web View Result Url constructor.
  const SimpleWebViewResultUrl({
    required this.url,
  }) : super._();

  /// Deserialize.
  factory SimpleWebViewResultUrl.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Url.
  final String url;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Web View Message Sent.
abstract class WebViewMessageSentBase extends TlConstructor {
  /// Predicate Web View Message Sent constructor.
  const WebViewMessageSentBase._() : super._();
}

/// Web View Message Sent.
///
/// ID: `0c94511c`.
class WebViewMessageSent extends WebViewMessageSentBase {
  /// Web View Message Sent constructor.
  const WebViewMessageSent({
    required this.flags,
    required this.msgId,
  }) : super._();

  /// Deserialize.
  factory WebViewMessageSent.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Msg Id.
  final InputBotInlineMessageIDBase? msgId;

  /// If [msgId] exists.
  bool get hasMsgIdField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Bot Menu Button.
abstract class BotMenuButtonBase extends TlConstructor {
  /// Predicate Bot Menu Button constructor.
  const BotMenuButtonBase._() : super._();
}

/// Bot Menu Button Default.
///
/// ID: `7533a588`.
class BotMenuButtonDefault extends BotMenuButtonBase {
  /// Bot Menu Button Default constructor.
  const BotMenuButtonDefault() : super._();

  /// Deserialize.
  factory BotMenuButtonDefault.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bot Menu Button Commands.
///
/// ID: `4258c205`.
class BotMenuButtonCommands extends BotMenuButtonBase {
  /// Bot Menu Button Commands constructor.
  const BotMenuButtonCommands() : super._();

  /// Deserialize.
  factory BotMenuButtonCommands.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bot Menu Button.
///
/// ID: `c7b57ce6`.
class BotMenuButton extends BotMenuButtonBase {
  /// Bot Menu Button constructor.
  const BotMenuButton({
    required this.text,
    required this.url,
  }) : super._();

  /// Deserialize.
  factory BotMenuButton.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final String text;

  /// Url.
  final String url;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Account Saved Ringtones.
abstract class AccountSavedRingtonesBase extends TlConstructor {
  /// Predicate Account Saved Ringtones constructor.
  const AccountSavedRingtonesBase._() : super._();
}

/// Account Saved Ringtones Not Modified.
///
/// ID: `fbf6e8b1`.
class AccountSavedRingtonesNotModified extends AccountSavedRingtonesBase {
  /// Account Saved Ringtones Not Modified constructor.
  const AccountSavedRingtonesNotModified() : super._();

  /// Deserialize.
  factory AccountSavedRingtonesNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Saved Ringtones.
///
/// ID: `c1e92cc5`.
class AccountSavedRingtones extends AccountSavedRingtonesBase {
  /// Account Saved Ringtones constructor.
  const AccountSavedRingtones({
    required this.hash,
    required this.ringtones,
  }) : super._();

  /// Deserialize.
  factory AccountSavedRingtones.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Ringtones.
  final List<DocumentBase> ringtones;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Notification Sound.
abstract class NotificationSoundBase extends TlConstructor {
  /// Predicate Notification Sound constructor.
  const NotificationSoundBase._() : super._();
}

/// Notification Sound Default.
///
/// ID: `97e8bebe`.
class NotificationSoundDefault extends NotificationSoundBase {
  /// Notification Sound Default constructor.
  const NotificationSoundDefault() : super._();

  /// Deserialize.
  factory NotificationSoundDefault.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Notification Sound None.
///
/// ID: `6f0c34df`.
class NotificationSoundNone extends NotificationSoundBase {
  /// Notification Sound None constructor.
  const NotificationSoundNone() : super._();

  /// Deserialize.
  factory NotificationSoundNone.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Notification Sound Local.
///
/// ID: `830b9ae4`.
class NotificationSoundLocal extends NotificationSoundBase {
  /// Notification Sound Local constructor.
  const NotificationSoundLocal({
    required this.title,
    required this.data,
  }) : super._();

  /// Deserialize.
  factory NotificationSoundLocal.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Title.
  final String title;

  /// Data.
  final String data;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Notification Sound Ringtone.
///
/// ID: `ff6c8049`.
class NotificationSoundRingtone extends NotificationSoundBase {
  /// Notification Sound Ringtone constructor.
  const NotificationSoundRingtone({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory NotificationSoundRingtone.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Account Saved Ringtone.
abstract class AccountSavedRingtoneBase extends TlConstructor {
  /// Predicate Account Saved Ringtone constructor.
  const AccountSavedRingtoneBase._() : super._();
}

/// Account Saved Ringtone.
///
/// ID: `b7263f6d`.
class AccountSavedRingtone extends AccountSavedRingtoneBase {
  /// Account Saved Ringtone constructor.
  const AccountSavedRingtone() : super._();

  /// Deserialize.
  factory AccountSavedRingtone.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Saved Ringtone Converted.
///
/// ID: `1f307eb7`.
class AccountSavedRingtoneConverted extends AccountSavedRingtoneBase {
  /// Account Saved Ringtone Converted constructor.
  const AccountSavedRingtoneConverted({
    required this.document,
  }) : super._();

  /// Deserialize.
  factory AccountSavedRingtoneConverted.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Document.
  final DocumentBase document;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Attach Menu Peer Type.
abstract class AttachMenuPeerTypeBase extends TlConstructor {
  /// Predicate Attach Menu Peer Type constructor.
  const AttachMenuPeerTypeBase._() : super._();
}

/// Attach Menu Peer Type Same Bot P M.
///
/// ID: `7d6be90e`.
class AttachMenuPeerTypeSameBotPM extends AttachMenuPeerTypeBase {
  /// Attach Menu Peer Type Same Bot P M constructor.
  const AttachMenuPeerTypeSameBotPM() : super._();

  /// Deserialize.
  factory AttachMenuPeerTypeSameBotPM.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Attach Menu Peer Type Bot P M.
///
/// ID: `c32bfa1a`.
class AttachMenuPeerTypeBotPM extends AttachMenuPeerTypeBase {
  /// Attach Menu Peer Type Bot P M constructor.
  const AttachMenuPeerTypeBotPM() : super._();

  /// Deserialize.
  factory AttachMenuPeerTypeBotPM.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Attach Menu Peer Type P M.
///
/// ID: `f146d31f`.
class AttachMenuPeerTypePM extends AttachMenuPeerTypeBase {
  /// Attach Menu Peer Type P M constructor.
  const AttachMenuPeerTypePM() : super._();

  /// Deserialize.
  factory AttachMenuPeerTypePM.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Attach Menu Peer Type Chat.
///
/// ID: `0509113f`.
class AttachMenuPeerTypeChat extends AttachMenuPeerTypeBase {
  /// Attach Menu Peer Type Chat constructor.
  const AttachMenuPeerTypeChat() : super._();

  /// Deserialize.
  factory AttachMenuPeerTypeChat.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Attach Menu Peer Type Broadcast.
///
/// ID: `7bfbdefc`.
class AttachMenuPeerTypeBroadcast extends AttachMenuPeerTypeBase {
  /// Attach Menu Peer Type Broadcast constructor.
  const AttachMenuPeerTypeBroadcast() : super._();

  /// Deserialize.
  factory AttachMenuPeerTypeBroadcast.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Invoice.
abstract class InputInvoiceBase extends TlConstructor {
  /// Predicate Input Invoice constructor.
  const InputInvoiceBase._() : super._();
}

/// Input Invoice Message.
///
/// ID: `c5b56859`.
class InputInvoiceMessage extends InputInvoiceBase {
  /// Input Invoice Message constructor.
  const InputInvoiceMessage({
    required this.peer,
    required this.msgId,
  }) : super._();

  /// Deserialize.
  factory InputInvoiceMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Msg Id.
  final int msgId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Invoice Slug.
///
/// ID: `c326caef`.
class InputInvoiceSlug extends InputInvoiceBase {
  /// Input Invoice Slug constructor.
  const InputInvoiceSlug({
    required this.slug,
  }) : super._();

  /// Deserialize.
  factory InputInvoiceSlug.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Slug.
  final String slug;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Invoice Premium Gift Code.
///
/// ID: `98986c0d`.
class InputInvoicePremiumGiftCode extends InputInvoiceBase {
  /// Input Invoice Premium Gift Code constructor.
  const InputInvoicePremiumGiftCode({
    required this.purpose,
    required this.option,
  }) : super._();

  /// Deserialize.
  factory InputInvoicePremiumGiftCode.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Purpose.
  final InputStorePaymentPurposeBase purpose;

  /// Option.
  final PremiumGiftCodeOptionBase option;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Payments Exported Invoice.
abstract class PaymentsExportedInvoiceBase extends TlConstructor {
  /// Predicate Payments Exported Invoice constructor.
  const PaymentsExportedInvoiceBase._() : super._();
}

/// Payments Exported Invoice.
///
/// ID: `aed0cbd9`.
class PaymentsExportedInvoice extends PaymentsExportedInvoiceBase {
  /// Payments Exported Invoice constructor.
  const PaymentsExportedInvoice({
    required this.url,
  }) : super._();

  /// Deserialize.
  factory PaymentsExportedInvoice.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Url.
  final String url;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Transcribed Audio.
abstract class MessagesTranscribedAudioBase extends TlConstructor {
  /// Predicate Messages Transcribed Audio constructor.
  const MessagesTranscribedAudioBase._() : super._();
}

/// Messages Transcribed Audio.
///
/// ID: `cfb9d957`.
class MessagesTranscribedAudio extends MessagesTranscribedAudioBase {
  /// Messages Transcribed Audio constructor.
  const MessagesTranscribedAudio({
    required this.flags,
    required this.transcriptionId,
    required this.text,
    required this.trialRemainsNum,
    required this.trialRemainsUntilDate,
  }) : super._();

  /// Deserialize.
  factory MessagesTranscribedAudio.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// pending: bit
  bool get pending => _bit(flags, 0);

  /// Transcription Id.
  final int transcriptionId;

  /// Text.
  final String text;

  /// Trial Remains Num.
  final int? trialRemainsNum;

  /// If [trialRemainsNum] exists.
  bool get hasTrialRemainsNumField => _bit(flags, 1);

  /// Trial Remains Until Date.
  final int? trialRemainsUntilDate;

  /// If [trialRemainsUntilDate] exists.
  bool get hasTrialRemainsUntilDateField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Help Premium Promo.
abstract class HelpPremiumPromoBase extends TlConstructor {
  /// Predicate Help Premium Promo constructor.
  const HelpPremiumPromoBase._() : super._();
}

/// Help Premium Promo.
///
/// ID: `5334759c`.
class HelpPremiumPromo extends HelpPremiumPromoBase {
  /// Help Premium Promo constructor.
  const HelpPremiumPromo({
    required this.statusText,
    required this.statusEntities,
    required this.videoSections,
    required this.videos,
    required this.periodOptions,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory HelpPremiumPromo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Status Text.
  final String statusText;

  /// Status Entities.
  final List<MessageEntityBase> statusEntities;

  /// Video Sections.
  final List<String> videoSections;

  /// Videos.
  final List<DocumentBase> videos;

  /// Period Options.
  final List<PremiumSubscriptionOptionBase> periodOptions;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Store Payment Purpose.
abstract class InputStorePaymentPurposeBase extends TlConstructor {
  /// Predicate Input Store Payment Purpose constructor.
  const InputStorePaymentPurposeBase._() : super._();
}

/// Input Store Payment Premium Subscription.
///
/// ID: `a6751e66`.
class InputStorePaymentPremiumSubscription
    extends InputStorePaymentPurposeBase {
  /// Input Store Payment Premium Subscription constructor.
  const InputStorePaymentPremiumSubscription({
    required this.flags,
  }) : super._();

  /// Deserialize.
  factory InputStorePaymentPremiumSubscription.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// restore: bit
  bool get restore => _bit(flags, 0);

  /// upgrade: bit
  bool get upgrade => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Store Payment Gift Premium.
///
/// ID: `616f7fe8`.
class InputStorePaymentGiftPremium extends InputStorePaymentPurposeBase {
  /// Input Store Payment Gift Premium constructor.
  const InputStorePaymentGiftPremium({
    required this.userId,
    required this.currency,
    required this.amount,
  }) : super._();

  /// Deserialize.
  factory InputStorePaymentGiftPremium.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final InputUserBase userId;

  /// Currency.
  final String currency;

  /// Amount.
  final int amount;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Store Payment Premium Gift Code.
///
/// ID: `a3805f3f`.
class InputStorePaymentPremiumGiftCode extends InputStorePaymentPurposeBase {
  /// Input Store Payment Premium Gift Code constructor.
  const InputStorePaymentPremiumGiftCode({
    required this.flags,
    required this.users,
    required this.boostPeer,
    required this.currency,
    required this.amount,
  }) : super._();

  /// Deserialize.
  factory InputStorePaymentPremiumGiftCode.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Users.
  final List<InputUserBase> users;

  /// Boost Peer.
  final InputPeerBase? boostPeer;

  /// If [boostPeer] exists.
  bool get hasBoostPeerField => _bit(flags, 0);

  /// Currency.
  final String currency;

  /// Amount.
  final int amount;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Store Payment Premium Giveaway.
///
/// ID: `160544ca`.
class InputStorePaymentPremiumGiveaway extends InputStorePaymentPurposeBase {
  /// Input Store Payment Premium Giveaway constructor.
  const InputStorePaymentPremiumGiveaway({
    required this.flags,
    required this.boostPeer,
    required this.additionalPeers,
    required this.countriesIso2,
    required this.prizeDescription,
    required this.randomId,
    required this.untilDate,
    required this.currency,
    required this.amount,
  }) : super._();

  /// Deserialize.
  factory InputStorePaymentPremiumGiveaway.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// only_new_subscribers: bit
  bool get onlyNewSubscribers => _bit(flags, 0);

  /// winners_are_visible: bit
  bool get winnersAreVisible => _bit(flags, 3);

  /// Boost Peer.
  final InputPeerBase boostPeer;

  /// Additional Peers.
  final List<InputPeerBase>? additionalPeers;

  /// If [additionalPeers] exists.
  bool get hasAdditionalPeersField => _bit(flags, 1);

  /// Countries Iso2.
  final List<String>? countriesIso2;

  /// If [countriesIso2] exists.
  bool get hasCountriesIso2Field => _bit(flags, 2);

  /// Prize Description.
  final String? prizeDescription;

  /// If [prizeDescription] exists.
  bool get hasPrizeDescriptionField => _bit(flags, 4);

  /// Random Id.
  final int randomId;

  /// Until Date.
  final int untilDate;

  /// Currency.
  final String currency;

  /// Amount.
  final int amount;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Premium Gift Option.
abstract class PremiumGiftOptionBase extends TlConstructor {
  /// Predicate Premium Gift Option constructor.
  const PremiumGiftOptionBase._() : super._();
}

/// Premium Gift Option.
///
/// ID: `74c34319`.
class PremiumGiftOption extends PremiumGiftOptionBase {
  /// Premium Gift Option constructor.
  const PremiumGiftOption({
    required this.flags,
    required this.months,
    required this.currency,
    required this.amount,
    required this.botUrl,
    required this.storeProduct,
  }) : super._();

  /// Deserialize.
  factory PremiumGiftOption.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Months.
  final int months;

  /// Currency.
  final String currency;

  /// Amount.
  final int amount;

  /// Bot Url.
  final String botUrl;

  /// Store Product.
  final String? storeProduct;

  /// If [storeProduct] exists.
  bool get hasStoreProductField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Payment Form Method.
abstract class PaymentFormMethodBase extends TlConstructor {
  /// Predicate Payment Form Method constructor.
  const PaymentFormMethodBase._() : super._();
}

/// Payment Form Method.
///
/// ID: `88f8f21b`.
class PaymentFormMethod extends PaymentFormMethodBase {
  /// Payment Form Method constructor.
  const PaymentFormMethod({
    required this.url,
    required this.title,
  }) : super._();

  /// Deserialize.
  factory PaymentFormMethod.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Url.
  final String url;

  /// Title.
  final String title;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Emoji Status.
abstract class EmojiStatusBase extends TlConstructor {
  /// Predicate Emoji Status constructor.
  const EmojiStatusBase._() : super._();
}

/// Emoji Status Empty.
///
/// ID: `2de11aae`.
class EmojiStatusEmpty extends EmojiStatusBase {
  /// Emoji Status Empty constructor.
  const EmojiStatusEmpty() : super._();

  /// Deserialize.
  factory EmojiStatusEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Emoji Status.
///
/// ID: `929b619d`.
class EmojiStatus extends EmojiStatusBase {
  /// Emoji Status constructor.
  const EmojiStatus({
    required this.documentId,
  }) : super._();

  /// Deserialize.
  factory EmojiStatus.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Document Id.
  final int documentId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Emoji Status Until.
///
/// ID: `fa30a8c7`.
class EmojiStatusUntil extends EmojiStatusBase {
  /// Emoji Status Until constructor.
  const EmojiStatusUntil({
    required this.documentId,
    required this.until,
  }) : super._();

  /// Deserialize.
  factory EmojiStatusUntil.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Document Id.
  final int documentId;

  /// Until.
  final int until;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Account Emoji Statuses.
abstract class AccountEmojiStatusesBase extends TlConstructor {
  /// Predicate Account Emoji Statuses constructor.
  const AccountEmojiStatusesBase._() : super._();
}

/// Account Emoji Statuses Not Modified.
///
/// ID: `d08ce645`.
class AccountEmojiStatusesNotModified extends AccountEmojiStatusesBase {
  /// Account Emoji Statuses Not Modified constructor.
  const AccountEmojiStatusesNotModified() : super._();

  /// Deserialize.
  factory AccountEmojiStatusesNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Emoji Statuses.
///
/// ID: `90c467d1`.
class AccountEmojiStatuses extends AccountEmojiStatusesBase {
  /// Account Emoji Statuses constructor.
  const AccountEmojiStatuses({
    required this.hash,
    required this.statuses,
  }) : super._();

  /// Deserialize.
  factory AccountEmojiStatuses.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Statuses.
  final List<EmojiStatusBase> statuses;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Reaction.
abstract class ReactionBase extends TlConstructor {
  /// Predicate Reaction constructor.
  const ReactionBase._() : super._();
}

/// Reaction Empty.
///
/// ID: `79f5d419`.
class ReactionEmpty extends ReactionBase {
  /// Reaction Empty constructor.
  const ReactionEmpty() : super._();

  /// Deserialize.
  factory ReactionEmpty.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Reaction Emoji.
///
/// ID: `1b2286b8`.
class ReactionEmoji extends ReactionBase {
  /// Reaction Emoji constructor.
  const ReactionEmoji({
    required this.emoticon,
  }) : super._();

  /// Deserialize.
  factory ReactionEmoji.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Emoticon.
  final String emoticon;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Reaction Custom Emoji.
///
/// ID: `8935fc73`.
class ReactionCustomEmoji extends ReactionBase {
  /// Reaction Custom Emoji constructor.
  const ReactionCustomEmoji({
    required this.documentId,
  }) : super._();

  /// Deserialize.
  factory ReactionCustomEmoji.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Document Id.
  final int documentId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Chat Reactions.
abstract class ChatReactionsBase extends TlConstructor {
  /// Predicate Chat Reactions constructor.
  const ChatReactionsBase._() : super._();
}

/// Chat Reactions None.
///
/// ID: `eafc32bc`.
class ChatReactionsNone extends ChatReactionsBase {
  /// Chat Reactions None constructor.
  const ChatReactionsNone() : super._();

  /// Deserialize.
  factory ChatReactionsNone.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Chat Reactions All.
///
/// ID: `52928bca`.
class ChatReactionsAll extends ChatReactionsBase {
  /// Chat Reactions All constructor.
  const ChatReactionsAll({
    required this.flags,
  }) : super._();

  /// Deserialize.
  factory ChatReactionsAll.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// allow_custom: bit
  bool get allowCustom => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Chat Reactions Some.
///
/// ID: `661d4037`.
class ChatReactionsSome extends ChatReactionsBase {
  /// Chat Reactions Some constructor.
  const ChatReactionsSome({
    required this.reactions,
  }) : super._();

  /// Deserialize.
  factory ChatReactionsSome.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Reactions.
  final List<ReactionBase> reactions;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Reactions.
abstract class MessagesReactionsBase extends TlConstructor {
  /// Predicate Messages Reactions constructor.
  const MessagesReactionsBase._() : super._();
}

/// Messages Reactions Not Modified.
///
/// ID: `b06fdbdf`.
class MessagesReactionsNotModified extends MessagesReactionsBase {
  /// Messages Reactions Not Modified constructor.
  const MessagesReactionsNotModified() : super._();

  /// Deserialize.
  factory MessagesReactionsNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Reactions.
///
/// ID: `eafdf716`.
class MessagesReactions extends MessagesReactionsBase {
  /// Messages Reactions constructor.
  const MessagesReactions({
    required this.hash,
    required this.reactions,
  }) : super._();

  /// Deserialize.
  factory MessagesReactions.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Reactions.
  final List<ReactionBase> reactions;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Email Verify Purpose.
abstract class EmailVerifyPurposeBase extends TlConstructor {
  /// Predicate Email Verify Purpose constructor.
  const EmailVerifyPurposeBase._() : super._();
}

/// Email Verify Purpose Login Setup.
///
/// ID: `4345be73`.
class EmailVerifyPurposeLoginSetup extends EmailVerifyPurposeBase {
  /// Email Verify Purpose Login Setup constructor.
  const EmailVerifyPurposeLoginSetup({
    required this.phoneNumber,
    required this.phoneCodeHash,
  }) : super._();

  /// Deserialize.
  factory EmailVerifyPurposeLoginSetup.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Phone Number.
  final String phoneNumber;

  /// Phone Code Hash.
  final String phoneCodeHash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Email Verify Purpose Login Change.
///
/// ID: `527d22eb`.
class EmailVerifyPurposeLoginChange extends EmailVerifyPurposeBase {
  /// Email Verify Purpose Login Change constructor.
  const EmailVerifyPurposeLoginChange() : super._();

  /// Deserialize.
  factory EmailVerifyPurposeLoginChange.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Email Verify Purpose Passport.
///
/// ID: `bbf51685`.
class EmailVerifyPurposePassport extends EmailVerifyPurposeBase {
  /// Email Verify Purpose Passport constructor.
  const EmailVerifyPurposePassport() : super._();

  /// Deserialize.
  factory EmailVerifyPurposePassport.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Email Verification.
abstract class EmailVerificationBase extends TlConstructor {
  /// Predicate Email Verification constructor.
  const EmailVerificationBase._() : super._();
}

/// Email Verification Code.
///
/// ID: `922e55a9`.
class EmailVerificationCode extends EmailVerificationBase {
  /// Email Verification Code constructor.
  const EmailVerificationCode({
    required this.code,
  }) : super._();

  /// Deserialize.
  factory EmailVerificationCode.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Code.
  final String code;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Email Verification Google.
///
/// ID: `db909ec2`.
class EmailVerificationGoogle extends EmailVerificationBase {
  /// Email Verification Google constructor.
  const EmailVerificationGoogle({
    required this.token,
  }) : super._();

  /// Deserialize.
  factory EmailVerificationGoogle.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Token.
  final String token;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Email Verification Apple.
///
/// ID: `96d074fd`.
class EmailVerificationApple extends EmailVerificationBase {
  /// Email Verification Apple constructor.
  const EmailVerificationApple({
    required this.token,
  }) : super._();

  /// Deserialize.
  factory EmailVerificationApple.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Token.
  final String token;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Account Email Verified.
abstract class AccountEmailVerifiedBase extends TlConstructor {
  /// Predicate Account Email Verified constructor.
  const AccountEmailVerifiedBase._() : super._();
}

/// Account Email Verified.
///
/// ID: `2b96cd1b`.
class AccountEmailVerified extends AccountEmailVerifiedBase {
  /// Account Email Verified constructor.
  const AccountEmailVerified({
    required this.email,
  }) : super._();

  /// Deserialize.
  factory AccountEmailVerified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Email.
  final String email;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Email Verified Login.
///
/// ID: `e1bb0d61`.
class AccountEmailVerifiedLogin extends AccountEmailVerifiedBase {
  /// Account Email Verified Login constructor.
  const AccountEmailVerifiedLogin({
    required this.email,
    required this.sentCode,
  }) : super._();

  /// Deserialize.
  factory AccountEmailVerifiedLogin.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Email.
  final String email;

  /// Sent Code.
  final AuthSentCodeBase sentCode;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Premium Subscription Option.
abstract class PremiumSubscriptionOptionBase extends TlConstructor {
  /// Predicate Premium Subscription Option constructor.
  const PremiumSubscriptionOptionBase._() : super._();
}

/// Premium Subscription Option.
///
/// ID: `5f2d1df2`.
class PremiumSubscriptionOption extends PremiumSubscriptionOptionBase {
  /// Premium Subscription Option constructor.
  const PremiumSubscriptionOption({
    required this.flags,
    required this.transaction,
    required this.months,
    required this.currency,
    required this.amount,
    required this.botUrl,
    required this.storeProduct,
  }) : super._();

  /// Deserialize.
  factory PremiumSubscriptionOption.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// current: bit
  bool get current => _bit(flags, 1);

  /// can_purchase_upgrade: bit
  bool get canPurchaseUpgrade => _bit(flags, 2);

  /// Transaction.
  final String? transaction;

  /// If [transaction] exists.
  bool get hasTransactionField => _bit(flags, 3);

  /// Months.
  final int months;

  /// Currency.
  final String currency;

  /// Amount.
  final int amount;

  /// Bot Url.
  final String botUrl;

  /// Store Product.
  final String? storeProduct;

  /// If [storeProduct] exists.
  bool get hasStoreProductField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Send As Peer.
abstract class SendAsPeerBase extends TlConstructor {
  /// Predicate Send As Peer constructor.
  const SendAsPeerBase._() : super._();
}

/// Send As Peer.
///
/// ID: `b81c7034`.
class SendAsPeer extends SendAsPeerBase {
  /// Send As Peer constructor.
  const SendAsPeer({
    required this.flags,
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory SendAsPeer.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// premium_required: bit
  bool get premiumRequired => _bit(flags, 0);

  /// Peer.
  final PeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Message Extended Media.
abstract class MessageExtendedMediaBase extends TlConstructor {
  /// Predicate Message Extended Media constructor.
  const MessageExtendedMediaBase._() : super._();
}

/// Message Extended Media Preview.
///
/// ID: `ad628cc8`.
class MessageExtendedMediaPreview extends MessageExtendedMediaBase {
  /// Message Extended Media Preview constructor.
  const MessageExtendedMediaPreview({
    required this.flags,
    required this.w,
    required this.h,
    required this.thumb,
    required this.videoDuration,
  }) : super._();

  /// Deserialize.
  factory MessageExtendedMediaPreview.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// W.
  final int? w;

  /// If [w] exists.
  bool get hasWField => _bit(flags, 0);

  /// H.
  final int? h;

  /// If [h] exists.
  bool get hasHField => _bit(flags, 0);

  /// Thumb.
  final PhotoSizeBase? thumb;

  /// If [thumb] exists.
  bool get hasThumbField => _bit(flags, 1);

  /// Video Duration.
  final int? videoDuration;

  /// If [videoDuration] exists.
  bool get hasVideoDurationField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Extended Media.
///
/// ID: `ee479c64`.
class MessageExtendedMedia extends MessageExtendedMediaBase {
  /// Message Extended Media constructor.
  const MessageExtendedMedia({
    required this.media,
  }) : super._();

  /// Deserialize.
  factory MessageExtendedMedia.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Media.
  final MessageMediaBase media;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Sticker Keyword.
abstract class StickerKeywordBase extends TlConstructor {
  /// Predicate Sticker Keyword constructor.
  const StickerKeywordBase._() : super._();
}

/// Sticker Keyword.
///
/// ID: `fcfeb29c`.
class StickerKeyword extends StickerKeywordBase {
  /// Sticker Keyword constructor.
  const StickerKeyword({
    required this.documentId,
    required this.keyword,
  }) : super._();

  /// Deserialize.
  factory StickerKeyword.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Document Id.
  final int documentId;

  /// Keyword.
  final List<String> keyword;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Username.
abstract class UsernameBase extends TlConstructor {
  /// Predicate Username constructor.
  const UsernameBase._() : super._();
}

/// Username.
///
/// ID: `b4073647`.
class Username extends UsernameBase {
  /// Username constructor.
  const Username({
    required this.flags,
    required this.username,
  }) : super._();

  /// Deserialize.
  factory Username.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// editable: bit
  bool get editable => _bit(flags, 0);

  /// active: bit
  bool get active => _bit(flags, 1);

  /// Username.
  final String username;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Forum Topic.
abstract class ForumTopicBase extends TlConstructor {
  /// Predicate Forum Topic constructor.
  const ForumTopicBase._() : super._();
}

/// Forum Topic Deleted.
///
/// ID: `023f109b`.
class ForumTopicDeleted extends ForumTopicBase {
  /// Forum Topic Deleted constructor.
  const ForumTopicDeleted({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory ForumTopicDeleted.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Forum Topic.
///
/// ID: `71701da9`.
class ForumTopic extends ForumTopicBase {
  /// Forum Topic constructor.
  const ForumTopic({
    required this.flags,
    required this.id,
    required this.date,
    required this.title,
    required this.iconColor,
    required this.iconEmojiId,
    required this.topMessage,
    required this.readInboxMaxId,
    required this.readOutboxMaxId,
    required this.unreadCount,
    required this.unreadMentionsCount,
    required this.unreadReactionsCount,
    required this.fromId,
    required this.notifySettings,
    required this.draft,
  }) : super._();

  /// Deserialize.
  factory ForumTopic.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// my: bit
  bool get my => _bit(flags, 1);

  /// closed: bit
  bool get closed => _bit(flags, 2);

  /// pinned: bit
  bool get pinned => _bit(flags, 3);

  /// short: bit
  bool get short => _bit(flags, 5);

  /// hidden: bit
  bool get hidden => _bit(flags, 6);

  /// Id.
  final int id;

  /// Date.
  final int date;

  /// Title.
  final String title;

  /// Icon Color.
  final int iconColor;

  /// Icon Emoji Id.
  final int? iconEmojiId;

  /// If [iconEmojiId] exists.
  bool get hasIconEmojiIdField => _bit(flags, 0);

  /// Top Message.
  final int topMessage;

  /// Read Inbox Max Id.
  final int readInboxMaxId;

  /// Read Outbox Max Id.
  final int readOutboxMaxId;

  /// Unread Count.
  final int unreadCount;

  /// Unread Mentions Count.
  final int unreadMentionsCount;

  /// Unread Reactions Count.
  final int unreadReactionsCount;

  /// From Id.
  final PeerBase fromId;

  /// Notify Settings.
  final PeerNotifySettingsBase notifySettings;

  /// Draft.
  final DraftMessageBase? draft;

  /// If [draft] exists.
  bool get hasDraftField => _bit(flags, 4);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Forum Topics.
abstract class MessagesForumTopicsBase extends TlConstructor {
  /// Predicate Messages Forum Topics constructor.
  const MessagesForumTopicsBase._() : super._();
}

/// Messages Forum Topics.
///
/// ID: `367617d3`.
class MessagesForumTopics extends MessagesForumTopicsBase {
  /// Messages Forum Topics constructor.
  const MessagesForumTopics({
    required this.flags,
    required this.count,
    required this.topics,
    required this.messages,
    required this.chats,
    required this.users,
    required this.pts,
  }) : super._();

  /// Deserialize.
  factory MessagesForumTopics.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// order_by_create_date: bit
  bool get orderByCreateDate => _bit(flags, 0);

  /// Count.
  final int count;

  /// Topics.
  final List<ForumTopicBase> topics;

  /// Messages.
  final List<MessageBase> messages;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Pts.
  final int pts;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Default History T T L.
abstract class DefaultHistoryTTLBase extends TlConstructor {
  /// Predicate Default History T T L constructor.
  const DefaultHistoryTTLBase._() : super._();
}

/// Default History T T L.
///
/// ID: `43b46b20`.
class DefaultHistoryTTL extends DefaultHistoryTTLBase {
  /// Default History T T L constructor.
  const DefaultHistoryTTL({
    required this.period,
  }) : super._();

  /// Deserialize.
  factory DefaultHistoryTTL.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Period.
  final int period;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Exported Contact Token.
abstract class ExportedContactTokenBase extends TlConstructor {
  /// Predicate Exported Contact Token constructor.
  const ExportedContactTokenBase._() : super._();
}

/// Exported Contact Token.
///
/// ID: `41bf109b`.
class ExportedContactToken extends ExportedContactTokenBase {
  /// Exported Contact Token constructor.
  const ExportedContactToken({
    required this.url,
    required this.expires,
  }) : super._();

  /// Deserialize.
  factory ExportedContactToken.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Url.
  final String url;

  /// Expires.
  final int expires;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Request Peer Type.
abstract class RequestPeerTypeBase extends TlConstructor {
  /// Predicate Request Peer Type constructor.
  const RequestPeerTypeBase._() : super._();
}

/// Request Peer Type User.
///
/// ID: `5f3b8a00`.
class RequestPeerTypeUser extends RequestPeerTypeBase {
  /// Request Peer Type User constructor.
  const RequestPeerTypeUser({
    required this.flags,
    required this.bot,
    required this.premium,
  }) : super._();

  /// Deserialize.
  factory RequestPeerTypeUser.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Bot.
  final bool? bot;

  /// If [bot] exists.
  bool get hasBotField => _bit(flags, 0);

  /// Premium.
  final bool? premium;

  /// If [premium] exists.
  bool get hasPremiumField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Request Peer Type Chat.
///
/// ID: `c9f06e1b`.
class RequestPeerTypeChat extends RequestPeerTypeBase {
  /// Request Peer Type Chat constructor.
  const RequestPeerTypeChat({
    required this.flags,
    required this.hasUsername,
    required this.forum,
    required this.userAdminRights,
    required this.botAdminRights,
  }) : super._();

  /// Deserialize.
  factory RequestPeerTypeChat.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// creator: bit
  bool get creator => _bit(flags, 0);

  /// bot_participant: bit
  bool get botParticipant => _bit(flags, 5);

  /// Has Username.
  final bool? hasUsername;

  /// If [hasUsername] exists.
  bool get hasHasUsernameField => _bit(flags, 3);

  /// Forum.
  final bool? forum;

  /// If [forum] exists.
  bool get hasForumField => _bit(flags, 4);

  /// User Admin Rights.
  final ChatAdminRightsBase? userAdminRights;

  /// If [userAdminRights] exists.
  bool get hasUserAdminRightsField => _bit(flags, 1);

  /// Bot Admin Rights.
  final ChatAdminRightsBase? botAdminRights;

  /// If [botAdminRights] exists.
  bool get hasBotAdminRightsField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Request Peer Type Broadcast.
///
/// ID: `339bef6c`.
class RequestPeerTypeBroadcast extends RequestPeerTypeBase {
  /// Request Peer Type Broadcast constructor.
  const RequestPeerTypeBroadcast({
    required this.flags,
    required this.hasUsername,
    required this.userAdminRights,
    required this.botAdminRights,
  }) : super._();

  /// Deserialize.
  factory RequestPeerTypeBroadcast.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// creator: bit
  bool get creator => _bit(flags, 0);

  /// Has Username.
  final bool? hasUsername;

  /// If [hasUsername] exists.
  bool get hasHasUsernameField => _bit(flags, 3);

  /// User Admin Rights.
  final ChatAdminRightsBase? userAdminRights;

  /// If [userAdminRights] exists.
  bool get hasUserAdminRightsField => _bit(flags, 1);

  /// Bot Admin Rights.
  final ChatAdminRightsBase? botAdminRights;

  /// If [botAdminRights] exists.
  bool get hasBotAdminRightsField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Emoji List.
abstract class EmojiListBase extends TlConstructor {
  /// Predicate Emoji List constructor.
  const EmojiListBase._() : super._();
}

/// Emoji List Not Modified.
///
/// ID: `481eadfa`.
class EmojiListNotModified extends EmojiListBase {
  /// Emoji List Not Modified constructor.
  const EmojiListNotModified() : super._();

  /// Deserialize.
  factory EmojiListNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Emoji List.
///
/// ID: `7a1e11d1`.
class EmojiList extends EmojiListBase {
  /// Emoji List constructor.
  const EmojiList({
    required this.hash,
    required this.documentId,
  }) : super._();

  /// Deserialize.
  factory EmojiList.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Document Id.
  final List<int> documentId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Emoji Group.
abstract class EmojiGroupBase extends TlConstructor {
  /// Predicate Emoji Group constructor.
  const EmojiGroupBase._() : super._();
}

/// Emoji Group.
///
/// ID: `7a9abda9`.
class EmojiGroup extends EmojiGroupBase {
  /// Emoji Group constructor.
  const EmojiGroup({
    required this.title,
    required this.iconEmojiId,
    required this.emoticons,
  }) : super._();

  /// Deserialize.
  factory EmojiGroup.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Title.
  final String title;

  /// Icon Emoji Id.
  final int iconEmojiId;

  /// Emoticons.
  final List<String> emoticons;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Emoji Groups.
abstract class MessagesEmojiGroupsBase extends TlConstructor {
  /// Predicate Messages Emoji Groups constructor.
  const MessagesEmojiGroupsBase._() : super._();
}

/// Messages Emoji Groups Not Modified.
///
/// ID: `6fb4ad87`.
class MessagesEmojiGroupsNotModified extends MessagesEmojiGroupsBase {
  /// Messages Emoji Groups Not Modified constructor.
  const MessagesEmojiGroupsNotModified() : super._();

  /// Deserialize.
  factory MessagesEmojiGroupsNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Emoji Groups.
///
/// ID: `881fb94b`.
class MessagesEmojiGroups extends MessagesEmojiGroupsBase {
  /// Messages Emoji Groups constructor.
  const MessagesEmojiGroups({
    required this.hash,
    required this.groups,
  }) : super._();

  /// Deserialize.
  factory MessagesEmojiGroups.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Groups.
  final List<EmojiGroupBase> groups;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Text With Entities.
abstract class TextWithEntitiesBase extends TlConstructor {
  /// Predicate Text With Entities constructor.
  const TextWithEntitiesBase._() : super._();
}

/// Text With Entities.
///
/// ID: `751f3146`.
class TextWithEntities extends TextWithEntitiesBase {
  /// Text With Entities constructor.
  const TextWithEntities({
    required this.text,
    required this.entities,
  }) : super._();

  /// Deserialize.
  factory TextWithEntities.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final String text;

  /// Entities.
  final List<MessageEntityBase> entities;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Translated Text.
abstract class MessagesTranslatedTextBase extends TlConstructor {
  /// Predicate Messages Translated Text constructor.
  const MessagesTranslatedTextBase._() : super._();
}

/// Messages Translate Result.
///
/// ID: `33db32f8`.
class MessagesTranslateResult extends MessagesTranslatedTextBase {
  /// Messages Translate Result constructor.
  const MessagesTranslateResult({
    required this.result,
  }) : super._();

  /// Deserialize.
  factory MessagesTranslateResult.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Result.
  final List<TextWithEntitiesBase> result;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Auto Save Settings.
abstract class AutoSaveSettingsBase extends TlConstructor {
  /// Predicate Auto Save Settings constructor.
  const AutoSaveSettingsBase._() : super._();
}

/// Auto Save Settings.
///
/// ID: `c84834ce`.
class AutoSaveSettings extends AutoSaveSettingsBase {
  /// Auto Save Settings constructor.
  const AutoSaveSettings({
    required this.flags,
    required this.videoMaxSize,
  }) : super._();

  /// Deserialize.
  factory AutoSaveSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// photos: bit
  bool get photos => _bit(flags, 0);

  /// videos: bit
  bool get videos => _bit(flags, 1);

  /// Video Max Size.
  final int? videoMaxSize;

  /// If [videoMaxSize] exists.
  bool get hasVideoMaxSizeField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Auto Save Exception.
abstract class AutoSaveExceptionBase extends TlConstructor {
  /// Predicate Auto Save Exception constructor.
  const AutoSaveExceptionBase._() : super._();
}

/// Auto Save Exception.
///
/// ID: `81602d47`.
class AutoSaveException extends AutoSaveExceptionBase {
  /// Auto Save Exception constructor.
  const AutoSaveException({
    required this.peer,
    required this.settings,
  }) : super._();

  /// Deserialize.
  factory AutoSaveException.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Settings.
  final AutoSaveSettingsBase settings;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Account Auto Save Settings.
abstract class AccountAutoSaveSettingsBase extends TlConstructor {
  /// Predicate Account Auto Save Settings constructor.
  const AccountAutoSaveSettingsBase._() : super._();
}

/// Account Auto Save Settings.
///
/// ID: `4c3e069d`.
class AccountAutoSaveSettings extends AccountAutoSaveSettingsBase {
  /// Account Auto Save Settings constructor.
  const AccountAutoSaveSettings({
    required this.usersSettings,
    required this.chatsSettings,
    required this.broadcastsSettings,
    required this.exceptions,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory AccountAutoSaveSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Users Settings.
  final AutoSaveSettingsBase usersSettings;

  /// Chats Settings.
  final AutoSaveSettingsBase chatsSettings;

  /// Broadcasts Settings.
  final AutoSaveSettingsBase broadcastsSettings;

  /// Exceptions.
  final List<AutoSaveExceptionBase> exceptions;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Help App Config.
abstract class HelpAppConfigBase extends TlConstructor {
  /// Predicate Help App Config constructor.
  const HelpAppConfigBase._() : super._();
}

/// Help App Config Not Modified.
///
/// ID: `7cde641d`.
class HelpAppConfigNotModified extends HelpAppConfigBase {
  /// Help App Config Not Modified constructor.
  const HelpAppConfigNotModified() : super._();

  /// Deserialize.
  factory HelpAppConfigNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help App Config.
///
/// ID: `dd18782e`.
class HelpAppConfig extends HelpAppConfigBase {
  /// Help App Config constructor.
  const HelpAppConfig({
    required this.hash,
    required this.config,
  }) : super._();

  /// Deserialize.
  factory HelpAppConfig.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Config.
  final JSONValueBase config;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Bot App.
abstract class InputBotAppBase extends TlConstructor {
  /// Predicate Input Bot App constructor.
  const InputBotAppBase._() : super._();
}

/// Input Bot App I D.
///
/// ID: `a920bd7a`.
class InputBotAppID extends InputBotAppBase {
  /// Input Bot App I D constructor.
  const InputBotAppID({
    required this.id,
    required this.accessHash,
  }) : super._();

  /// Deserialize.
  factory InputBotAppID.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Bot App Short Name.
///
/// ID: `908c0407`.
class InputBotAppShortName extends InputBotAppBase {
  /// Input Bot App Short Name constructor.
  const InputBotAppShortName({
    required this.botId,
    required this.shortName,
  }) : super._();

  /// Deserialize.
  factory InputBotAppShortName.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Bot Id.
  final InputUserBase botId;

  /// Short Name.
  final String shortName;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Bot App.
abstract class BotAppBase extends TlConstructor {
  /// Predicate Bot App constructor.
  const BotAppBase._() : super._();
}

/// Bot App Not Modified.
///
/// ID: `5da674b7`.
class BotAppNotModified extends BotAppBase {
  /// Bot App Not Modified constructor.
  const BotAppNotModified() : super._();

  /// Deserialize.
  factory BotAppNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bot App.
///
/// ID: `95fcd1d6`.
class BotApp extends BotAppBase {
  /// Bot App constructor.
  const BotApp({
    required this.flags,
    required this.id,
    required this.accessHash,
    required this.shortName,
    required this.title,
    required this.description,
    required this.photo,
    required this.document,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory BotApp.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Id.
  final int id;

  /// Access Hash.
  final int accessHash;

  /// Short Name.
  final String shortName;

  /// Title.
  final String title;

  /// Description.
  final String description;

  /// Photo.
  final PhotoBase photo;

  /// Document.
  final DocumentBase? document;

  /// If [document] exists.
  bool get hasDocumentField => _bit(flags, 0);

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Bot App.
abstract class MessagesBotAppBase extends TlConstructor {
  /// Predicate Messages Bot App constructor.
  const MessagesBotAppBase._() : super._();
}

/// Messages Bot App.
///
/// ID: `eb50adf5`.
class MessagesBotApp extends MessagesBotAppBase {
  /// Messages Bot App constructor.
  const MessagesBotApp({
    required this.flags,
    required this.app,
  }) : super._();

  /// Deserialize.
  factory MessagesBotApp.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// inactive: bit
  bool get inactive => _bit(flags, 0);

  /// request_write_access: bit
  bool get requestWriteAccess => _bit(flags, 1);

  /// has_settings: bit
  bool get hasSettings => _bit(flags, 2);

  /// App.
  final BotAppBase app;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate App Web View Result.
abstract class AppWebViewResultBase extends TlConstructor {
  /// Predicate App Web View Result constructor.
  const AppWebViewResultBase._() : super._();
}

/// App Web View Result Url.
///
/// ID: `3c1b4f0d`.
class AppWebViewResultUrl extends AppWebViewResultBase {
  /// App Web View Result Url constructor.
  const AppWebViewResultUrl({
    required this.url,
  }) : super._();

  /// Deserialize.
  factory AppWebViewResultUrl.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Url.
  final String url;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Inline Bot Web View.
abstract class InlineBotWebViewBase extends TlConstructor {
  /// Predicate Inline Bot Web View constructor.
  const InlineBotWebViewBase._() : super._();
}

/// Inline Bot Web View.
///
/// ID: `b57295d5`.
class InlineBotWebView extends InlineBotWebViewBase {
  /// Inline Bot Web View constructor.
  const InlineBotWebView({
    required this.text,
    required this.url,
  }) : super._();

  /// Deserialize.
  factory InlineBotWebView.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Text.
  final String text;

  /// Url.
  final String url;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Read Participant Date.
abstract class ReadParticipantDateBase extends TlConstructor {
  /// Predicate Read Participant Date constructor.
  const ReadParticipantDateBase._() : super._();
}

/// Read Participant Date.
///
/// ID: `4a4ff172`.
class ReadParticipantDate extends ReadParticipantDateBase {
  /// Read Participant Date constructor.
  const ReadParticipantDate({
    required this.userId,
    required this.date,
  }) : super._();

  /// Deserialize.
  factory ReadParticipantDate.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final int userId;

  /// Date.
  final int date;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Chatlist.
abstract class InputChatlistBase extends TlConstructor {
  /// Predicate Input Chatlist constructor.
  const InputChatlistBase._() : super._();
}

/// Input Chatlist Dialog Filter.
///
/// ID: `f3e0da33`.
class InputChatlistDialogFilter extends InputChatlistBase {
  /// Input Chatlist Dialog Filter constructor.
  const InputChatlistDialogFilter({
    required this.filterId,
  }) : super._();

  /// Deserialize.
  factory InputChatlistDialogFilter.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Filter Id.
  final int filterId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Exported Chatlist Invite.
abstract class ExportedChatlistInviteBase extends TlConstructor {
  /// Predicate Exported Chatlist Invite constructor.
  const ExportedChatlistInviteBase._() : super._();
}

/// Exported Chatlist Invite.
///
/// ID: `0c5181ac`.
class ExportedChatlistInvite extends ExportedChatlistInviteBase {
  /// Exported Chatlist Invite constructor.
  const ExportedChatlistInvite({
    required this.flags,
    required this.title,
    required this.url,
    required this.peers,
  }) : super._();

  /// Deserialize.
  factory ExportedChatlistInvite.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Title.
  final String title;

  /// Url.
  final String url;

  /// Peers.
  final List<PeerBase> peers;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Chatlists Exported Chatlist Invite.
abstract class ChatlistsExportedChatlistInviteBase extends TlConstructor {
  /// Predicate Chatlists Exported Chatlist Invite constructor.
  const ChatlistsExportedChatlistInviteBase._() : super._();
}

/// Chatlists Exported Chatlist Invite.
///
/// ID: `10e6e3a6`.
class ChatlistsExportedChatlistInvite
    extends ChatlistsExportedChatlistInviteBase {
  /// Chatlists Exported Chatlist Invite constructor.
  const ChatlistsExportedChatlistInvite({
    required this.filter,
    required this.invite,
  }) : super._();

  /// Deserialize.
  factory ChatlistsExportedChatlistInvite.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Filter.
  final DialogFilterBase filter;

  /// Invite.
  final ExportedChatlistInviteBase invite;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Chatlists Exported Invites.
abstract class ChatlistsExportedInvitesBase extends TlConstructor {
  /// Predicate Chatlists Exported Invites constructor.
  const ChatlistsExportedInvitesBase._() : super._();
}

/// Chatlists Exported Invites.
///
/// ID: `10ab6dc7`.
class ChatlistsExportedInvites extends ChatlistsExportedInvitesBase {
  /// Chatlists Exported Invites constructor.
  const ChatlistsExportedInvites({
    required this.invites,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory ChatlistsExportedInvites.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Invites.
  final List<ExportedChatlistInviteBase> invites;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Chatlists Chatlist Invite.
abstract class ChatlistsChatlistInviteBase extends TlConstructor {
  /// Predicate Chatlists Chatlist Invite constructor.
  const ChatlistsChatlistInviteBase._() : super._();
}

/// Chatlists Chatlist Invite Already.
///
/// ID: `fa87f659`.
class ChatlistsChatlistInviteAlready extends ChatlistsChatlistInviteBase {
  /// Chatlists Chatlist Invite Already constructor.
  const ChatlistsChatlistInviteAlready({
    required this.filterId,
    required this.missingPeers,
    required this.alreadyPeers,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory ChatlistsChatlistInviteAlready.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Filter Id.
  final int filterId;

  /// Missing Peers.
  final List<PeerBase> missingPeers;

  /// Already Peers.
  final List<PeerBase> alreadyPeers;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Chatlists Chatlist Invite.
///
/// ID: `1dcd839d`.
class ChatlistsChatlistInvite extends ChatlistsChatlistInviteBase {
  /// Chatlists Chatlist Invite constructor.
  const ChatlistsChatlistInvite({
    required this.flags,
    required this.title,
    required this.emoticon,
    required this.peers,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory ChatlistsChatlistInvite.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Title.
  final String title;

  /// Emoticon.
  final String? emoticon;

  /// If [emoticon] exists.
  bool get hasEmoticonField => _bit(flags, 0);

  /// Peers.
  final List<PeerBase> peers;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Chatlists Chatlist Updates.
abstract class ChatlistsChatlistUpdatesBase extends TlConstructor {
  /// Predicate Chatlists Chatlist Updates constructor.
  const ChatlistsChatlistUpdatesBase._() : super._();
}

/// Chatlists Chatlist Updates.
///
/// ID: `93bd878d`.
class ChatlistsChatlistUpdates extends ChatlistsChatlistUpdatesBase {
  /// Chatlists Chatlist Updates constructor.
  const ChatlistsChatlistUpdates({
    required this.missingPeers,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory ChatlistsChatlistUpdates.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Missing Peers.
  final List<PeerBase> missingPeers;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Bots Bot Info.
abstract class BotsBotInfoBase extends TlConstructor {
  /// Predicate Bots Bot Info constructor.
  const BotsBotInfoBase._() : super._();
}

/// Bots Bot Info.
///
/// ID: `e8a775b0`.
class BotsBotInfo extends BotsBotInfoBase {
  /// Bots Bot Info constructor.
  const BotsBotInfo({
    required this.name,
    required this.about,
    required this.description,
  }) : super._();

  /// Deserialize.
  factory BotsBotInfo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Name.
  final String name;

  /// About.
  final String about;

  /// Description.
  final String description;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Message Peer Vote.
abstract class MessagePeerVoteBase extends TlConstructor {
  /// Predicate Message Peer Vote constructor.
  const MessagePeerVoteBase._() : super._();
}

/// Message Peer Vote.
///
/// ID: `b6cc2d5c`.
class MessagePeerVote extends MessagePeerVoteBase {
  /// Message Peer Vote constructor.
  const MessagePeerVote({
    required this.peer,
    required this.option,
    required this.date,
  }) : super._();

  /// Deserialize.
  factory MessagePeerVote.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Option.
  final Uint8List option;

  /// Date.
  final int date;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Peer Vote Input Option.
///
/// ID: `74cda504`.
class MessagePeerVoteInputOption extends MessagePeerVoteBase {
  /// Message Peer Vote Input Option constructor.
  const MessagePeerVoteInputOption({
    required this.peer,
    required this.date,
  }) : super._();

  /// Deserialize.
  factory MessagePeerVoteInputOption.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Date.
  final int date;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Message Peer Vote Multiple.
///
/// ID: `4628f6e6`.
class MessagePeerVoteMultiple extends MessagePeerVoteBase {
  /// Message Peer Vote Multiple constructor.
  const MessagePeerVoteMultiple({
    required this.peer,
    required this.options,
    required this.date,
  }) : super._();

  /// Deserialize.
  factory MessagePeerVoteMultiple.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Options.
  final List<Uint8List> options;

  /// Date.
  final int date;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Sponsored Web Page.
abstract class SponsoredWebPageBase extends TlConstructor {
  /// Predicate Sponsored Web Page constructor.
  const SponsoredWebPageBase._() : super._();
}

/// Sponsored Web Page.
///
/// ID: `3db8ec63`.
class SponsoredWebPage extends SponsoredWebPageBase {
  /// Sponsored Web Page constructor.
  const SponsoredWebPage({
    required this.flags,
    required this.url,
    required this.siteName,
    required this.photo,
  }) : super._();

  /// Deserialize.
  factory SponsoredWebPage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Url.
  final String url;

  /// Site Name.
  final String siteName;

  /// Photo.
  final PhotoBase? photo;

  /// If [photo] exists.
  bool get hasPhotoField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Story Views.
abstract class StoryViewsBase extends TlConstructor {
  /// Predicate Story Views constructor.
  const StoryViewsBase._() : super._();
}

/// Story Views.
///
/// ID: `8d595cd6`.
class StoryViews extends StoryViewsBase {
  /// Story Views constructor.
  const StoryViews({
    required this.flags,
    required this.viewsCount,
    required this.forwardsCount,
    required this.reactions,
    required this.reactionsCount,
    required this.recentViewers,
  }) : super._();

  /// Deserialize.
  factory StoryViews.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// has_viewers: bit
  bool get hasViewers => _bit(flags, 1);

  /// Views Count.
  final int viewsCount;

  /// Forwards Count.
  final int? forwardsCount;

  /// If [forwardsCount] exists.
  bool get hasForwardsCountField => _bit(flags, 2);

  /// Reactions.
  final List<ReactionCountBase>? reactions;

  /// If [reactions] exists.
  bool get hasReactionsField => _bit(flags, 3);

  /// Reactions Count.
  final int? reactionsCount;

  /// If [reactionsCount] exists.
  bool get hasReactionsCountField => _bit(flags, 4);

  /// Recent Viewers.
  final List<int>? recentViewers;

  /// If [recentViewers] exists.
  bool get hasRecentViewersField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Story Item.
abstract class StoryItemBase extends TlConstructor {
  /// Predicate Story Item constructor.
  const StoryItemBase._() : super._();
}

/// Story Item Deleted.
///
/// ID: `51e6ee4f`.
class StoryItemDeleted extends StoryItemBase {
  /// Story Item Deleted constructor.
  const StoryItemDeleted({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory StoryItemDeleted.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Story Item Skipped.
///
/// ID: `ffadc913`.
class StoryItemSkipped extends StoryItemBase {
  /// Story Item Skipped constructor.
  const StoryItemSkipped({
    required this.flags,
    required this.id,
    required this.date,
    required this.expireDate,
  }) : super._();

  /// Deserialize.
  factory StoryItemSkipped.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// close_friends: bit
  bool get closeFriends => _bit(flags, 8);

  /// Id.
  final int id;

  /// Date.
  final int date;

  /// Expire Date.
  final int expireDate;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Story Item.
///
/// ID: `af6365a1`.
class StoryItem extends StoryItemBase {
  /// Story Item constructor.
  const StoryItem({
    required this.flags,
    required this.id,
    required this.date,
    required this.fwdFrom,
    required this.expireDate,
    required this.caption,
    required this.entities,
    required this.media,
    required this.mediaAreas,
    required this.privacy,
    required this.views,
    required this.sentReaction,
  }) : super._();

  /// Deserialize.
  factory StoryItem.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// pinned: bit
  bool get pinned => _bit(flags, 5);

  /// public: bit
  bool get public => _bit(flags, 7);

  /// close_friends: bit
  bool get closeFriends => _bit(flags, 8);

  /// min: bit
  bool get min => _bit(flags, 9);

  /// noforwards: bit
  bool get noforwards => _bit(flags, 10);

  /// edited: bit
  bool get edited => _bit(flags, 11);

  /// contacts: bit
  bool get contacts => _bit(flags, 12);

  /// selected_contacts: bit
  bool get selectedContacts => _bit(flags, 13);

  /// out: bit
  bool get out => _bit(flags, 16);

  /// Id.
  final int id;

  /// Date.
  final int date;

  /// Fwd From.
  final StoryFwdHeaderBase? fwdFrom;

  /// If [fwdFrom] exists.
  bool get hasFwdFromField => _bit(flags, 17);

  /// Expire Date.
  final int expireDate;

  /// Caption.
  final String? caption;

  /// If [caption] exists.
  bool get hasCaptionField => _bit(flags, 0);

  /// Entities.
  final List<MessageEntityBase>? entities;

  /// If [entities] exists.
  bool get hasEntitiesField => _bit(flags, 1);

  /// Media.
  final MessageMediaBase media;

  /// Media Areas.
  final List<MediaAreaBase>? mediaAreas;

  /// If [mediaAreas] exists.
  bool get hasMediaAreasField => _bit(flags, 14);

  /// Privacy.
  final List<PrivacyRuleBase>? privacy;

  /// If [privacy] exists.
  bool get hasPrivacyField => _bit(flags, 2);

  /// Views.
  final StoryViewsBase? views;

  /// If [views] exists.
  bool get hasViewsField => _bit(flags, 3);

  /// Sent Reaction.
  final ReactionBase? sentReaction;

  /// If [sentReaction] exists.
  bool get hasSentReactionField => _bit(flags, 15);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Stories All Stories.
abstract class StoriesAllStoriesBase extends TlConstructor {
  /// Predicate Stories All Stories constructor.
  const StoriesAllStoriesBase._() : super._();
}

/// Stories All Stories Not Modified.
///
/// ID: `1158fe3e`.
class StoriesAllStoriesNotModified extends StoriesAllStoriesBase {
  /// Stories All Stories Not Modified constructor.
  const StoriesAllStoriesNotModified({
    required this.flags,
    required this.state,
    required this.stealthMode,
  }) : super._();

  /// Deserialize.
  factory StoriesAllStoriesNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// State.
  final String state;

  /// Stealth Mode.
  final StoriesStealthModeBase stealthMode;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stories All Stories.
///
/// ID: `6efc5e81`.
class StoriesAllStories extends StoriesAllStoriesBase {
  /// Stories All Stories constructor.
  const StoriesAllStories({
    required this.flags,
    required this.count,
    required this.state,
    required this.peerStories,
    required this.chats,
    required this.users,
    required this.stealthMode,
  }) : super._();

  /// Deserialize.
  factory StoriesAllStories.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// has_more: bit
  bool get hasMore => _bit(flags, 0);

  /// Count.
  final int count;

  /// State.
  final String state;

  /// Peer Stories.
  final List<PeerStoriesBase> peerStories;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Stealth Mode.
  final StoriesStealthModeBase stealthMode;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Stories Stories.
abstract class StoriesStoriesBase extends TlConstructor {
  /// Predicate Stories Stories constructor.
  const StoriesStoriesBase._() : super._();
}

/// Stories Stories.
///
/// ID: `5dd8c3c8`.
class StoriesStories extends StoriesStoriesBase {
  /// Stories Stories constructor.
  const StoriesStories({
    required this.count,
    required this.stories,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory StoriesStories.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Count.
  final int count;

  /// Stories.
  final List<StoryItemBase> stories;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Story View.
abstract class StoryViewBase extends TlConstructor {
  /// Predicate Story View constructor.
  const StoryViewBase._() : super._();
}

/// Story View.
///
/// ID: `b0bdeac5`.
class StoryView extends StoryViewBase {
  /// Story View constructor.
  const StoryView({
    required this.flags,
    required this.userId,
    required this.date,
    required this.reaction,
  }) : super._();

  /// Deserialize.
  factory StoryView.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// blocked: bit
  bool get blocked => _bit(flags, 0);

  /// blocked_my_stories_from: bit
  bool get blockedMyStoriesFrom => _bit(flags, 1);

  /// User Id.
  final int userId;

  /// Date.
  final int date;

  /// Reaction.
  final ReactionBase? reaction;

  /// If [reaction] exists.
  bool get hasReactionField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Story View Public Forward.
///
/// ID: `9083670b`.
class StoryViewPublicForward extends StoryViewBase {
  /// Story View Public Forward constructor.
  const StoryViewPublicForward({
    required this.flags,
    required this.message,
  }) : super._();

  /// Deserialize.
  factory StoryViewPublicForward.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// blocked: bit
  bool get blocked => _bit(flags, 0);

  /// blocked_my_stories_from: bit
  bool get blockedMyStoriesFrom => _bit(flags, 1);

  /// Message.
  final MessageBase message;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Story View Public Repost.
///
/// ID: `bd74cf49`.
class StoryViewPublicRepost extends StoryViewBase {
  /// Story View Public Repost constructor.
  const StoryViewPublicRepost({
    required this.flags,
    required this.peerId,
    required this.story,
  }) : super._();

  /// Deserialize.
  factory StoryViewPublicRepost.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// blocked: bit
  bool get blocked => _bit(flags, 0);

  /// blocked_my_stories_from: bit
  bool get blockedMyStoriesFrom => _bit(flags, 1);

  /// Peer Id.
  final PeerBase peerId;

  /// Story.
  final StoryItemBase story;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Stories Story Views List.
abstract class StoriesStoryViewsListBase extends TlConstructor {
  /// Predicate Stories Story Views List constructor.
  const StoriesStoryViewsListBase._() : super._();
}

/// Stories Story Views List.
///
/// ID: `59d78fc5`.
class StoriesStoryViewsList extends StoriesStoryViewsListBase {
  /// Stories Story Views List constructor.
  const StoriesStoryViewsList({
    required this.flags,
    required this.count,
    required this.viewsCount,
    required this.forwardsCount,
    required this.reactionsCount,
    required this.views,
    required this.chats,
    required this.users,
    required this.nextOffset,
  }) : super._();

  /// Deserialize.
  factory StoriesStoryViewsList.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Count.
  final int count;

  /// Views Count.
  final int viewsCount;

  /// Forwards Count.
  final int forwardsCount;

  /// Reactions Count.
  final int reactionsCount;

  /// Views.
  final List<StoryViewBase> views;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Next Offset.
  final String? nextOffset;

  /// If [nextOffset] exists.
  bool get hasNextOffsetField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Stories Story Views.
abstract class StoriesStoryViewsBase extends TlConstructor {
  /// Predicate Stories Story Views constructor.
  const StoriesStoryViewsBase._() : super._();
}

/// Stories Story Views.
///
/// ID: `de9eed1d`.
class StoriesStoryViews extends StoriesStoryViewsBase {
  /// Stories Story Views constructor.
  const StoriesStoryViews({
    required this.views,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory StoriesStoryViews.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Views.
  final List<StoryViewsBase> views;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Input Reply To.
abstract class InputReplyToBase extends TlConstructor {
  /// Predicate Input Reply To constructor.
  const InputReplyToBase._() : super._();
}

/// Input Reply To Message.
///
/// ID: `22c0f6d5`.
class InputReplyToMessage extends InputReplyToBase {
  /// Input Reply To Message constructor.
  const InputReplyToMessage({
    required this.flags,
    required this.replyToMsgId,
    required this.topMsgId,
    required this.replyToPeerId,
    required this.quoteText,
    required this.quoteEntities,
    required this.quoteOffset,
  }) : super._();

  /// Deserialize.
  factory InputReplyToMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Reply To Msg Id.
  final int replyToMsgId;

  /// Top Msg Id.
  final int? topMsgId;

  /// If [topMsgId] exists.
  bool get hasTopMsgIdField => _bit(flags, 0);

  /// Reply To Peer Id.
  final InputPeerBase? replyToPeerId;

  /// If [replyToPeerId] exists.
  bool get hasReplyToPeerIdField => _bit(flags, 1);

  /// Quote Text.
  final String? quoteText;

  /// If [quoteText] exists.
  bool get hasQuoteTextField => _bit(flags, 2);

  /// Quote Entities.
  final List<MessageEntityBase>? quoteEntities;

  /// If [quoteEntities] exists.
  bool get hasQuoteEntitiesField => _bit(flags, 3);

  /// Quote Offset.
  final int? quoteOffset;

  /// If [quoteOffset] exists.
  bool get hasQuoteOffsetField => _bit(flags, 4);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Reply To Story.
///
/// ID: `15b0f283`.
class InputReplyToStory extends InputReplyToBase {
  /// Input Reply To Story constructor.
  const InputReplyToStory({
    required this.userId,
    required this.storyId,
  }) : super._();

  /// Deserialize.
  factory InputReplyToStory.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final InputUserBase userId;

  /// Story Id.
  final int storyId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Exported Story Link.
abstract class ExportedStoryLinkBase extends TlConstructor {
  /// Predicate Exported Story Link constructor.
  const ExportedStoryLinkBase._() : super._();
}

/// Exported Story Link.
///
/// ID: `3fc9053b`.
class ExportedStoryLink extends ExportedStoryLinkBase {
  /// Exported Story Link constructor.
  const ExportedStoryLink({
    required this.link,
  }) : super._();

  /// Deserialize.
  factory ExportedStoryLink.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Link.
  final String link;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Stories Stealth Mode.
abstract class StoriesStealthModeBase extends TlConstructor {
  /// Predicate Stories Stealth Mode constructor.
  const StoriesStealthModeBase._() : super._();
}

/// Stories Stealth Mode.
///
/// ID: `712e27fd`.
class StoriesStealthMode extends StoriesStealthModeBase {
  /// Stories Stealth Mode constructor.
  const StoriesStealthMode({
    required this.flags,
    required this.activeUntilDate,
    required this.cooldownUntilDate,
  }) : super._();

  /// Deserialize.
  factory StoriesStealthMode.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Active Until Date.
  final int? activeUntilDate;

  /// If [activeUntilDate] exists.
  bool get hasActiveUntilDateField => _bit(flags, 0);

  /// Cooldown Until Date.
  final int? cooldownUntilDate;

  /// If [cooldownUntilDate] exists.
  bool get hasCooldownUntilDateField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Media Area Coordinates.
abstract class MediaAreaCoordinatesBase extends TlConstructor {
  /// Predicate Media Area Coordinates constructor.
  const MediaAreaCoordinatesBase._() : super._();
}

/// Media Area Coordinates.
///
/// ID: `03d1ea4e`.
class MediaAreaCoordinates extends MediaAreaCoordinatesBase {
  /// Media Area Coordinates constructor.
  const MediaAreaCoordinates({
    required this.x,
    required this.y,
    required this.w,
    required this.h,
    required this.rotation,
  }) : super._();

  /// Deserialize.
  factory MediaAreaCoordinates.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// X.
  final double x;

  /// Y.
  final double y;

  /// W.
  final double w;

  /// H.
  final double h;

  /// Rotation.
  final double rotation;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Media Area.
abstract class MediaAreaBase extends TlConstructor {
  /// Predicate Media Area constructor.
  const MediaAreaBase._() : super._();
}

/// Media Area Venue.
///
/// ID: `be82db9c`.
class MediaAreaVenue extends MediaAreaBase {
  /// Media Area Venue constructor.
  const MediaAreaVenue({
    required this.coordinates,
    required this.geo,
    required this.title,
    required this.address,
    required this.provider,
    required this.venueId,
    required this.venueType,
  }) : super._();

  /// Deserialize.
  factory MediaAreaVenue.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Coordinates.
  final MediaAreaCoordinatesBase coordinates;

  /// Geo.
  final GeoPointBase geo;

  /// Title.
  final String title;

  /// Address.
  final String address;

  /// Provider.
  final String provider;

  /// Venue Id.
  final String venueId;

  /// Venue Type.
  final String venueType;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Media Area Venue.
///
/// ID: `b282217f`.
class InputMediaAreaVenue extends MediaAreaBase {
  /// Input Media Area Venue constructor.
  const InputMediaAreaVenue({
    required this.coordinates,
    required this.queryId,
    required this.resultId,
  }) : super._();

  /// Deserialize.
  factory InputMediaAreaVenue.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Coordinates.
  final MediaAreaCoordinatesBase coordinates;

  /// Query Id.
  final int queryId;

  /// Result Id.
  final String resultId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Media Area Geo Point.
///
/// ID: `df8b3b22`.
class MediaAreaGeoPoint extends MediaAreaBase {
  /// Media Area Geo Point constructor.
  const MediaAreaGeoPoint({
    required this.coordinates,
    required this.geo,
  }) : super._();

  /// Deserialize.
  factory MediaAreaGeoPoint.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Coordinates.
  final MediaAreaCoordinatesBase coordinates;

  /// Geo.
  final GeoPointBase geo;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Media Area Suggested Reaction.
///
/// ID: `14455871`.
class MediaAreaSuggestedReaction extends MediaAreaBase {
  /// Media Area Suggested Reaction constructor.
  const MediaAreaSuggestedReaction({
    required this.flags,
    required this.coordinates,
    required this.reaction,
  }) : super._();

  /// Deserialize.
  factory MediaAreaSuggestedReaction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// dark: bit
  bool get dark => _bit(flags, 0);

  /// flipped: bit
  bool get flipped => _bit(flags, 1);

  /// Coordinates.
  final MediaAreaCoordinatesBase coordinates;

  /// Reaction.
  final ReactionBase reaction;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Media Area Channel Post.
///
/// ID: `770416af`.
class MediaAreaChannelPost extends MediaAreaBase {
  /// Media Area Channel Post constructor.
  const MediaAreaChannelPost({
    required this.coordinates,
    required this.channelId,
    required this.msgId,
  }) : super._();

  /// Deserialize.
  factory MediaAreaChannelPost.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Coordinates.
  final MediaAreaCoordinatesBase coordinates;

  /// Channel Id.
  final int channelId;

  /// Msg Id.
  final int msgId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Input Media Area Channel Post.
///
/// ID: `2271f2bf`.
class InputMediaAreaChannelPost extends MediaAreaBase {
  /// Input Media Area Channel Post constructor.
  const InputMediaAreaChannelPost({
    required this.coordinates,
    required this.channel,
    required this.msgId,
  }) : super._();

  /// Deserialize.
  factory InputMediaAreaChannelPost.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Coordinates.
  final MediaAreaCoordinatesBase coordinates;

  /// Channel.
  final InputChannelBase channel;

  /// Msg Id.
  final int msgId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Peer Stories.
abstract class PeerStoriesBase extends TlConstructor {
  /// Predicate Peer Stories constructor.
  const PeerStoriesBase._() : super._();
}

/// Peer Stories.
///
/// ID: `9a35e999`.
class PeerStories extends PeerStoriesBase {
  /// Peer Stories constructor.
  const PeerStories({
    required this.flags,
    required this.peer,
    required this.maxReadId,
    required this.stories,
  }) : super._();

  /// Deserialize.
  factory PeerStories.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Peer.
  final PeerBase peer;

  /// Max Read Id.
  final int? maxReadId;

  /// If [maxReadId] exists.
  bool get hasMaxReadIdField => _bit(flags, 0);

  /// Stories.
  final List<StoryItemBase> stories;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Stories Peer Stories.
abstract class StoriesPeerStoriesBase extends TlConstructor {
  /// Predicate Stories Peer Stories constructor.
  const StoriesPeerStoriesBase._() : super._();
}

/// Stories Peer Stories.
///
/// ID: `cae68768`.
class StoriesPeerStories extends StoriesPeerStoriesBase {
  /// Stories Peer Stories constructor.
  const StoriesPeerStories({
    required this.stories,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory StoriesPeerStories.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Stories.
  final PeerStoriesBase stories;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Web Page.
abstract class MessagesWebPageBase extends TlConstructor {
  /// Predicate Messages Web Page constructor.
  const MessagesWebPageBase._() : super._();
}

/// Messages Web Page.
///
/// ID: `fd5e12bd`.
class MessagesWebPage extends MessagesWebPageBase {
  /// Messages Web Page constructor.
  const MessagesWebPage({
    required this.webpage,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory MessagesWebPage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Webpage.
  final WebPageBase webpage;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Premium Gift Code Option.
abstract class PremiumGiftCodeOptionBase extends TlConstructor {
  /// Predicate Premium Gift Code Option constructor.
  const PremiumGiftCodeOptionBase._() : super._();
}

/// Premium Gift Code Option.
///
/// ID: `257e962b`.
class PremiumGiftCodeOption extends PremiumGiftCodeOptionBase {
  /// Premium Gift Code Option constructor.
  const PremiumGiftCodeOption({
    required this.flags,
    required this.users,
    required this.months,
    required this.storeProduct,
    required this.storeQuantity,
    required this.currency,
    required this.amount,
  }) : super._();

  /// Deserialize.
  factory PremiumGiftCodeOption.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Users.
  final int users;

  /// Months.
  final int months;

  /// Store Product.
  final String? storeProduct;

  /// If [storeProduct] exists.
  bool get hasStoreProductField => _bit(flags, 0);

  /// Store Quantity.
  final int? storeQuantity;

  /// If [storeQuantity] exists.
  bool get hasStoreQuantityField => _bit(flags, 1);

  /// Currency.
  final String currency;

  /// Amount.
  final int amount;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Payments Checked Gift Code.
abstract class PaymentsCheckedGiftCodeBase extends TlConstructor {
  /// Predicate Payments Checked Gift Code constructor.
  const PaymentsCheckedGiftCodeBase._() : super._();
}

/// Payments Checked Gift Code.
///
/// ID: `284a1096`.
class PaymentsCheckedGiftCode extends PaymentsCheckedGiftCodeBase {
  /// Payments Checked Gift Code constructor.
  const PaymentsCheckedGiftCode({
    required this.flags,
    required this.fromId,
    required this.giveawayMsgId,
    required this.toId,
    required this.date,
    required this.months,
    required this.usedDate,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory PaymentsCheckedGiftCode.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// via_giveaway: bit
  bool get viaGiveaway => _bit(flags, 2);

  /// From Id.
  final PeerBase? fromId;

  /// If [fromId] exists.
  bool get hasFromIdField => _bit(flags, 4);

  /// Giveaway Msg Id.
  final int? giveawayMsgId;

  /// If [giveawayMsgId] exists.
  bool get hasGiveawayMsgIdField => _bit(flags, 3);

  /// To Id.
  final int? toId;

  /// If [toId] exists.
  bool get hasToIdField => _bit(flags, 0);

  /// Date.
  final int date;

  /// Months.
  final int months;

  /// Used Date.
  final int? usedDate;

  /// If [usedDate] exists.
  bool get hasUsedDateField => _bit(flags, 1);

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Payments Giveaway Info.
abstract class PaymentsGiveawayInfoBase extends TlConstructor {
  /// Predicate Payments Giveaway Info constructor.
  const PaymentsGiveawayInfoBase._() : super._();
}

/// Payments Giveaway Info.
///
/// ID: `4367daa0`.
class PaymentsGiveawayInfo extends PaymentsGiveawayInfoBase {
  /// Payments Giveaway Info constructor.
  const PaymentsGiveawayInfo({
    required this.flags,
    required this.startDate,
    required this.joinedTooEarlyDate,
    required this.adminDisallowedChatId,
    required this.disallowedCountry,
  }) : super._();

  /// Deserialize.
  factory PaymentsGiveawayInfo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// participating: bit
  bool get participating => _bit(flags, 0);

  /// preparing_results: bit
  bool get preparingResults => _bit(flags, 3);

  /// Start Date.
  final int startDate;

  /// Joined Too Early Date.
  final int? joinedTooEarlyDate;

  /// If [joinedTooEarlyDate] exists.
  bool get hasJoinedTooEarlyDateField => _bit(flags, 1);

  /// Admin Disallowed Chat Id.
  final int? adminDisallowedChatId;

  /// If [adminDisallowedChatId] exists.
  bool get hasAdminDisallowedChatIdField => _bit(flags, 2);

  /// Disallowed Country.
  final String? disallowedCountry;

  /// If [disallowedCountry] exists.
  bool get hasDisallowedCountryField => _bit(flags, 4);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Payments Giveaway Info Results.
///
/// ID: `00cd5570`.
class PaymentsGiveawayInfoResults extends PaymentsGiveawayInfoBase {
  /// Payments Giveaway Info Results constructor.
  const PaymentsGiveawayInfoResults({
    required this.flags,
    required this.startDate,
    required this.giftCodeSlug,
    required this.finishDate,
    required this.winnersCount,
    required this.activatedCount,
  }) : super._();

  /// Deserialize.
  factory PaymentsGiveawayInfoResults.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// winner: bit
  bool get winner => _bit(flags, 0);

  /// refunded: bit
  bool get refunded => _bit(flags, 1);

  /// Start Date.
  final int startDate;

  /// Gift Code Slug.
  final String? giftCodeSlug;

  /// If [giftCodeSlug] exists.
  bool get hasGiftCodeSlugField => _bit(flags, 0);

  /// Finish Date.
  final int finishDate;

  /// Winners Count.
  final int winnersCount;

  /// Activated Count.
  final int activatedCount;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Prepaid Giveaway.
abstract class PrepaidGiveawayBase extends TlConstructor {
  /// Predicate Prepaid Giveaway constructor.
  const PrepaidGiveawayBase._() : super._();
}

/// Prepaid Giveaway.
///
/// ID: `b2539d54`.
class PrepaidGiveaway extends PrepaidGiveawayBase {
  /// Prepaid Giveaway constructor.
  const PrepaidGiveaway({
    required this.id,
    required this.months,
    required this.quantity,
    required this.date,
  }) : super._();

  /// Deserialize.
  factory PrepaidGiveaway.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Months.
  final int months;

  /// Quantity.
  final int quantity;

  /// Date.
  final int date;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Boost.
abstract class BoostBase extends TlConstructor {
  /// Predicate Boost constructor.
  const BoostBase._() : super._();
}

/// Boost.
///
/// ID: `2a1c8c71`.
class Boost extends BoostBase {
  /// Boost constructor.
  const Boost({
    required this.flags,
    required this.id,
    required this.userId,
    required this.giveawayMsgId,
    required this.date,
    required this.expires,
    required this.usedGiftSlug,
    required this.multiplier,
  }) : super._();

  /// Deserialize.
  factory Boost.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// gift: bit
  bool get gift => _bit(flags, 1);

  /// giveaway: bit
  bool get giveaway => _bit(flags, 2);

  /// unclaimed: bit
  bool get unclaimed => _bit(flags, 3);

  /// Id.
  final String id;

  /// User Id.
  final int? userId;

  /// If [userId] exists.
  bool get hasUserIdField => _bit(flags, 0);

  /// Giveaway Msg Id.
  final int? giveawayMsgId;

  /// If [giveawayMsgId] exists.
  bool get hasGiveawayMsgIdField => _bit(flags, 2);

  /// Date.
  final int date;

  /// Expires.
  final int expires;

  /// Used Gift Slug.
  final String? usedGiftSlug;

  /// If [usedGiftSlug] exists.
  bool get hasUsedGiftSlugField => _bit(flags, 4);

  /// Multiplier.
  final int? multiplier;

  /// If [multiplier] exists.
  bool get hasMultiplierField => _bit(flags, 5);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Premium Boosts List.
abstract class PremiumBoostsListBase extends TlConstructor {
  /// Predicate Premium Boosts List constructor.
  const PremiumBoostsListBase._() : super._();
}

/// Premium Boosts List.
///
/// ID: `86f8613c`.
class PremiumBoostsList extends PremiumBoostsListBase {
  /// Premium Boosts List constructor.
  const PremiumBoostsList({
    required this.flags,
    required this.count,
    required this.boosts,
    required this.nextOffset,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory PremiumBoostsList.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Count.
  final int count;

  /// Boosts.
  final List<BoostBase> boosts;

  /// Next Offset.
  final String? nextOffset;

  /// If [nextOffset] exists.
  bool get hasNextOffsetField => _bit(flags, 0);

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate My Boost.
abstract class MyBoostBase extends TlConstructor {
  /// Predicate My Boost constructor.
  const MyBoostBase._() : super._();
}

/// My Boost.
///
/// ID: `c448415c`.
class MyBoost extends MyBoostBase {
  /// My Boost constructor.
  const MyBoost({
    required this.flags,
    required this.slot,
    required this.peer,
    required this.date,
    required this.expires,
    required this.cooldownUntilDate,
  }) : super._();

  /// Deserialize.
  factory MyBoost.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Slot.
  final int slot;

  /// Peer.
  final PeerBase? peer;

  /// If [peer] exists.
  bool get hasPeerField => _bit(flags, 0);

  /// Date.
  final int date;

  /// Expires.
  final int expires;

  /// Cooldown Until Date.
  final int? cooldownUntilDate;

  /// If [cooldownUntilDate] exists.
  bool get hasCooldownUntilDateField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Premium My Boosts.
abstract class PremiumMyBoostsBase extends TlConstructor {
  /// Predicate Premium My Boosts constructor.
  const PremiumMyBoostsBase._() : super._();
}

/// Premium My Boosts.
///
/// ID: `9ae228e2`.
class PremiumMyBoosts extends PremiumMyBoostsBase {
  /// Premium My Boosts constructor.
  const PremiumMyBoosts({
    required this.myBoosts,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory PremiumMyBoosts.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// My Boosts.
  final List<MyBoostBase> myBoosts;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Premium Boosts Status.
abstract class PremiumBoostsStatusBase extends TlConstructor {
  /// Predicate Premium Boosts Status constructor.
  const PremiumBoostsStatusBase._() : super._();
}

/// Premium Boosts Status.
///
/// ID: `4959427a`.
class PremiumBoostsStatus extends PremiumBoostsStatusBase {
  /// Premium Boosts Status constructor.
  const PremiumBoostsStatus({
    required this.flags,
    required this.level,
    required this.currentLevelBoosts,
    required this.boosts,
    required this.giftBoosts,
    required this.nextLevelBoosts,
    required this.premiumAudience,
    required this.boostUrl,
    required this.prepaidGiveaways,
    required this.myBoostSlots,
  }) : super._();

  /// Deserialize.
  factory PremiumBoostsStatus.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// my_boost: bit
  bool get myBoost => _bit(flags, 2);

  /// Level.
  final int level;

  /// Current Level Boosts.
  final int currentLevelBoosts;

  /// Boosts.
  final int boosts;

  /// Gift Boosts.
  final int? giftBoosts;

  /// If [giftBoosts] exists.
  bool get hasGiftBoostsField => _bit(flags, 4);

  /// Next Level Boosts.
  final int? nextLevelBoosts;

  /// If [nextLevelBoosts] exists.
  bool get hasNextLevelBoostsField => _bit(flags, 0);

  /// Premium Audience.
  final StatsPercentValueBase? premiumAudience;

  /// If [premiumAudience] exists.
  bool get hasPremiumAudienceField => _bit(flags, 1);

  /// Boost Url.
  final String boostUrl;

  /// Prepaid Giveaways.
  final List<PrepaidGiveawayBase>? prepaidGiveaways;

  /// If [prepaidGiveaways] exists.
  bool get hasPrepaidGiveawaysField => _bit(flags, 3);

  /// My Boost Slots.
  final List<int>? myBoostSlots;

  /// If [myBoostSlots] exists.
  bool get hasMyBoostSlotsField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Story Fwd Header.
abstract class StoryFwdHeaderBase extends TlConstructor {
  /// Predicate Story Fwd Header constructor.
  const StoryFwdHeaderBase._() : super._();
}

/// Story Fwd Header.
///
/// ID: `b826e150`.
class StoryFwdHeader extends StoryFwdHeaderBase {
  /// Story Fwd Header constructor.
  const StoryFwdHeader({
    required this.flags,
    required this.from,
    required this.fromName,
    required this.storyId,
  }) : super._();

  /// Deserialize.
  factory StoryFwdHeader.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// modified: bit
  bool get modified => _bit(flags, 3);

  /// From.
  final PeerBase? from;

  /// If [from] exists.
  bool get hasFromField => _bit(flags, 0);

  /// From Name.
  final String? fromName;

  /// If [fromName] exists.
  bool get hasFromNameField => _bit(flags, 1);

  /// Story Id.
  final int? storyId;

  /// If [storyId] exists.
  bool get hasStoryIdField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Post Interaction Counters.
abstract class PostInteractionCountersBase extends TlConstructor {
  /// Predicate Post Interaction Counters constructor.
  const PostInteractionCountersBase._() : super._();
}

/// Post Interaction Counters Message.
///
/// ID: `e7058e7f`.
class PostInteractionCountersMessage extends PostInteractionCountersBase {
  /// Post Interaction Counters Message constructor.
  const PostInteractionCountersMessage({
    required this.msgId,
    required this.views,
    required this.forwards,
    required this.reactions,
  }) : super._();

  /// Deserialize.
  factory PostInteractionCountersMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Msg Id.
  final int msgId;

  /// Views.
  final int views;

  /// Forwards.
  final int forwards;

  /// Reactions.
  final int reactions;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Post Interaction Counters Story.
///
/// ID: `8a480e27`.
class PostInteractionCountersStory extends PostInteractionCountersBase {
  /// Post Interaction Counters Story constructor.
  const PostInteractionCountersStory({
    required this.storyId,
    required this.views,
    required this.forwards,
    required this.reactions,
  }) : super._();

  /// Deserialize.
  factory PostInteractionCountersStory.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Story Id.
  final int storyId;

  /// Views.
  final int views;

  /// Forwards.
  final int forwards;

  /// Reactions.
  final int reactions;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Stats Story Stats.
abstract class StatsStoryStatsBase extends TlConstructor {
  /// Predicate Stats Story Stats constructor.
  const StatsStoryStatsBase._() : super._();
}

/// Stats Story Stats.
///
/// ID: `50cd067c`.
class StatsStoryStats extends StatsStoryStatsBase {
  /// Stats Story Stats constructor.
  const StatsStoryStats({
    required this.viewsGraph,
    required this.reactionsByEmotionGraph,
  }) : super._();

  /// Deserialize.
  factory StatsStoryStats.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Views Graph.
  final StatsGraphBase viewsGraph;

  /// Reactions By Emotion Graph.
  final StatsGraphBase reactionsByEmotionGraph;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Public Forward.
abstract class PublicForwardBase extends TlConstructor {
  /// Predicate Public Forward constructor.
  const PublicForwardBase._() : super._();
}

/// Public Forward Message.
///
/// ID: `01f2bf4a`.
class PublicForwardMessage extends PublicForwardBase {
  /// Public Forward Message constructor.
  const PublicForwardMessage({
    required this.message,
  }) : super._();

  /// Deserialize.
  factory PublicForwardMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Message.
  final MessageBase message;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Public Forward Story.
///
/// ID: `edf3add0`.
class PublicForwardStory extends PublicForwardBase {
  /// Public Forward Story constructor.
  const PublicForwardStory({
    required this.peer,
    required this.story,
  }) : super._();

  /// Deserialize.
  factory PublicForwardStory.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final PeerBase peer;

  /// Story.
  final StoryItemBase story;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Stats Public Forwards.
abstract class StatsPublicForwardsBase extends TlConstructor {
  /// Predicate Stats Public Forwards constructor.
  const StatsPublicForwardsBase._() : super._();
}

/// Stats Public Forwards.
///
/// ID: `93037e20`.
class StatsPublicForwards extends StatsPublicForwardsBase {
  /// Stats Public Forwards constructor.
  const StatsPublicForwards({
    required this.flags,
    required this.count,
    required this.forwards,
    required this.nextOffset,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory StatsPublicForwards.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Count.
  final int count;

  /// Forwards.
  final List<PublicForwardBase> forwards;

  /// Next Offset.
  final String? nextOffset;

  /// If [nextOffset] exists.
  bool get hasNextOffsetField => _bit(flags, 0);

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Peer Color.
abstract class PeerColorBase extends TlConstructor {
  /// Predicate Peer Color constructor.
  const PeerColorBase._() : super._();
}

/// Peer Color.
///
/// ID: `b54b5acf`.
class PeerColor extends PeerColorBase {
  /// Peer Color constructor.
  const PeerColor({
    required this.flags,
    required this.color,
    required this.backgroundEmojiId,
  }) : super._();

  /// Deserialize.
  factory PeerColor.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Color.
  final int? color;

  /// If [color] exists.
  bool get hasColorField => _bit(flags, 0);

  /// Background Emoji Id.
  final int? backgroundEmojiId;

  /// If [backgroundEmojiId] exists.
  bool get hasBackgroundEmojiIdField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Help Peer Color Set.
abstract class HelpPeerColorSetBase extends TlConstructor {
  /// Predicate Help Peer Color Set constructor.
  const HelpPeerColorSetBase._() : super._();
}

/// Help Peer Color Set.
///
/// ID: `26219a58`.
class HelpPeerColorSet extends HelpPeerColorSetBase {
  /// Help Peer Color Set constructor.
  const HelpPeerColorSet({
    required this.colors,
  }) : super._();

  /// Deserialize.
  factory HelpPeerColorSet.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Colors.
  final List<int> colors;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Peer Color Profile Set.
///
/// ID: `767d61eb`.
class HelpPeerColorProfileSet extends HelpPeerColorSetBase {
  /// Help Peer Color Profile Set constructor.
  const HelpPeerColorProfileSet({
    required this.paletteColors,
    required this.bgColors,
    required this.storyColors,
  }) : super._();

  /// Deserialize.
  factory HelpPeerColorProfileSet.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Palette Colors.
  final List<int> paletteColors;

  /// Bg Colors.
  final List<int> bgColors;

  /// Story Colors.
  final List<int> storyColors;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Help Peer Color Option.
abstract class HelpPeerColorOptionBase extends TlConstructor {
  /// Predicate Help Peer Color Option constructor.
  const HelpPeerColorOptionBase._() : super._();
}

/// Help Peer Color Option.
///
/// ID: `ef8430ab`.
class HelpPeerColorOption extends HelpPeerColorOptionBase {
  /// Help Peer Color Option constructor.
  const HelpPeerColorOption({
    required this.flags,
    required this.colorId,
    required this.colors,
    required this.darkColors,
    required this.channelMinLevel,
  }) : super._();

  /// Deserialize.
  factory HelpPeerColorOption.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// hidden: bit
  bool get hidden => _bit(flags, 0);

  /// Color Id.
  final int colorId;

  /// Colors.
  final HelpPeerColorSetBase? colors;

  /// If [colors] exists.
  bool get hasColorsField => _bit(flags, 1);

  /// Dark Colors.
  final HelpPeerColorSetBase? darkColors;

  /// If [darkColors] exists.
  bool get hasDarkColorsField => _bit(flags, 2);

  /// Channel Min Level.
  final int? channelMinLevel;

  /// If [channelMinLevel] exists.
  bool get hasChannelMinLevelField => _bit(flags, 3);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Help Peer Colors.
abstract class HelpPeerColorsBase extends TlConstructor {
  /// Predicate Help Peer Colors constructor.
  const HelpPeerColorsBase._() : super._();
}

/// Help Peer Colors Not Modified.
///
/// ID: `2ba1f5ce`.
class HelpPeerColorsNotModified extends HelpPeerColorsBase {
  /// Help Peer Colors Not Modified constructor.
  const HelpPeerColorsNotModified() : super._();

  /// Deserialize.
  factory HelpPeerColorsNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Peer Colors.
///
/// ID: `00f8ed08`.
class HelpPeerColors extends HelpPeerColorsBase {
  /// Help Peer Colors constructor.
  const HelpPeerColors({
    required this.hash,
    required this.colors,
  }) : super._();

  /// Deserialize.
  factory HelpPeerColors.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Colors.
  final List<HelpPeerColorOptionBase> colors;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Story Reaction.
abstract class StoryReactionBase extends TlConstructor {
  /// Predicate Story Reaction constructor.
  const StoryReactionBase._() : super._();
}

/// Story Reaction.
///
/// ID: `6090d6d5`.
class StoryReaction extends StoryReactionBase {
  /// Story Reaction constructor.
  const StoryReaction({
    required this.peerId,
    required this.date,
    required this.reaction,
  }) : super._();

  /// Deserialize.
  factory StoryReaction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer Id.
  final PeerBase peerId;

  /// Date.
  final int date;

  /// Reaction.
  final ReactionBase reaction;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Story Reaction Public Forward.
///
/// ID: `bbab2643`.
class StoryReactionPublicForward extends StoryReactionBase {
  /// Story Reaction Public Forward constructor.
  const StoryReactionPublicForward({
    required this.message,
  }) : super._();

  /// Deserialize.
  factory StoryReactionPublicForward.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Message.
  final MessageBase message;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Story Reaction Public Repost.
///
/// ID: `cfcd0f13`.
class StoryReactionPublicRepost extends StoryReactionBase {
  /// Story Reaction Public Repost constructor.
  const StoryReactionPublicRepost({
    required this.peerId,
    required this.story,
  }) : super._();

  /// Deserialize.
  factory StoryReactionPublicRepost.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer Id.
  final PeerBase peerId;

  /// Story.
  final StoryItemBase story;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Stories Story Reactions List.
abstract class StoriesStoryReactionsListBase extends TlConstructor {
  /// Predicate Stories Story Reactions List constructor.
  const StoriesStoryReactionsListBase._() : super._();
}

/// Stories Story Reactions List.
///
/// ID: `aa5f789c`.
class StoriesStoryReactionsList extends StoriesStoryReactionsListBase {
  /// Stories Story Reactions List constructor.
  const StoriesStoryReactionsList({
    required this.flags,
    required this.count,
    required this.reactions,
    required this.chats,
    required this.users,
    required this.nextOffset,
  }) : super._();

  /// Deserialize.
  factory StoriesStoryReactionsList.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Count.
  final int count;

  /// Reactions.
  final List<StoryReactionBase> reactions;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Next Offset.
  final String? nextOffset;

  /// If [nextOffset] exists.
  bool get hasNextOffsetField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Saved Dialog.
abstract class SavedDialogBase extends TlConstructor {
  /// Predicate Saved Dialog constructor.
  const SavedDialogBase._() : super._();
}

/// Saved Dialog.
///
/// ID: `bd87cb6c`.
class SavedDialog extends SavedDialogBase {
  /// Saved Dialog constructor.
  const SavedDialog({
    required this.flags,
    required this.peer,
    required this.topMessage,
  }) : super._();

  /// Deserialize.
  factory SavedDialog.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// pinned: bit
  bool get pinned => _bit(flags, 2);

  /// Peer.
  final PeerBase peer;

  /// Top Message.
  final int topMessage;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Predicate Messages Saved Dialogs.
abstract class MessagesSavedDialogsBase extends TlConstructor {
  /// Predicate Messages Saved Dialogs constructor.
  const MessagesSavedDialogsBase._() : super._();
}

/// Messages Saved Dialogs.
///
/// ID: `f83ae221`.
class MessagesSavedDialogs extends MessagesSavedDialogsBase {
  /// Messages Saved Dialogs constructor.
  const MessagesSavedDialogs({
    required this.dialogs,
    required this.messages,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory MessagesSavedDialogs.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Dialogs.
  final List<SavedDialogBase> dialogs;

  /// Messages.
  final List<MessageBase> messages;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Saved Dialogs Slice.
///
/// ID: `44ba9dd9`.
class MessagesSavedDialogsSlice extends MessagesSavedDialogsBase {
  /// Messages Saved Dialogs Slice constructor.
  const MessagesSavedDialogsSlice({
    required this.count,
    required this.dialogs,
    required this.messages,
    required this.chats,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory MessagesSavedDialogsSlice.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Count.
  final int count;

  /// Dialogs.
  final List<SavedDialogBase> dialogs;

  /// Messages.
  final List<MessageBase> messages;

  /// Chats.
  final List<ChatBase> chats;

  /// Users.
  final List<UserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Saved Dialogs Not Modified.
///
/// ID: `c01f6fe8`.
class MessagesSavedDialogsNotModified extends MessagesSavedDialogsBase {
  /// Messages Saved Dialogs Not Modified constructor.
  const MessagesSavedDialogsNotModified({
    required this.count,
  }) : super._();

  /// Deserialize.
  factory MessagesSavedDialogsNotModified.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Count.
  final int count;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Invoke After Msg.
///
/// ID: `cb9f372d`.
class InvokeAfterMsg<X> extends TlMethod<X> {
  /// Invoke After Msg constructor.
  const InvokeAfterMsg({
    required this.msgId,
    required this.query,
  }) : super._();

  /// Deserialize.
  factory InvokeAfterMsg.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Msg Id.
  final int msgId;

  /// Query.
  final TlMethod<X> query;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Invoke After Msgs.
///
/// ID: `3dc4b4f0`.
class InvokeAfterMsgs<X> extends TlMethod<X> {
  /// Invoke After Msgs constructor.
  const InvokeAfterMsgs({
    required this.msgIds,
    required this.query,
  }) : super._();

  /// Deserialize.
  factory InvokeAfterMsgs.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Msg Ids.
  final List<int> msgIds;

  /// Query.
  final TlMethod<X> query;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Send Code.
///
/// ID: `a677244f`.
class AuthSendCode extends TlMethod<AuthSentCodeBase> {
  /// Auth Send Code constructor.
  const AuthSendCode({
    required this.phoneNumber,
    required this.apiId,
    required this.apiHash,
    required this.settings,
  }) : super._();

  /// Deserialize.
  factory AuthSendCode.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Phone Number.
  final String phoneNumber;

  /// Api Id.
  final int apiId;

  /// Api Hash.
  final String apiHash;

  /// Settings.
  final CodeSettingsBase settings;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Sign Up.
///
/// ID: `80eee427`.
class AuthSignUp extends TlMethod<AuthAuthorizationBase> {
  /// Auth Sign Up constructor.
  const AuthSignUp({
    required this.phoneNumber,
    required this.phoneCodeHash,
    required this.firstName,
    required this.lastName,
  }) : super._();

  /// Deserialize.
  factory AuthSignUp.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Phone Number.
  final String phoneNumber;

  /// Phone Code Hash.
  final String phoneCodeHash;

  /// First Name.
  final String firstName;

  /// Last Name.
  final String lastName;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Sign In.
///
/// ID: `8d52a951`.
class AuthSignIn extends TlMethod<AuthAuthorizationBase> {
  /// Auth Sign In constructor.
  const AuthSignIn({
    required this.flags,
    required this.phoneNumber,
    required this.phoneCodeHash,
    required this.phoneCode,
    required this.emailVerification,
  }) : super._();

  /// Deserialize.
  factory AuthSignIn.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Phone Number.
  final String phoneNumber;

  /// Phone Code Hash.
  final String phoneCodeHash;

  /// Phone Code.
  final String? phoneCode;

  /// If [phoneCode] exists.
  bool get hasPhoneCodeField => _bit(flags, 0);

  /// Email Verification.
  final EmailVerificationBase? emailVerification;

  /// If [emailVerification] exists.
  bool get hasEmailVerificationField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Log Out.
///
/// ID: `3e72ba19`.
class AuthLogOut extends TlMethod<AuthLoggedOutBase> {
  /// Auth Log Out constructor.
  const AuthLogOut() : super._();

  /// Deserialize.
  factory AuthLogOut.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Reset Authorizations.
///
/// ID: `9fab0d1a`.
class AuthResetAuthorizations extends TlMethod<bool> {
  /// Auth Reset Authorizations constructor.
  const AuthResetAuthorizations() : super._();

  /// Deserialize.
  factory AuthResetAuthorizations.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Export Authorization.
///
/// ID: `e5bfffcd`.
class AuthExportAuthorization extends TlMethod<AuthExportedAuthorizationBase> {
  /// Auth Export Authorization constructor.
  const AuthExportAuthorization({
    required this.dcId,
  }) : super._();

  /// Deserialize.
  factory AuthExportAuthorization.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Dc Id.
  final int dcId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Import Authorization.
///
/// ID: `a57a7dad`.
class AuthImportAuthorization extends TlMethod<AuthAuthorizationBase> {
  /// Auth Import Authorization constructor.
  const AuthImportAuthorization({
    required this.id,
    required this.bytes,
  }) : super._();

  /// Deserialize.
  factory AuthImportAuthorization.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final int id;

  /// Bytes.
  final Uint8List bytes;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Bind Temp Auth Key.
///
/// ID: `cdd42a05`.
class AuthBindTempAuthKey extends TlMethod<bool> {
  /// Auth Bind Temp Auth Key constructor.
  const AuthBindTempAuthKey({
    required this.permAuthKeyId,
    required this.nonce,
    required this.expiresAt,
    required this.encryptedMessage,
  }) : super._();

  /// Deserialize.
  factory AuthBindTempAuthKey.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Perm Auth Key Id.
  final int permAuthKeyId;

  /// Nonce.
  final int nonce;

  /// Expires At.
  final int expiresAt;

  /// Encrypted Message.
  final Uint8List encryptedMessage;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Register Device.
///
/// ID: `ec86017a`.
class AccountRegisterDevice extends TlMethod<bool> {
  /// Account Register Device constructor.
  const AccountRegisterDevice({
    required this.flags,
    required this.tokenType,
    required this.token,
    required this.appSandbox,
    required this.secret,
    required this.otherUids,
  }) : super._();

  /// Deserialize.
  factory AccountRegisterDevice.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// no_muted: bit
  bool get noMuted => _bit(flags, 0);

  /// Token Type.
  final int tokenType;

  /// Token.
  final String token;

  /// App Sandbox.
  final bool appSandbox;

  /// Secret.
  final Uint8List secret;

  /// Other Uids.
  final List<int> otherUids;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Unregister Device.
///
/// ID: `6a0d3206`.
class AccountUnregisterDevice extends TlMethod<bool> {
  /// Account Unregister Device constructor.
  const AccountUnregisterDevice({
    required this.tokenType,
    required this.token,
    required this.otherUids,
  }) : super._();

  /// Deserialize.
  factory AccountUnregisterDevice.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Token Type.
  final int tokenType;

  /// Token.
  final String token;

  /// Other Uids.
  final List<int> otherUids;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Update Notify Settings.
///
/// ID: `84be5b93`.
class AccountUpdateNotifySettings extends TlMethod<bool> {
  /// Account Update Notify Settings constructor.
  const AccountUpdateNotifySettings({
    required this.peer,
    required this.settings,
  }) : super._();

  /// Deserialize.
  factory AccountUpdateNotifySettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputNotifyPeerBase peer;

  /// Settings.
  final InputPeerNotifySettingsBase settings;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Notify Settings.
///
/// ID: `12b3ad31`.
class AccountGetNotifySettings extends TlMethod<PeerNotifySettingsBase> {
  /// Account Get Notify Settings constructor.
  const AccountGetNotifySettings({
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory AccountGetNotifySettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputNotifyPeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Reset Notify Settings.
///
/// ID: `db7e1747`.
class AccountResetNotifySettings extends TlMethod<bool> {
  /// Account Reset Notify Settings constructor.
  const AccountResetNotifySettings() : super._();

  /// Deserialize.
  factory AccountResetNotifySettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Update Profile.
///
/// ID: `78515775`.
class AccountUpdateProfile extends TlMethod<UserBase> {
  /// Account Update Profile constructor.
  const AccountUpdateProfile({
    required this.flags,
    required this.firstName,
    required this.lastName,
    required this.about,
  }) : super._();

  /// Deserialize.
  factory AccountUpdateProfile.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// First Name.
  final String? firstName;

  /// If [firstName] exists.
  bool get hasFirstNameField => _bit(flags, 0);

  /// Last Name.
  final String? lastName;

  /// If [lastName] exists.
  bool get hasLastNameField => _bit(flags, 1);

  /// About.
  final String? about;

  /// If [about] exists.
  bool get hasAboutField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Update Status.
///
/// ID: `6628562c`.
class AccountUpdateStatus extends TlMethod<bool> {
  /// Account Update Status constructor.
  const AccountUpdateStatus({
    required this.offline,
  }) : super._();

  /// Deserialize.
  factory AccountUpdateStatus.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Offline.
  final bool offline;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Wall Papers.
///
/// ID: `07967d36`.
class AccountGetWallPapers extends TlMethod<AccountWallPapersBase> {
  /// Account Get Wall Papers constructor.
  const AccountGetWallPapers({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory AccountGetWallPapers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Report Peer.
///
/// ID: `c5ba3d86`.
class AccountReportPeer extends TlMethod<bool> {
  /// Account Report Peer constructor.
  const AccountReportPeer({
    required this.peer,
    required this.reason,
    required this.message,
  }) : super._();

  /// Deserialize.
  factory AccountReportPeer.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Reason.
  final ReportReasonBase reason;

  /// Message.
  final String message;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Users Get Users.
///
/// ID: `0d91a548`.
class UsersGetUsers extends TlMethod<List<UserBase>> {
  /// Users Get Users constructor.
  const UsersGetUsers({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory UsersGetUsers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final List<InputUserBase> id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Users Get Full User.
///
/// ID: `b60f5918`.
class UsersGetFullUser extends TlMethod<UsersUserFullBase> {
  /// Users Get Full User constructor.
  const UsersGetFullUser({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory UsersGetFullUser.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final InputUserBase id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Get Contact I Ds.
///
/// ID: `7adc669d`.
class ContactsGetContactIDs extends TlMethod<List<int>> {
  /// Contacts Get Contact I Ds constructor.
  const ContactsGetContactIDs({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory ContactsGetContactIDs.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Get Statuses.
///
/// ID: `c4a353ee`.
class ContactsGetStatuses extends TlMethod<List<ContactStatusBase>> {
  /// Contacts Get Statuses constructor.
  const ContactsGetStatuses() : super._();

  /// Deserialize.
  factory ContactsGetStatuses.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Get Contacts.
///
/// ID: `5dd69e12`.
class ContactsGetContacts extends TlMethod<ContactsContactsBase> {
  /// Contacts Get Contacts constructor.
  const ContactsGetContacts({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory ContactsGetContacts.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Import Contacts.
///
/// ID: `2c800be5`.
class ContactsImportContacts extends TlMethod<ContactsImportedContactsBase> {
  /// Contacts Import Contacts constructor.
  const ContactsImportContacts({
    required this.contacts,
  }) : super._();

  /// Deserialize.
  factory ContactsImportContacts.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Contacts.
  final List<InputContactBase> contacts;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Delete Contacts.
///
/// ID: `096a0e00`.
class ContactsDeleteContacts extends TlMethod<UpdatesBase> {
  /// Contacts Delete Contacts constructor.
  const ContactsDeleteContacts({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory ContactsDeleteContacts.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final List<InputUserBase> id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Delete By Phones.
///
/// ID: `1013fd9e`.
class ContactsDeleteByPhones extends TlMethod<bool> {
  /// Contacts Delete By Phones constructor.
  const ContactsDeleteByPhones({
    required this.phones,
  }) : super._();

  /// Deserialize.
  factory ContactsDeleteByPhones.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Phones.
  final List<String> phones;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Block.
///
/// ID: `2e2e8734`.
class ContactsBlock extends TlMethod<bool> {
  /// Contacts Block constructor.
  const ContactsBlock({
    required this.flags,
    required this.id,
  }) : super._();

  /// Deserialize.
  factory ContactsBlock.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// my_stories_from: bit
  bool get myStoriesFrom => _bit(flags, 0);

  /// Id.
  final InputPeerBase id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Unblock.
///
/// ID: `b550d328`.
class ContactsUnblock extends TlMethod<bool> {
  /// Contacts Unblock constructor.
  const ContactsUnblock({
    required this.flags,
    required this.id,
  }) : super._();

  /// Deserialize.
  factory ContactsUnblock.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// my_stories_from: bit
  bool get myStoriesFrom => _bit(flags, 0);

  /// Id.
  final InputPeerBase id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Get Blocked.
///
/// ID: `9a868f80`.
class ContactsGetBlocked extends TlMethod<ContactsBlockedBase> {
  /// Contacts Get Blocked constructor.
  const ContactsGetBlocked({
    required this.flags,
    required this.offset,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory ContactsGetBlocked.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// my_stories_from: bit
  bool get myStoriesFrom => _bit(flags, 0);

  /// Offset.
  final int offset;

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Messages.
///
/// ID: `63c66506`.
class MessagesGetMessages extends TlMethod<MessagesMessagesBase> {
  /// Messages Get Messages constructor.
  const MessagesGetMessages({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory MessagesGetMessages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final List<InputMessageBase> id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Dialogs.
///
/// ID: `a0f4cb4f`.
class MessagesGetDialogs extends TlMethod<MessagesDialogsBase> {
  /// Messages Get Dialogs constructor.
  const MessagesGetDialogs({
    required this.flags,
    required this.folderId,
    required this.offsetDate,
    required this.offsetId,
    required this.offsetPeer,
    required this.limit,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetDialogs.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// exclude_pinned: bit
  bool get excludePinned => _bit(flags, 0);

  /// Folder Id.
  final int? folderId;

  /// If [folderId] exists.
  bool get hasFolderIdField => _bit(flags, 1);

  /// Offset Date.
  final int offsetDate;

  /// Offset Id.
  final int offsetId;

  /// Offset Peer.
  final InputPeerBase offsetPeer;

  /// Limit.
  final int limit;

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get History.
///
/// ID: `4423e6c5`.
class MessagesGetHistory extends TlMethod<MessagesMessagesBase> {
  /// Messages Get History constructor.
  const MessagesGetHistory({
    required this.peer,
    required this.offsetId,
    required this.offsetDate,
    required this.addOffset,
    required this.limit,
    required this.maxId,
    required this.minId,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetHistory.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Offset Id.
  final int offsetId;

  /// Offset Date.
  final int offsetDate;

  /// Add Offset.
  final int addOffset;

  /// Limit.
  final int limit;

  /// Max Id.
  final int maxId;

  /// Min Id.
  final int minId;

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Search.
///
/// ID: `a7b4e929`.
class MessagesSearch extends TlMethod<MessagesMessagesBase> {
  /// Messages Search constructor.
  const MessagesSearch({
    required this.flags,
    required this.peer,
    required this.q,
    required this.fromId,
    required this.savedPeerId,
    required this.topMsgId,
    required this.filter,
    required this.minDate,
    required this.maxDate,
    required this.offsetId,
    required this.addOffset,
    required this.limit,
    required this.maxId,
    required this.minId,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesSearch.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Peer.
  final InputPeerBase peer;

  /// Q.
  final String q;

  /// From Id.
  final InputPeerBase? fromId;

  /// If [fromId] exists.
  bool get hasFromIdField => _bit(flags, 0);

  /// Saved Peer Id.
  final InputPeerBase? savedPeerId;

  /// If [savedPeerId] exists.
  bool get hasSavedPeerIdField => _bit(flags, 2);

  /// Top Msg Id.
  final int? topMsgId;

  /// If [topMsgId] exists.
  bool get hasTopMsgIdField => _bit(flags, 1);

  /// Filter.
  final MessagesFilterBase filter;

  /// Min Date.
  final int minDate;

  /// Max Date.
  final int maxDate;

  /// Offset Id.
  final int offsetId;

  /// Add Offset.
  final int addOffset;

  /// Limit.
  final int limit;

  /// Max Id.
  final int maxId;

  /// Min Id.
  final int minId;

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Read History.
///
/// ID: `0e306d3a`.
class MessagesReadHistory extends TlMethod<MessagesAffectedMessagesBase> {
  /// Messages Read History constructor.
  const MessagesReadHistory({
    required this.peer,
    required this.maxId,
  }) : super._();

  /// Deserialize.
  factory MessagesReadHistory.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Max Id.
  final int maxId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Delete History.
///
/// ID: `b08f922a`.
class MessagesDeleteHistory extends TlMethod<MessagesAffectedHistoryBase> {
  /// Messages Delete History constructor.
  const MessagesDeleteHistory({
    required this.flags,
    required this.peer,
    required this.maxId,
    required this.minDate,
    required this.maxDate,
  }) : super._();

  /// Deserialize.
  factory MessagesDeleteHistory.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// just_clear: bit
  bool get justClear => _bit(flags, 0);

  /// revoke: bit
  bool get revoke => _bit(flags, 1);

  /// Peer.
  final InputPeerBase peer;

  /// Max Id.
  final int maxId;

  /// Min Date.
  final int? minDate;

  /// If [minDate] exists.
  bool get hasMinDateField => _bit(flags, 2);

  /// Max Date.
  final int? maxDate;

  /// If [maxDate] exists.
  bool get hasMaxDateField => _bit(flags, 3);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Delete Messages.
///
/// ID: `e58e95d2`.
class MessagesDeleteMessages extends TlMethod<MessagesAffectedMessagesBase> {
  /// Messages Delete Messages constructor.
  const MessagesDeleteMessages({
    required this.flags,
    required this.id,
  }) : super._();

  /// Deserialize.
  factory MessagesDeleteMessages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// revoke: bit
  bool get revoke => _bit(flags, 0);

  /// Id.
  final List<int> id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Received Messages.
///
/// ID: `05a954c0`.
class MessagesReceivedMessages
    extends TlMethod<List<ReceivedNotifyMessageBase>> {
  /// Messages Received Messages constructor.
  const MessagesReceivedMessages({
    required this.maxId,
  }) : super._();

  /// Deserialize.
  factory MessagesReceivedMessages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Max Id.
  final int maxId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Set Typing.
///
/// ID: `58943ee2`.
class MessagesSetTyping extends TlMethod<bool> {
  /// Messages Set Typing constructor.
  const MessagesSetTyping({
    required this.flags,
    required this.peer,
    required this.topMsgId,
    required this.action,
  }) : super._();

  /// Deserialize.
  factory MessagesSetTyping.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Peer.
  final InputPeerBase peer;

  /// Top Msg Id.
  final int? topMsgId;

  /// If [topMsgId] exists.
  bool get hasTopMsgIdField => _bit(flags, 0);

  /// Action.
  final SendMessageActionBase action;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Send Message.
///
/// ID: `280d096f`.
class MessagesSendMessage extends TlMethod<UpdatesBase> {
  /// Messages Send Message constructor.
  const MessagesSendMessage({
    required this.flags,
    required this.peer,
    required this.replyTo,
    required this.message,
    required this.randomId,
    required this.replyMarkup,
    required this.entities,
    required this.scheduleDate,
    required this.sendAs,
  }) : super._();

  /// Deserialize.
  factory MessagesSendMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// no_webpage: bit
  bool get noWebpage => _bit(flags, 1);

  /// silent: bit
  bool get silent => _bit(flags, 5);

  /// background: bit
  bool get background => _bit(flags, 6);

  /// clear_draft: bit
  bool get clearDraft => _bit(flags, 7);

  /// noforwards: bit
  bool get noforwards => _bit(flags, 14);

  /// update_stickersets_order: bit
  bool get updateStickersetsOrder => _bit(flags, 15);

  /// invert_media: bit
  bool get invertMedia => _bit(flags, 16);

  /// Peer.
  final InputPeerBase peer;

  /// Reply To.
  final InputReplyToBase? replyTo;

  /// If [replyTo] exists.
  bool get hasReplyToField => _bit(flags, 0);

  /// Message.
  final String message;

  /// Random Id.
  final int randomId;

  /// Reply Markup.
  final ReplyMarkupBase? replyMarkup;

  /// If [replyMarkup] exists.
  bool get hasReplyMarkupField => _bit(flags, 2);

  /// Entities.
  final List<MessageEntityBase>? entities;

  /// If [entities] exists.
  bool get hasEntitiesField => _bit(flags, 3);

  /// Schedule Date.
  final int? scheduleDate;

  /// If [scheduleDate] exists.
  bool get hasScheduleDateField => _bit(flags, 10);

  /// Send As.
  final InputPeerBase? sendAs;

  /// If [sendAs] exists.
  bool get hasSendAsField => _bit(flags, 13);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Send Media.
///
/// ID: `72ccc23d`.
class MessagesSendMedia extends TlMethod<UpdatesBase> {
  /// Messages Send Media constructor.
  const MessagesSendMedia({
    required this.flags,
    required this.peer,
    required this.replyTo,
    required this.media,
    required this.message,
    required this.randomId,
    required this.replyMarkup,
    required this.entities,
    required this.scheduleDate,
    required this.sendAs,
  }) : super._();

  /// Deserialize.
  factory MessagesSendMedia.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// silent: bit
  bool get silent => _bit(flags, 5);

  /// background: bit
  bool get background => _bit(flags, 6);

  /// clear_draft: bit
  bool get clearDraft => _bit(flags, 7);

  /// noforwards: bit
  bool get noforwards => _bit(flags, 14);

  /// update_stickersets_order: bit
  bool get updateStickersetsOrder => _bit(flags, 15);

  /// invert_media: bit
  bool get invertMedia => _bit(flags, 16);

  /// Peer.
  final InputPeerBase peer;

  /// Reply To.
  final InputReplyToBase? replyTo;

  /// If [replyTo] exists.
  bool get hasReplyToField => _bit(flags, 0);

  /// Media.
  final InputMediaBase media;

  /// Message.
  final String message;

  /// Random Id.
  final int randomId;

  /// Reply Markup.
  final ReplyMarkupBase? replyMarkup;

  /// If [replyMarkup] exists.
  bool get hasReplyMarkupField => _bit(flags, 2);

  /// Entities.
  final List<MessageEntityBase>? entities;

  /// If [entities] exists.
  bool get hasEntitiesField => _bit(flags, 3);

  /// Schedule Date.
  final int? scheduleDate;

  /// If [scheduleDate] exists.
  bool get hasScheduleDateField => _bit(flags, 10);

  /// Send As.
  final InputPeerBase? sendAs;

  /// If [sendAs] exists.
  bool get hasSendAsField => _bit(flags, 13);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Forward Messages.
///
/// ID: `c661bbc4`.
class MessagesForwardMessages extends TlMethod<UpdatesBase> {
  /// Messages Forward Messages constructor.
  const MessagesForwardMessages({
    required this.flags,
    required this.fromPeer,
    required this.id,
    required this.randomId,
    required this.toPeer,
    required this.topMsgId,
    required this.scheduleDate,
    required this.sendAs,
  }) : super._();

  /// Deserialize.
  factory MessagesForwardMessages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// silent: bit
  bool get silent => _bit(flags, 5);

  /// background: bit
  bool get background => _bit(flags, 6);

  /// with_my_score: bit
  bool get withMyScore => _bit(flags, 8);

  /// drop_author: bit
  bool get dropAuthor => _bit(flags, 11);

  /// drop_media_captions: bit
  bool get dropMediaCaptions => _bit(flags, 12);

  /// noforwards: bit
  bool get noforwards => _bit(flags, 14);

  /// From Peer.
  final InputPeerBase fromPeer;

  /// Id.
  final List<int> id;

  /// Random Id.
  final List<int> randomId;

  /// To Peer.
  final InputPeerBase toPeer;

  /// Top Msg Id.
  final int? topMsgId;

  /// If [topMsgId] exists.
  bool get hasTopMsgIdField => _bit(flags, 9);

  /// Schedule Date.
  final int? scheduleDate;

  /// If [scheduleDate] exists.
  bool get hasScheduleDateField => _bit(flags, 10);

  /// Send As.
  final InputPeerBase? sendAs;

  /// If [sendAs] exists.
  bool get hasSendAsField => _bit(flags, 13);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Report Spam.
///
/// ID: `cf1592db`.
class MessagesReportSpam extends TlMethod<bool> {
  /// Messages Report Spam constructor.
  const MessagesReportSpam({
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory MessagesReportSpam.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Peer Settings.
///
/// ID: `efd9a6a2`.
class MessagesGetPeerSettings extends TlMethod<MessagesPeerSettingsBase> {
  /// Messages Get Peer Settings constructor.
  const MessagesGetPeerSettings({
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory MessagesGetPeerSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Report.
///
/// ID: `8953ab4e`.
class MessagesReport extends TlMethod<bool> {
  /// Messages Report constructor.
  const MessagesReport({
    required this.peer,
    required this.id,
    required this.reason,
    required this.message,
  }) : super._();

  /// Deserialize.
  factory MessagesReport.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final List<int> id;

  /// Reason.
  final ReportReasonBase reason;

  /// Message.
  final String message;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Chats.
///
/// ID: `49e9528f`.
class MessagesGetChats extends TlMethod<MessagesChatsBase> {
  /// Messages Get Chats constructor.
  const MessagesGetChats({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory MessagesGetChats.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final List<int> id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Full Chat.
///
/// ID: `aeb00b34`.
class MessagesGetFullChat extends TlMethod<MessagesChatFullBase> {
  /// Messages Get Full Chat constructor.
  const MessagesGetFullChat({
    required this.chatId,
  }) : super._();

  /// Deserialize.
  factory MessagesGetFullChat.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chat Id.
  final int chatId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Edit Chat Title.
///
/// ID: `73783ffd`.
class MessagesEditChatTitle extends TlMethod<UpdatesBase> {
  /// Messages Edit Chat Title constructor.
  const MessagesEditChatTitle({
    required this.chatId,
    required this.title,
  }) : super._();

  /// Deserialize.
  factory MessagesEditChatTitle.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chat Id.
  final int chatId;

  /// Title.
  final String title;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Edit Chat Photo.
///
/// ID: `35ddd674`.
class MessagesEditChatPhoto extends TlMethod<UpdatesBase> {
  /// Messages Edit Chat Photo constructor.
  const MessagesEditChatPhoto({
    required this.chatId,
    required this.photo,
  }) : super._();

  /// Deserialize.
  factory MessagesEditChatPhoto.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chat Id.
  final int chatId;

  /// Photo.
  final InputChatPhotoBase photo;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Add Chat User.
///
/// ID: `f24753e3`.
class MessagesAddChatUser extends TlMethod<UpdatesBase> {
  /// Messages Add Chat User constructor.
  const MessagesAddChatUser({
    required this.chatId,
    required this.userId,
    required this.fwdLimit,
  }) : super._();

  /// Deserialize.
  factory MessagesAddChatUser.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chat Id.
  final int chatId;

  /// User Id.
  final InputUserBase userId;

  /// Fwd Limit.
  final int fwdLimit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Delete Chat User.
///
/// ID: `a2185cab`.
class MessagesDeleteChatUser extends TlMethod<UpdatesBase> {
  /// Messages Delete Chat User constructor.
  const MessagesDeleteChatUser({
    required this.flags,
    required this.chatId,
    required this.userId,
  }) : super._();

  /// Deserialize.
  factory MessagesDeleteChatUser.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// revoke_history: bit
  bool get revokeHistory => _bit(flags, 0);

  /// Chat Id.
  final int chatId;

  /// User Id.
  final InputUserBase userId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Create Chat.
///
/// ID: `0034a818`.
class MessagesCreateChat extends TlMethod<UpdatesBase> {
  /// Messages Create Chat constructor.
  const MessagesCreateChat({
    required this.flags,
    required this.users,
    required this.title,
    required this.ttlPeriod,
  }) : super._();

  /// Deserialize.
  factory MessagesCreateChat.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Users.
  final List<InputUserBase> users;

  /// Title.
  final String title;

  /// Ttl Period.
  final int? ttlPeriod;

  /// If [ttlPeriod] exists.
  bool get hasTtlPeriodField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Updates Get State.
///
/// ID: `edd4882a`.
class UpdatesGetState extends TlMethod<UpdatesStateBase> {
  /// Updates Get State constructor.
  const UpdatesGetState() : super._();

  /// Deserialize.
  factory UpdatesGetState.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Updates Get Difference.
///
/// ID: `19c2f763`.
class UpdatesGetDifference extends TlMethod<UpdatesDifferenceBase> {
  /// Updates Get Difference constructor.
  const UpdatesGetDifference({
    required this.flags,
    required this.pts,
    required this.ptsLimit,
    required this.ptsTotalLimit,
    required this.date,
    required this.qts,
    required this.qtsLimit,
  }) : super._();

  /// Deserialize.
  factory UpdatesGetDifference.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Pts.
  final int pts;

  /// Pts Limit.
  final int? ptsLimit;

  /// If [ptsLimit] exists.
  bool get hasPtsLimitField => _bit(flags, 1);

  /// Pts Total Limit.
  final int? ptsTotalLimit;

  /// If [ptsTotalLimit] exists.
  bool get hasPtsTotalLimitField => _bit(flags, 0);

  /// Date.
  final int date;

  /// Qts.
  final int qts;

  /// Qts Limit.
  final int? qtsLimit;

  /// If [qtsLimit] exists.
  bool get hasQtsLimitField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Photos Update Profile Photo.
///
/// ID: `09e82039`.
class PhotosUpdateProfilePhoto extends TlMethod<PhotosPhotoBase> {
  /// Photos Update Profile Photo constructor.
  const PhotosUpdateProfilePhoto({
    required this.flags,
    required this.bot,
    required this.id,
  }) : super._();

  /// Deserialize.
  factory PhotosUpdateProfilePhoto.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// fallback: bit
  bool get fallback => _bit(flags, 0);

  /// Bot.
  final InputUserBase? bot;

  /// If [bot] exists.
  bool get hasBotField => _bit(flags, 1);

  /// Id.
  final InputPhotoBase id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Photos Upload Profile Photo.
///
/// ID: `0388a3b5`.
class PhotosUploadProfilePhoto extends TlMethod<PhotosPhotoBase> {
  /// Photos Upload Profile Photo constructor.
  const PhotosUploadProfilePhoto({
    required this.flags,
    required this.bot,
    required this.file,
    required this.video,
    required this.videoStartTs,
    required this.videoEmojiMarkup,
  }) : super._();

  /// Deserialize.
  factory PhotosUploadProfilePhoto.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// fallback: bit
  bool get fallback => _bit(flags, 3);

  /// Bot.
  final InputUserBase? bot;

  /// If [bot] exists.
  bool get hasBotField => _bit(flags, 5);

  /// File.
  final InputFileBase? file;

  /// If [file] exists.
  bool get hasFileField => _bit(flags, 0);

  /// Video.
  final InputFileBase? video;

  /// If [video] exists.
  bool get hasVideoField => _bit(flags, 1);

  /// Video Start Ts.
  final double? videoStartTs;

  /// If [videoStartTs] exists.
  bool get hasVideoStartTsField => _bit(flags, 2);

  /// Video Emoji Markup.
  final VideoSizeBase? videoEmojiMarkup;

  /// If [videoEmojiMarkup] exists.
  bool get hasVideoEmojiMarkupField => _bit(flags, 4);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Photos Delete Photos.
///
/// ID: `87cf7f2f`.
class PhotosDeletePhotos extends TlMethod<List<int>> {
  /// Photos Delete Photos constructor.
  const PhotosDeletePhotos({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory PhotosDeletePhotos.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final List<InputPhotoBase> id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Upload Save File Part.
///
/// ID: `b304a621`.
class UploadSaveFilePart extends TlMethod<bool> {
  /// Upload Save File Part constructor.
  const UploadSaveFilePart({
    required this.fileId,
    required this.filePart,
    required this.bytes,
  }) : super._();

  /// Deserialize.
  factory UploadSaveFilePart.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// File Id.
  final int fileId;

  /// File Part.
  final int filePart;

  /// Bytes.
  final Uint8List bytes;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Upload Get File.
///
/// ID: `be5335be`.
class UploadGetFile extends TlMethod<UploadFileBase> {
  /// Upload Get File constructor.
  const UploadGetFile({
    required this.flags,
    required this.location,
    required this.offset,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory UploadGetFile.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// precise: bit
  bool get precise => _bit(flags, 0);

  /// cdn_supported: bit
  bool get cdnSupported => _bit(flags, 1);

  /// Location.
  final InputFileLocationBase location;

  /// Offset.
  final int offset;

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Get Config.
///
/// ID: `c4f9186b`.
class HelpGetConfig extends TlMethod<ConfigBase> {
  /// Help Get Config constructor.
  const HelpGetConfig() : super._();

  /// Deserialize.
  factory HelpGetConfig.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Get Nearest Dc.
///
/// ID: `1fb33026`.
class HelpGetNearestDc extends TlMethod<NearestDcBase> {
  /// Help Get Nearest Dc constructor.
  const HelpGetNearestDc() : super._();

  /// Deserialize.
  factory HelpGetNearestDc.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Get App Update.
///
/// ID: `522d5a7d`.
class HelpGetAppUpdate extends TlMethod<HelpAppUpdateBase> {
  /// Help Get App Update constructor.
  const HelpGetAppUpdate({
    required this.source,
  }) : super._();

  /// Deserialize.
  factory HelpGetAppUpdate.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Source.
  final String source;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Get Invite Text.
///
/// ID: `4d392343`.
class HelpGetInviteText extends TlMethod<HelpInviteTextBase> {
  /// Help Get Invite Text constructor.
  const HelpGetInviteText() : super._();

  /// Deserialize.
  factory HelpGetInviteText.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Photos Get User Photos.
///
/// ID: `91cd32a8`.
class PhotosGetUserPhotos extends TlMethod<PhotosPhotosBase> {
  /// Photos Get User Photos constructor.
  const PhotosGetUserPhotos({
    required this.userId,
    required this.offset,
    required this.maxId,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory PhotosGetUserPhotos.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final InputUserBase userId;

  /// Offset.
  final int offset;

  /// Max Id.
  final int maxId;

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Dh Config.
///
/// ID: `26cf8950`.
class MessagesGetDhConfig extends TlMethod<MessagesDhConfigBase> {
  /// Messages Get Dh Config constructor.
  const MessagesGetDhConfig({
    required this.version,
    required this.randomLength,
  }) : super._();

  /// Deserialize.
  factory MessagesGetDhConfig.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Version.
  final int version;

  /// Random Length.
  final int randomLength;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Request Encryption.
///
/// ID: `f64daf43`.
class MessagesRequestEncryption extends TlMethod<EncryptedChatBase> {
  /// Messages Request Encryption constructor.
  const MessagesRequestEncryption({
    required this.userId,
    required this.randomId,
    required this.gA,
  }) : super._();

  /// Deserialize.
  factory MessagesRequestEncryption.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final InputUserBase userId;

  /// Random Id.
  final int randomId;

  /// G A.
  final Uint8List gA;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Accept Encryption.
///
/// ID: `3dbc0415`.
class MessagesAcceptEncryption extends TlMethod<EncryptedChatBase> {
  /// Messages Accept Encryption constructor.
  const MessagesAcceptEncryption({
    required this.peer,
    required this.gB,
    required this.keyFingerprint,
  }) : super._();

  /// Deserialize.
  factory MessagesAcceptEncryption.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputEncryptedChatBase peer;

  /// G B.
  final Uint8List gB;

  /// Key Fingerprint.
  final int keyFingerprint;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Discard Encryption.
///
/// ID: `f393aea0`.
class MessagesDiscardEncryption extends TlMethod<bool> {
  /// Messages Discard Encryption constructor.
  const MessagesDiscardEncryption({
    required this.flags,
    required this.chatId,
  }) : super._();

  /// Deserialize.
  factory MessagesDiscardEncryption.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// delete_history: bit
  bool get deleteHistory => _bit(flags, 0);

  /// Chat Id.
  final int chatId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Set Encrypted Typing.
///
/// ID: `791451ed`.
class MessagesSetEncryptedTyping extends TlMethod<bool> {
  /// Messages Set Encrypted Typing constructor.
  const MessagesSetEncryptedTyping({
    required this.peer,
    required this.typing,
  }) : super._();

  /// Deserialize.
  factory MessagesSetEncryptedTyping.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputEncryptedChatBase peer;

  /// Typing.
  final bool typing;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Read Encrypted History.
///
/// ID: `7f4b690a`.
class MessagesReadEncryptedHistory extends TlMethod<bool> {
  /// Messages Read Encrypted History constructor.
  const MessagesReadEncryptedHistory({
    required this.peer,
    required this.maxDate,
  }) : super._();

  /// Deserialize.
  factory MessagesReadEncryptedHistory.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputEncryptedChatBase peer;

  /// Max Date.
  final int maxDate;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Send Encrypted.
///
/// ID: `44fa7a15`.
class MessagesSendEncrypted extends TlMethod<MessagesSentEncryptedMessageBase> {
  /// Messages Send Encrypted constructor.
  const MessagesSendEncrypted({
    required this.flags,
    required this.peer,
    required this.randomId,
    required this.data,
  }) : super._();

  /// Deserialize.
  factory MessagesSendEncrypted.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// silent: bit
  bool get silent => _bit(flags, 0);

  /// Peer.
  final InputEncryptedChatBase peer;

  /// Random Id.
  final int randomId;

  /// Data.
  final Uint8List data;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Send Encrypted File.
///
/// ID: `5559481d`.
class MessagesSendEncryptedFile
    extends TlMethod<MessagesSentEncryptedMessageBase> {
  /// Messages Send Encrypted File constructor.
  const MessagesSendEncryptedFile({
    required this.flags,
    required this.peer,
    required this.randomId,
    required this.data,
    required this.file,
  }) : super._();

  /// Deserialize.
  factory MessagesSendEncryptedFile.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// silent: bit
  bool get silent => _bit(flags, 0);

  /// Peer.
  final InputEncryptedChatBase peer;

  /// Random Id.
  final int randomId;

  /// Data.
  final Uint8List data;

  /// File.
  final InputEncryptedFileBase file;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Send Encrypted Service.
///
/// ID: `32d439a4`.
class MessagesSendEncryptedService
    extends TlMethod<MessagesSentEncryptedMessageBase> {
  /// Messages Send Encrypted Service constructor.
  const MessagesSendEncryptedService({
    required this.peer,
    required this.randomId,
    required this.data,
  }) : super._();

  /// Deserialize.
  factory MessagesSendEncryptedService.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputEncryptedChatBase peer;

  /// Random Id.
  final int randomId;

  /// Data.
  final Uint8List data;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Received Queue.
///
/// ID: `55a5bb66`.
class MessagesReceivedQueue extends TlMethod<List<int>> {
  /// Messages Received Queue constructor.
  const MessagesReceivedQueue({
    required this.maxQts,
  }) : super._();

  /// Deserialize.
  factory MessagesReceivedQueue.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Max Qts.
  final int maxQts;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Report Encrypted Spam.
///
/// ID: `4b0c8c0f`.
class MessagesReportEncryptedSpam extends TlMethod<bool> {
  /// Messages Report Encrypted Spam constructor.
  const MessagesReportEncryptedSpam({
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory MessagesReportEncryptedSpam.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputEncryptedChatBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Upload Save Big File Part.
///
/// ID: `de7b673d`.
class UploadSaveBigFilePart extends TlMethod<bool> {
  /// Upload Save Big File Part constructor.
  const UploadSaveBigFilePart({
    required this.fileId,
    required this.filePart,
    required this.fileTotalParts,
    required this.bytes,
  }) : super._();

  /// Deserialize.
  factory UploadSaveBigFilePart.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// File Id.
  final int fileId;

  /// File Part.
  final int filePart;

  /// File Total Parts.
  final int fileTotalParts;

  /// Bytes.
  final Uint8List bytes;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Init Connection.
///
/// ID: `c1cd5ea9`.
class InitConnection<X> extends TlMethod<X> {
  /// Init Connection constructor.
  const InitConnection({
    required this.flags,
    required this.apiId,
    required this.deviceModel,
    required this.systemVersion,
    required this.appVersion,
    required this.systemLangCode,
    required this.langPack,
    required this.langCode,
    required this.proxy,
    required this.params,
    required this.query,
  }) : super._();

  /// Deserialize.
  factory InitConnection.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Api Id.
  final int apiId;

  /// Device Model.
  final String deviceModel;

  /// System Version.
  final String systemVersion;

  /// App Version.
  final String appVersion;

  /// System Lang Code.
  final String systemLangCode;

  /// Lang Pack.
  final String langPack;

  /// Lang Code.
  final String langCode;

  /// Proxy.
  final InputClientProxyBase? proxy;

  /// If [proxy] exists.
  bool get hasProxyField => _bit(flags, 0);

  /// Params.
  final JSONValueBase? params;

  /// If [params] exists.
  bool get hasParamsField => _bit(flags, 1);

  /// Query.
  final TlMethod<X> query;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Get Support.
///
/// ID: `9cdf08cd`.
class HelpGetSupport extends TlMethod<HelpSupportBase> {
  /// Help Get Support constructor.
  const HelpGetSupport() : super._();

  /// Deserialize.
  factory HelpGetSupport.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Read Message Contents.
///
/// ID: `36a73f77`.
class MessagesReadMessageContents
    extends TlMethod<MessagesAffectedMessagesBase> {
  /// Messages Read Message Contents constructor.
  const MessagesReadMessageContents({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory MessagesReadMessageContents.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final List<int> id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Check Username.
///
/// ID: `2714d86c`.
class AccountCheckUsername extends TlMethod<bool> {
  /// Account Check Username constructor.
  const AccountCheckUsername({
    required this.username,
  }) : super._();

  /// Deserialize.
  factory AccountCheckUsername.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Username.
  final String username;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Update Username.
///
/// ID: `3e0bdd7c`.
class AccountUpdateUsername extends TlMethod<UserBase> {
  /// Account Update Username constructor.
  const AccountUpdateUsername({
    required this.username,
  }) : super._();

  /// Deserialize.
  factory AccountUpdateUsername.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Username.
  final String username;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Search.
///
/// ID: `11f812d8`.
class ContactsSearch extends TlMethod<ContactsFoundBase> {
  /// Contacts Search constructor.
  const ContactsSearch({
    required this.q,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory ContactsSearch.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Q.
  final String q;

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Privacy.
///
/// ID: `dadbc950`.
class AccountGetPrivacy extends TlMethod<AccountPrivacyRulesBase> {
  /// Account Get Privacy constructor.
  const AccountGetPrivacy({
    required this.key,
  }) : super._();

  /// Deserialize.
  factory AccountGetPrivacy.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Key.
  final InputPrivacyKeyBase key;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Set Privacy.
///
/// ID: `c9f81ce8`.
class AccountSetPrivacy extends TlMethod<AccountPrivacyRulesBase> {
  /// Account Set Privacy constructor.
  const AccountSetPrivacy({
    required this.key,
    required this.rules,
  }) : super._();

  /// Deserialize.
  factory AccountSetPrivacy.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Key.
  final InputPrivacyKeyBase key;

  /// Rules.
  final List<InputPrivacyRuleBase> rules;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Delete Account.
///
/// ID: `a2c0cf74`.
class AccountDeleteAccount extends TlMethod<bool> {
  /// Account Delete Account constructor.
  const AccountDeleteAccount({
    required this.flags,
    required this.reason,
    required this.password,
  }) : super._();

  /// Deserialize.
  factory AccountDeleteAccount.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Reason.
  final String reason;

  /// Password.
  final InputCheckPasswordSRPBase? password;

  /// If [password] exists.
  bool get hasPasswordField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Account T T L.
///
/// ID: `08fc711d`.
class AccountGetAccountTTL extends TlMethod<AccountDaysTTLBase> {
  /// Account Get Account T T L constructor.
  const AccountGetAccountTTL() : super._();

  /// Deserialize.
  factory AccountGetAccountTTL.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Set Account T T L.
///
/// ID: `2442485e`.
class AccountSetAccountTTL extends TlMethod<bool> {
  /// Account Set Account T T L constructor.
  const AccountSetAccountTTL({
    required this.ttl,
  }) : super._();

  /// Deserialize.
  factory AccountSetAccountTTL.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Ttl.
  final AccountDaysTTLBase ttl;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Invoke With Layer.
///
/// ID: `da9b0d0d`.
class InvokeWithLayer<X> extends TlMethod<X> {
  /// Invoke With Layer constructor.
  const InvokeWithLayer({
    required this.layer,
    required this.query,
  }) : super._();

  /// Deserialize.
  factory InvokeWithLayer.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Layer.
  final int layer;

  /// Query.
  final TlMethod<X> query;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Resolve Username.
///
/// ID: `f93ccba3`.
class ContactsResolveUsername extends TlMethod<ContactsResolvedPeerBase> {
  /// Contacts Resolve Username constructor.
  const ContactsResolveUsername({
    required this.username,
  }) : super._();

  /// Deserialize.
  factory ContactsResolveUsername.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Username.
  final String username;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Send Change Phone Code.
///
/// ID: `82574ae5`.
class AccountSendChangePhoneCode extends TlMethod<AuthSentCodeBase> {
  /// Account Send Change Phone Code constructor.
  const AccountSendChangePhoneCode({
    required this.phoneNumber,
    required this.settings,
  }) : super._();

  /// Deserialize.
  factory AccountSendChangePhoneCode.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Phone Number.
  final String phoneNumber;

  /// Settings.
  final CodeSettingsBase settings;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Change Phone.
///
/// ID: `70c32edb`.
class AccountChangePhone extends TlMethod<UserBase> {
  /// Account Change Phone constructor.
  const AccountChangePhone({
    required this.phoneNumber,
    required this.phoneCodeHash,
    required this.phoneCode,
  }) : super._();

  /// Deserialize.
  factory AccountChangePhone.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Phone Number.
  final String phoneNumber;

  /// Phone Code Hash.
  final String phoneCodeHash;

  /// Phone Code.
  final String phoneCode;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Stickers.
///
/// ID: `d5a5d3a1`.
class MessagesGetStickers extends TlMethod<MessagesStickersBase> {
  /// Messages Get Stickers constructor.
  const MessagesGetStickers({
    required this.emoticon,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetStickers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Emoticon.
  final String emoticon;

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get All Stickers.
///
/// ID: `b8a0a1a8`.
class MessagesGetAllStickers extends TlMethod<MessagesAllStickersBase> {
  /// Messages Get All Stickers constructor.
  const MessagesGetAllStickers({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetAllStickers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Update Device Locked.
///
/// ID: `38df3532`.
class AccountUpdateDeviceLocked extends TlMethod<bool> {
  /// Account Update Device Locked constructor.
  const AccountUpdateDeviceLocked({
    required this.period,
  }) : super._();

  /// Deserialize.
  factory AccountUpdateDeviceLocked.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Period.
  final int period;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Import Bot Authorization.
///
/// ID: `67a3ff2c`.
class AuthImportBotAuthorization extends TlMethod<AuthAuthorizationBase> {
  /// Auth Import Bot Authorization constructor.
  const AuthImportBotAuthorization({
    required this.flags,
    required this.apiId,
    required this.apiHash,
    required this.botAuthToken,
  }) : super._();

  /// Deserialize.
  factory AuthImportBotAuthorization.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Api Id.
  final int apiId;

  /// Api Hash.
  final String apiHash;

  /// Bot Auth Token.
  final String botAuthToken;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Web Page Preview.
///
/// ID: `8b68b0cc`.
class MessagesGetWebPagePreview extends TlMethod<MessageMediaBase> {
  /// Messages Get Web Page Preview constructor.
  const MessagesGetWebPagePreview({
    required this.flags,
    required this.message,
    required this.entities,
  }) : super._();

  /// Deserialize.
  factory MessagesGetWebPagePreview.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Message.
  final String message;

  /// Entities.
  final List<MessageEntityBase>? entities;

  /// If [entities] exists.
  bool get hasEntitiesField => _bit(flags, 3);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Authorizations.
///
/// ID: `e320c158`.
class AccountGetAuthorizations extends TlMethod<AccountAuthorizationsBase> {
  /// Account Get Authorizations constructor.
  const AccountGetAuthorizations() : super._();

  /// Deserialize.
  factory AccountGetAuthorizations.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Reset Authorization.
///
/// ID: `df77f3bc`.
class AccountResetAuthorization extends TlMethod<bool> {
  /// Account Reset Authorization constructor.
  const AccountResetAuthorization({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory AccountResetAuthorization.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Password.
///
/// ID: `548a30f5`.
class AccountGetPassword extends TlMethod<AccountPasswordBase> {
  /// Account Get Password constructor.
  const AccountGetPassword() : super._();

  /// Deserialize.
  factory AccountGetPassword.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Password Settings.
///
/// ID: `9cd4eaf9`.
class AccountGetPasswordSettings extends TlMethod<AccountPasswordSettingsBase> {
  /// Account Get Password Settings constructor.
  const AccountGetPasswordSettings({
    required this.password,
  }) : super._();

  /// Deserialize.
  factory AccountGetPasswordSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Password.
  final InputCheckPasswordSRPBase password;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Update Password Settings.
///
/// ID: `a59b102f`.
class AccountUpdatePasswordSettings extends TlMethod<bool> {
  /// Account Update Password Settings constructor.
  const AccountUpdatePasswordSettings({
    required this.password,
    required this.newSettings,
  }) : super._();

  /// Deserialize.
  factory AccountUpdatePasswordSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Password.
  final InputCheckPasswordSRPBase password;

  /// New Settings.
  final AccountPasswordInputSettingsBase newSettings;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Check Password.
///
/// ID: `d18b4d16`.
class AuthCheckPassword extends TlMethod<AuthAuthorizationBase> {
  /// Auth Check Password constructor.
  const AuthCheckPassword({
    required this.password,
  }) : super._();

  /// Deserialize.
  factory AuthCheckPassword.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Password.
  final InputCheckPasswordSRPBase password;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Request Password Recovery.
///
/// ID: `d897bc66`.
class AuthRequestPasswordRecovery extends TlMethod<AuthPasswordRecoveryBase> {
  /// Auth Request Password Recovery constructor.
  const AuthRequestPasswordRecovery() : super._();

  /// Deserialize.
  factory AuthRequestPasswordRecovery.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Recover Password.
///
/// ID: `37096c70`.
class AuthRecoverPassword extends TlMethod<AuthAuthorizationBase> {
  /// Auth Recover Password constructor.
  const AuthRecoverPassword({
    required this.flags,
    required this.code,
    required this.newSettings,
  }) : super._();

  /// Deserialize.
  factory AuthRecoverPassword.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Code.
  final String code;

  /// New Settings.
  final AccountPasswordInputSettingsBase? newSettings;

  /// If [newSettings] exists.
  bool get hasNewSettingsField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Invoke Without Updates.
///
/// ID: `bf9459b7`.
class InvokeWithoutUpdates<X> extends TlMethod<X> {
  /// Invoke Without Updates constructor.
  const InvokeWithoutUpdates({
    required this.query,
  }) : super._();

  /// Deserialize.
  factory InvokeWithoutUpdates.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Query.
  final TlMethod<X> query;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Export Chat Invite.
///
/// ID: `a02ce5d5`.
class MessagesExportChatInvite extends TlMethod<ExportedChatInviteBase> {
  /// Messages Export Chat Invite constructor.
  const MessagesExportChatInvite({
    required this.flags,
    required this.peer,
    required this.expireDate,
    required this.usageLimit,
    required this.title,
  }) : super._();

  /// Deserialize.
  factory MessagesExportChatInvite.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// legacy_revoke_permanent: bit
  bool get legacyRevokePermanent => _bit(flags, 2);

  /// request_needed: bit
  bool get requestNeeded => _bit(flags, 3);

  /// Peer.
  final InputPeerBase peer;

  /// Expire Date.
  final int? expireDate;

  /// If [expireDate] exists.
  bool get hasExpireDateField => _bit(flags, 0);

  /// Usage Limit.
  final int? usageLimit;

  /// If [usageLimit] exists.
  bool get hasUsageLimitField => _bit(flags, 1);

  /// Title.
  final String? title;

  /// If [title] exists.
  bool get hasTitleField => _bit(flags, 4);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Check Chat Invite.
///
/// ID: `3eadb1bb`.
class MessagesCheckChatInvite extends TlMethod<ChatInviteBase> {
  /// Messages Check Chat Invite constructor.
  const MessagesCheckChatInvite({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesCheckChatInvite.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final String hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Import Chat Invite.
///
/// ID: `6c50051c`.
class MessagesImportChatInvite extends TlMethod<UpdatesBase> {
  /// Messages Import Chat Invite constructor.
  const MessagesImportChatInvite({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesImportChatInvite.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final String hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Sticker Set.
///
/// ID: `c8a0ec74`.
class MessagesGetStickerSet extends TlMethod<MessagesStickerSetBase> {
  /// Messages Get Sticker Set constructor.
  const MessagesGetStickerSet({
    required this.stickerset,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetStickerSet.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Stickerset.
  final InputStickerSetBase stickerset;

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Install Sticker Set.
///
/// ID: `c78fe460`.
class MessagesInstallStickerSet
    extends TlMethod<MessagesStickerSetInstallResultBase> {
  /// Messages Install Sticker Set constructor.
  const MessagesInstallStickerSet({
    required this.stickerset,
    required this.archived,
  }) : super._();

  /// Deserialize.
  factory MessagesInstallStickerSet.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Stickerset.
  final InputStickerSetBase stickerset;

  /// Archived.
  final bool archived;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Uninstall Sticker Set.
///
/// ID: `f96e55de`.
class MessagesUninstallStickerSet extends TlMethod<bool> {
  /// Messages Uninstall Sticker Set constructor.
  const MessagesUninstallStickerSet({
    required this.stickerset,
  }) : super._();

  /// Deserialize.
  factory MessagesUninstallStickerSet.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Stickerset.
  final InputStickerSetBase stickerset;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Start Bot.
///
/// ID: `e6df7378`.
class MessagesStartBot extends TlMethod<UpdatesBase> {
  /// Messages Start Bot constructor.
  const MessagesStartBot({
    required this.bot,
    required this.peer,
    required this.randomId,
    required this.startParam,
  }) : super._();

  /// Deserialize.
  factory MessagesStartBot.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Bot.
  final InputUserBase bot;

  /// Peer.
  final InputPeerBase peer;

  /// Random Id.
  final int randomId;

  /// Start Param.
  final String startParam;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Messages Views.
///
/// ID: `5784d3e1`.
class MessagesGetMessagesViews extends TlMethod<MessagesMessageViewsBase> {
  /// Messages Get Messages Views constructor.
  const MessagesGetMessagesViews({
    required this.peer,
    required this.id,
    required this.increment,
  }) : super._();

  /// Deserialize.
  factory MessagesGetMessagesViews.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final List<int> id;

  /// Increment.
  final bool increment;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Read History.
///
/// ID: `cc104937`.
class ChannelsReadHistory extends TlMethod<bool> {
  /// Channels Read History constructor.
  const ChannelsReadHistory({
    required this.channel,
    required this.maxId,
  }) : super._();

  /// Deserialize.
  factory ChannelsReadHistory.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Max Id.
  final int maxId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Delete Messages.
///
/// ID: `84c1fd4e`.
class ChannelsDeleteMessages extends TlMethod<MessagesAffectedMessagesBase> {
  /// Channels Delete Messages constructor.
  const ChannelsDeleteMessages({
    required this.channel,
    required this.id,
  }) : super._();

  /// Deserialize.
  factory ChannelsDeleteMessages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Id.
  final List<int> id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Report Spam.
///
/// ID: `f44a8315`.
class ChannelsReportSpam extends TlMethod<bool> {
  /// Channels Report Spam constructor.
  const ChannelsReportSpam({
    required this.channel,
    required this.participant,
    required this.id,
  }) : super._();

  /// Deserialize.
  factory ChannelsReportSpam.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Participant.
  final InputPeerBase participant;

  /// Id.
  final List<int> id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Get Messages.
///
/// ID: `ad8c9a23`.
class ChannelsGetMessages extends TlMethod<MessagesMessagesBase> {
  /// Channels Get Messages constructor.
  const ChannelsGetMessages({
    required this.channel,
    required this.id,
  }) : super._();

  /// Deserialize.
  factory ChannelsGetMessages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Id.
  final List<InputMessageBase> id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Get Participants.
///
/// ID: `77ced9d0`.
class ChannelsGetParticipants
    extends TlMethod<ChannelsChannelParticipantsBase> {
  /// Channels Get Participants constructor.
  const ChannelsGetParticipants({
    required this.channel,
    required this.filter,
    required this.offset,
    required this.limit,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory ChannelsGetParticipants.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Filter.
  final ChannelParticipantsFilterBase filter;

  /// Offset.
  final int offset;

  /// Limit.
  final int limit;

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Get Participant.
///
/// ID: `a0ab6cc6`.
class ChannelsGetParticipant extends TlMethod<ChannelsChannelParticipantBase> {
  /// Channels Get Participant constructor.
  const ChannelsGetParticipant({
    required this.channel,
    required this.participant,
  }) : super._();

  /// Deserialize.
  factory ChannelsGetParticipant.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Participant.
  final InputPeerBase participant;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Get Channels.
///
/// ID: `0a7f6bbb`.
class ChannelsGetChannels extends TlMethod<MessagesChatsBase> {
  /// Channels Get Channels constructor.
  const ChannelsGetChannels({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory ChannelsGetChannels.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final List<InputChannelBase> id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Get Full Channel.
///
/// ID: `08736a09`.
class ChannelsGetFullChannel extends TlMethod<MessagesChatFullBase> {
  /// Channels Get Full Channel constructor.
  const ChannelsGetFullChannel({
    required this.channel,
  }) : super._();

  /// Deserialize.
  factory ChannelsGetFullChannel.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Create Channel.
///
/// ID: `91006707`.
class ChannelsCreateChannel extends TlMethod<UpdatesBase> {
  /// Channels Create Channel constructor.
  const ChannelsCreateChannel({
    required this.flags,
    required this.title,
    required this.about,
    required this.geoPoint,
    required this.address,
    required this.ttlPeriod,
  }) : super._();

  /// Deserialize.
  factory ChannelsCreateChannel.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// broadcast: bit
  bool get broadcast => _bit(flags, 0);

  /// megagroup: bit
  bool get megagroup => _bit(flags, 1);

  /// for_import: bit
  bool get forImport => _bit(flags, 3);

  /// forum: bit
  bool get forum => _bit(flags, 5);

  /// Title.
  final String title;

  /// About.
  final String about;

  /// Geo Point.
  final InputGeoPointBase? geoPoint;

  /// If [geoPoint] exists.
  bool get hasGeoPointField => _bit(flags, 2);

  /// Address.
  final String? address;

  /// If [address] exists.
  bool get hasAddressField => _bit(flags, 2);

  /// Ttl Period.
  final int? ttlPeriod;

  /// If [ttlPeriod] exists.
  bool get hasTtlPeriodField => _bit(flags, 4);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Edit Admin.
///
/// ID: `d33c8902`.
class ChannelsEditAdmin extends TlMethod<UpdatesBase> {
  /// Channels Edit Admin constructor.
  const ChannelsEditAdmin({
    required this.channel,
    required this.userId,
    required this.adminRights,
    required this.rank,
  }) : super._();

  /// Deserialize.
  factory ChannelsEditAdmin.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// User Id.
  final InputUserBase userId;

  /// Admin Rights.
  final ChatAdminRightsBase adminRights;

  /// Rank.
  final String rank;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Edit Title.
///
/// ID: `566decd0`.
class ChannelsEditTitle extends TlMethod<UpdatesBase> {
  /// Channels Edit Title constructor.
  const ChannelsEditTitle({
    required this.channel,
    required this.title,
  }) : super._();

  /// Deserialize.
  factory ChannelsEditTitle.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Title.
  final String title;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Edit Photo.
///
/// ID: `f12e57c9`.
class ChannelsEditPhoto extends TlMethod<UpdatesBase> {
  /// Channels Edit Photo constructor.
  const ChannelsEditPhoto({
    required this.channel,
    required this.photo,
  }) : super._();

  /// Deserialize.
  factory ChannelsEditPhoto.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Photo.
  final InputChatPhotoBase photo;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Check Username.
///
/// ID: `10e6bd2c`.
class ChannelsCheckUsername extends TlMethod<bool> {
  /// Channels Check Username constructor.
  const ChannelsCheckUsername({
    required this.channel,
    required this.username,
  }) : super._();

  /// Deserialize.
  factory ChannelsCheckUsername.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Username.
  final String username;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Update Username.
///
/// ID: `3514b3de`.
class ChannelsUpdateUsername extends TlMethod<bool> {
  /// Channels Update Username constructor.
  const ChannelsUpdateUsername({
    required this.channel,
    required this.username,
  }) : super._();

  /// Deserialize.
  factory ChannelsUpdateUsername.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Username.
  final String username;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Join Channel.
///
/// ID: `24b524c5`.
class ChannelsJoinChannel extends TlMethod<UpdatesBase> {
  /// Channels Join Channel constructor.
  const ChannelsJoinChannel({
    required this.channel,
  }) : super._();

  /// Deserialize.
  factory ChannelsJoinChannel.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Leave Channel.
///
/// ID: `f836aa95`.
class ChannelsLeaveChannel extends TlMethod<UpdatesBase> {
  /// Channels Leave Channel constructor.
  const ChannelsLeaveChannel({
    required this.channel,
  }) : super._();

  /// Deserialize.
  factory ChannelsLeaveChannel.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Invite To Channel.
///
/// ID: `199f3a6c`.
class ChannelsInviteToChannel extends TlMethod<UpdatesBase> {
  /// Channels Invite To Channel constructor.
  const ChannelsInviteToChannel({
    required this.channel,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory ChannelsInviteToChannel.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Users.
  final List<InputUserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Delete Channel.
///
/// ID: `c0111fe3`.
class ChannelsDeleteChannel extends TlMethod<UpdatesBase> {
  /// Channels Delete Channel constructor.
  const ChannelsDeleteChannel({
    required this.channel,
  }) : super._();

  /// Deserialize.
  factory ChannelsDeleteChannel.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Updates Get Channel Difference.
///
/// ID: `03173d78`.
class UpdatesGetChannelDifference
    extends TlMethod<UpdatesChannelDifferenceBase> {
  /// Updates Get Channel Difference constructor.
  const UpdatesGetChannelDifference({
    required this.flags,
    required this.channel,
    required this.filter,
    required this.pts,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory UpdatesGetChannelDifference.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// force: bit
  bool get force => _bit(flags, 0);

  /// Channel.
  final InputChannelBase channel;

  /// Filter.
  final ChannelMessagesFilterBase filter;

  /// Pts.
  final int pts;

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Edit Chat Admin.
///
/// ID: `a85bd1c2`.
class MessagesEditChatAdmin extends TlMethod<bool> {
  /// Messages Edit Chat Admin constructor.
  const MessagesEditChatAdmin({
    required this.chatId,
    required this.userId,
    required this.isAdmin,
  }) : super._();

  /// Deserialize.
  factory MessagesEditChatAdmin.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chat Id.
  final int chatId;

  /// User Id.
  final InputUserBase userId;

  /// Is Admin.
  final bool isAdmin;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Migrate Chat.
///
/// ID: `a2875319`.
class MessagesMigrateChat extends TlMethod<UpdatesBase> {
  /// Messages Migrate Chat constructor.
  const MessagesMigrateChat({
    required this.chatId,
  }) : super._();

  /// Deserialize.
  factory MessagesMigrateChat.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chat Id.
  final int chatId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Search Global.
///
/// ID: `4bc6589a`.
class MessagesSearchGlobal extends TlMethod<MessagesMessagesBase> {
  /// Messages Search Global constructor.
  const MessagesSearchGlobal({
    required this.flags,
    required this.folderId,
    required this.q,
    required this.filter,
    required this.minDate,
    required this.maxDate,
    required this.offsetRate,
    required this.offsetPeer,
    required this.offsetId,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory MessagesSearchGlobal.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Folder Id.
  final int? folderId;

  /// If [folderId] exists.
  bool get hasFolderIdField => _bit(flags, 0);

  /// Q.
  final String q;

  /// Filter.
  final MessagesFilterBase filter;

  /// Min Date.
  final int minDate;

  /// Max Date.
  final int maxDate;

  /// Offset Rate.
  final int offsetRate;

  /// Offset Peer.
  final InputPeerBase offsetPeer;

  /// Offset Id.
  final int offsetId;

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Reorder Sticker Sets.
///
/// ID: `78337739`.
class MessagesReorderStickerSets extends TlMethod<bool> {
  /// Messages Reorder Sticker Sets constructor.
  const MessagesReorderStickerSets({
    required this.flags,
    required this.order,
  }) : super._();

  /// Deserialize.
  factory MessagesReorderStickerSets.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// masks: bit
  bool get masks => _bit(flags, 0);

  /// emojis: bit
  bool get emojis => _bit(flags, 1);

  /// Order.
  final List<int> order;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Document By Hash.
///
/// ID: `b1f2061f`.
class MessagesGetDocumentByHash extends TlMethod<DocumentBase> {
  /// Messages Get Document By Hash constructor.
  const MessagesGetDocumentByHash({
    required this.sha256,
    required this.size,
    required this.mimeType,
  }) : super._();

  /// Deserialize.
  factory MessagesGetDocumentByHash.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Sha256.
  final Uint8List sha256;

  /// Size.
  final int size;

  /// Mime Type.
  final String mimeType;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Saved Gifs.
///
/// ID: `5cf09635`.
class MessagesGetSavedGifs extends TlMethod<MessagesSavedGifsBase> {
  /// Messages Get Saved Gifs constructor.
  const MessagesGetSavedGifs({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetSavedGifs.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Save Gif.
///
/// ID: `327a30cb`.
class MessagesSaveGif extends TlMethod<bool> {
  /// Messages Save Gif constructor.
  const MessagesSaveGif({
    required this.id,
    required this.unsave,
  }) : super._();

  /// Deserialize.
  factory MessagesSaveGif.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final InputDocumentBase id;

  /// Unsave.
  final bool unsave;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Inline Bot Results.
///
/// ID: `514e999d`.
class MessagesGetInlineBotResults extends TlMethod<MessagesBotResultsBase> {
  /// Messages Get Inline Bot Results constructor.
  const MessagesGetInlineBotResults({
    required this.flags,
    required this.bot,
    required this.peer,
    required this.geoPoint,
    required this.query,
    required this.offset,
  }) : super._();

  /// Deserialize.
  factory MessagesGetInlineBotResults.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Bot.
  final InputUserBase bot;

  /// Peer.
  final InputPeerBase peer;

  /// Geo Point.
  final InputGeoPointBase? geoPoint;

  /// If [geoPoint] exists.
  bool get hasGeoPointField => _bit(flags, 0);

  /// Query.
  final String query;

  /// Offset.
  final String offset;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Set Inline Bot Results.
///
/// ID: `bb12a419`.
class MessagesSetInlineBotResults extends TlMethod<bool> {
  /// Messages Set Inline Bot Results constructor.
  const MessagesSetInlineBotResults({
    required this.flags,
    required this.queryId,
    required this.results,
    required this.cacheTime,
    required this.nextOffset,
    required this.switchPm,
    required this.switchWebview,
  }) : super._();

  /// Deserialize.
  factory MessagesSetInlineBotResults.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// gallery: bit
  bool get gallery => _bit(flags, 0);

  /// private: bit
  bool get private => _bit(flags, 1);

  /// Query Id.
  final int queryId;

  /// Results.
  final List<InputBotInlineResultBase> results;

  /// Cache Time.
  final int cacheTime;

  /// Next Offset.
  final String? nextOffset;

  /// If [nextOffset] exists.
  bool get hasNextOffsetField => _bit(flags, 2);

  /// Switch Pm.
  final InlineBotSwitchPMBase? switchPm;

  /// If [switchPm] exists.
  bool get hasSwitchPmField => _bit(flags, 3);

  /// Switch Webview.
  final InlineBotWebViewBase? switchWebview;

  /// If [switchWebview] exists.
  bool get hasSwitchWebviewField => _bit(flags, 4);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Send Inline Bot Result.
///
/// ID: `f7bc68ba`.
class MessagesSendInlineBotResult extends TlMethod<UpdatesBase> {
  /// Messages Send Inline Bot Result constructor.
  const MessagesSendInlineBotResult({
    required this.flags,
    required this.peer,
    required this.replyTo,
    required this.randomId,
    required this.queryId,
    required this.id,
    required this.scheduleDate,
    required this.sendAs,
  }) : super._();

  /// Deserialize.
  factory MessagesSendInlineBotResult.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// silent: bit
  bool get silent => _bit(flags, 5);

  /// background: bit
  bool get background => _bit(flags, 6);

  /// clear_draft: bit
  bool get clearDraft => _bit(flags, 7);

  /// hide_via: bit
  bool get hideVia => _bit(flags, 11);

  /// Peer.
  final InputPeerBase peer;

  /// Reply To.
  final InputReplyToBase? replyTo;

  /// If [replyTo] exists.
  bool get hasReplyToField => _bit(flags, 0);

  /// Random Id.
  final int randomId;

  /// Query Id.
  final int queryId;

  /// Id.
  final String id;

  /// Schedule Date.
  final int? scheduleDate;

  /// If [scheduleDate] exists.
  bool get hasScheduleDateField => _bit(flags, 10);

  /// Send As.
  final InputPeerBase? sendAs;

  /// If [sendAs] exists.
  bool get hasSendAsField => _bit(flags, 13);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Export Message Link.
///
/// ID: `e63fadeb`.
class ChannelsExportMessageLink extends TlMethod<ExportedMessageLinkBase> {
  /// Channels Export Message Link constructor.
  const ChannelsExportMessageLink({
    required this.flags,
    required this.channel,
    required this.id,
  }) : super._();

  /// Deserialize.
  factory ChannelsExportMessageLink.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// grouped: bit
  bool get grouped => _bit(flags, 0);

  /// thread: bit
  bool get thread => _bit(flags, 1);

  /// Channel.
  final InputChannelBase channel;

  /// Id.
  final int id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Toggle Signatures.
///
/// ID: `1f69b606`.
class ChannelsToggleSignatures extends TlMethod<UpdatesBase> {
  /// Channels Toggle Signatures constructor.
  const ChannelsToggleSignatures({
    required this.channel,
    required this.enabled,
  }) : super._();

  /// Deserialize.
  factory ChannelsToggleSignatures.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Enabled.
  final bool enabled;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Resend Code.
///
/// ID: `3ef1a9bf`.
class AuthResendCode extends TlMethod<AuthSentCodeBase> {
  /// Auth Resend Code constructor.
  const AuthResendCode({
    required this.phoneNumber,
    required this.phoneCodeHash,
  }) : super._();

  /// Deserialize.
  factory AuthResendCode.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Phone Number.
  final String phoneNumber;

  /// Phone Code Hash.
  final String phoneCodeHash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Cancel Code.
///
/// ID: `1f040578`.
class AuthCancelCode extends TlMethod<bool> {
  /// Auth Cancel Code constructor.
  const AuthCancelCode({
    required this.phoneNumber,
    required this.phoneCodeHash,
  }) : super._();

  /// Deserialize.
  factory AuthCancelCode.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Phone Number.
  final String phoneNumber;

  /// Phone Code Hash.
  final String phoneCodeHash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Message Edit Data.
///
/// ID: `fda68d36`.
class MessagesGetMessageEditData extends TlMethod<MessagesMessageEditDataBase> {
  /// Messages Get Message Edit Data constructor.
  const MessagesGetMessageEditData({
    required this.peer,
    required this.id,
  }) : super._();

  /// Deserialize.
  factory MessagesGetMessageEditData.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final int id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Edit Message.
///
/// ID: `48f71778`.
class MessagesEditMessage extends TlMethod<UpdatesBase> {
  /// Messages Edit Message constructor.
  const MessagesEditMessage({
    required this.flags,
    required this.peer,
    required this.id,
    required this.message,
    required this.media,
    required this.replyMarkup,
    required this.entities,
    required this.scheduleDate,
  }) : super._();

  /// Deserialize.
  factory MessagesEditMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// no_webpage: bit
  bool get noWebpage => _bit(flags, 1);

  /// invert_media: bit
  bool get invertMedia => _bit(flags, 16);

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final int id;

  /// Message.
  final String? message;

  /// If [message] exists.
  bool get hasMessageField => _bit(flags, 11);

  /// Media.
  final InputMediaBase? media;

  /// If [media] exists.
  bool get hasMediaField => _bit(flags, 14);

  /// Reply Markup.
  final ReplyMarkupBase? replyMarkup;

  /// If [replyMarkup] exists.
  bool get hasReplyMarkupField => _bit(flags, 2);

  /// Entities.
  final List<MessageEntityBase>? entities;

  /// If [entities] exists.
  bool get hasEntitiesField => _bit(flags, 3);

  /// Schedule Date.
  final int? scheduleDate;

  /// If [scheduleDate] exists.
  bool get hasScheduleDateField => _bit(flags, 15);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Edit Inline Bot Message.
///
/// ID: `83557dba`.
class MessagesEditInlineBotMessage extends TlMethod<bool> {
  /// Messages Edit Inline Bot Message constructor.
  const MessagesEditInlineBotMessage({
    required this.flags,
    required this.id,
    required this.message,
    required this.media,
    required this.replyMarkup,
    required this.entities,
  }) : super._();

  /// Deserialize.
  factory MessagesEditInlineBotMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// no_webpage: bit
  bool get noWebpage => _bit(flags, 1);

  /// invert_media: bit
  bool get invertMedia => _bit(flags, 16);

  /// Id.
  final InputBotInlineMessageIDBase id;

  /// Message.
  final String? message;

  /// If [message] exists.
  bool get hasMessageField => _bit(flags, 11);

  /// Media.
  final InputMediaBase? media;

  /// If [media] exists.
  bool get hasMediaField => _bit(flags, 14);

  /// Reply Markup.
  final ReplyMarkupBase? replyMarkup;

  /// If [replyMarkup] exists.
  bool get hasReplyMarkupField => _bit(flags, 2);

  /// Entities.
  final List<MessageEntityBase>? entities;

  /// If [entities] exists.
  bool get hasEntitiesField => _bit(flags, 3);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Bot Callback Answer.
///
/// ID: `9342ca07`.
class MessagesGetBotCallbackAnswer
    extends TlMethod<MessagesBotCallbackAnswerBase> {
  /// Messages Get Bot Callback Answer constructor.
  const MessagesGetBotCallbackAnswer({
    required this.flags,
    required this.peer,
    required this.msgId,
    required this.data,
    required this.password,
  }) : super._();

  /// Deserialize.
  factory MessagesGetBotCallbackAnswer.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// game: bit
  bool get game => _bit(flags, 1);

  /// Peer.
  final InputPeerBase peer;

  /// Msg Id.
  final int msgId;

  /// Data.
  final Uint8List? data;

  /// If [data] exists.
  bool get hasDataField => _bit(flags, 0);

  /// Password.
  final InputCheckPasswordSRPBase? password;

  /// If [password] exists.
  bool get hasPasswordField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Set Bot Callback Answer.
///
/// ID: `d58f130a`.
class MessagesSetBotCallbackAnswer extends TlMethod<bool> {
  /// Messages Set Bot Callback Answer constructor.
  const MessagesSetBotCallbackAnswer({
    required this.flags,
    required this.queryId,
    required this.message,
    required this.url,
    required this.cacheTime,
  }) : super._();

  /// Deserialize.
  factory MessagesSetBotCallbackAnswer.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// alert: bit
  bool get alert => _bit(flags, 1);

  /// Query Id.
  final int queryId;

  /// Message.
  final String? message;

  /// If [message] exists.
  bool get hasMessageField => _bit(flags, 0);

  /// Url.
  final String? url;

  /// If [url] exists.
  bool get hasUrlField => _bit(flags, 2);

  /// Cache Time.
  final int cacheTime;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Get Top Peers.
///
/// ID: `973478b6`.
class ContactsGetTopPeers extends TlMethod<ContactsTopPeersBase> {
  /// Contacts Get Top Peers constructor.
  const ContactsGetTopPeers({
    required this.flags,
    required this.offset,
    required this.limit,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory ContactsGetTopPeers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// correspondents: bit
  bool get correspondents => _bit(flags, 0);

  /// bots_pm: bit
  bool get botsPm => _bit(flags, 1);

  /// bots_inline: bit
  bool get botsInline => _bit(flags, 2);

  /// phone_calls: bit
  bool get phoneCalls => _bit(flags, 3);

  /// forward_users: bit
  bool get forwardUsers => _bit(flags, 4);

  /// forward_chats: bit
  bool get forwardChats => _bit(flags, 5);

  /// groups: bit
  bool get groups => _bit(flags, 10);

  /// channels: bit
  bool get channels => _bit(flags, 15);

  /// Offset.
  final int offset;

  /// Limit.
  final int limit;

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Reset Top Peer Rating.
///
/// ID: `1ae373ac`.
class ContactsResetTopPeerRating extends TlMethod<bool> {
  /// Contacts Reset Top Peer Rating constructor.
  const ContactsResetTopPeerRating({
    required this.category,
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory ContactsResetTopPeerRating.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Category.
  final TopPeerCategoryBase category;

  /// Peer.
  final InputPeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Peer Dialogs.
///
/// ID: `e470bcfd`.
class MessagesGetPeerDialogs extends TlMethod<MessagesPeerDialogsBase> {
  /// Messages Get Peer Dialogs constructor.
  const MessagesGetPeerDialogs({
    required this.peers,
  }) : super._();

  /// Deserialize.
  factory MessagesGetPeerDialogs.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peers.
  final List<InputDialogPeerBase> peers;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Save Draft.
///
/// ID: `7ff3b806`.
class MessagesSaveDraft extends TlMethod<bool> {
  /// Messages Save Draft constructor.
  const MessagesSaveDraft({
    required this.flags,
    required this.replyTo,
    required this.peer,
    required this.message,
    required this.entities,
    required this.media,
  }) : super._();

  /// Deserialize.
  factory MessagesSaveDraft.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// no_webpage: bit
  bool get noWebpage => _bit(flags, 1);

  /// invert_media: bit
  bool get invertMedia => _bit(flags, 6);

  /// Reply To.
  final InputReplyToBase? replyTo;

  /// If [replyTo] exists.
  bool get hasReplyToField => _bit(flags, 4);

  /// Peer.
  final InputPeerBase peer;

  /// Message.
  final String message;

  /// Entities.
  final List<MessageEntityBase>? entities;

  /// If [entities] exists.
  bool get hasEntitiesField => _bit(flags, 3);

  /// Media.
  final InputMediaBase? media;

  /// If [media] exists.
  bool get hasMediaField => _bit(flags, 5);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get All Drafts.
///
/// ID: `6a3f8d65`.
class MessagesGetAllDrafts extends TlMethod<UpdatesBase> {
  /// Messages Get All Drafts constructor.
  const MessagesGetAllDrafts() : super._();

  /// Deserialize.
  factory MessagesGetAllDrafts.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Featured Stickers.
///
/// ID: `64780b14`.
class MessagesGetFeaturedStickers
    extends TlMethod<MessagesFeaturedStickersBase> {
  /// Messages Get Featured Stickers constructor.
  const MessagesGetFeaturedStickers({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetFeaturedStickers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Read Featured Stickers.
///
/// ID: `5b118126`.
class MessagesReadFeaturedStickers extends TlMethod<bool> {
  /// Messages Read Featured Stickers constructor.
  const MessagesReadFeaturedStickers({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory MessagesReadFeaturedStickers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final List<int> id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Recent Stickers.
///
/// ID: `9da9403b`.
class MessagesGetRecentStickers extends TlMethod<MessagesRecentStickersBase> {
  /// Messages Get Recent Stickers constructor.
  const MessagesGetRecentStickers({
    required this.flags,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetRecentStickers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// attached: bit
  bool get attached => _bit(flags, 0);

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Save Recent Sticker.
///
/// ID: `392718f8`.
class MessagesSaveRecentSticker extends TlMethod<bool> {
  /// Messages Save Recent Sticker constructor.
  const MessagesSaveRecentSticker({
    required this.flags,
    required this.id,
    required this.unsave,
  }) : super._();

  /// Deserialize.
  factory MessagesSaveRecentSticker.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// attached: bit
  bool get attached => _bit(flags, 0);

  /// Id.
  final InputDocumentBase id;

  /// Unsave.
  final bool unsave;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Clear Recent Stickers.
///
/// ID: `8999602d`.
class MessagesClearRecentStickers extends TlMethod<bool> {
  /// Messages Clear Recent Stickers constructor.
  const MessagesClearRecentStickers({
    required this.flags,
  }) : super._();

  /// Deserialize.
  factory MessagesClearRecentStickers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// attached: bit
  bool get attached => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Archived Stickers.
///
/// ID: `57f17692`.
class MessagesGetArchivedStickers
    extends TlMethod<MessagesArchivedStickersBase> {
  /// Messages Get Archived Stickers constructor.
  const MessagesGetArchivedStickers({
    required this.flags,
    required this.offsetId,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory MessagesGetArchivedStickers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// masks: bit
  bool get masks => _bit(flags, 0);

  /// emojis: bit
  bool get emojis => _bit(flags, 1);

  /// Offset Id.
  final int offsetId;

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Send Confirm Phone Code.
///
/// ID: `1b3faa88`.
class AccountSendConfirmPhoneCode extends TlMethod<AuthSentCodeBase> {
  /// Account Send Confirm Phone Code constructor.
  const AccountSendConfirmPhoneCode({
    required this.hash,
    required this.settings,
  }) : super._();

  /// Deserialize.
  factory AccountSendConfirmPhoneCode.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final String hash;

  /// Settings.
  final CodeSettingsBase settings;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Confirm Phone.
///
/// ID: `5f2178c3`.
class AccountConfirmPhone extends TlMethod<bool> {
  /// Account Confirm Phone constructor.
  const AccountConfirmPhone({
    required this.phoneCodeHash,
    required this.phoneCode,
  }) : super._();

  /// Deserialize.
  factory AccountConfirmPhone.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Phone Code Hash.
  final String phoneCodeHash;

  /// Phone Code.
  final String phoneCode;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Get Admined Public Channels.
///
/// ID: `f8b036af`.
class ChannelsGetAdminedPublicChannels extends TlMethod<MessagesChatsBase> {
  /// Channels Get Admined Public Channels constructor.
  const ChannelsGetAdminedPublicChannels({
    required this.flags,
  }) : super._();

  /// Deserialize.
  factory ChannelsGetAdminedPublicChannels.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// by_location: bit
  bool get byLocation => _bit(flags, 0);

  /// check_limit: bit
  bool get checkLimit => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Mask Stickers.
///
/// ID: `640f82b8`.
class MessagesGetMaskStickers extends TlMethod<MessagesAllStickersBase> {
  /// Messages Get Mask Stickers constructor.
  const MessagesGetMaskStickers({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetMaskStickers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Attached Stickers.
///
/// ID: `cc5b67cc`.
class MessagesGetAttachedStickers
    extends TlMethod<List<StickerSetCoveredBase>> {
  /// Messages Get Attached Stickers constructor.
  const MessagesGetAttachedStickers({
    required this.media,
  }) : super._();

  /// Deserialize.
  factory MessagesGetAttachedStickers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Media.
  final InputStickeredMediaBase media;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Drop Temp Auth Keys.
///
/// ID: `8e48a188`.
class AuthDropTempAuthKeys extends TlMethod<bool> {
  /// Auth Drop Temp Auth Keys constructor.
  const AuthDropTempAuthKeys({
    required this.exceptAuthKeys,
  }) : super._();

  /// Deserialize.
  factory AuthDropTempAuthKeys.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Except Auth Keys.
  final List<int> exceptAuthKeys;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Set Game Score.
///
/// ID: `8ef8ecc0`.
class MessagesSetGameScore extends TlMethod<UpdatesBase> {
  /// Messages Set Game Score constructor.
  const MessagesSetGameScore({
    required this.flags,
    required this.peer,
    required this.id,
    required this.userId,
    required this.score,
  }) : super._();

  /// Deserialize.
  factory MessagesSetGameScore.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// edit_message: bit
  bool get editMessage => _bit(flags, 0);

  /// force: bit
  bool get force => _bit(flags, 1);

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final int id;

  /// User Id.
  final InputUserBase userId;

  /// Score.
  final int score;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Set Inline Game Score.
///
/// ID: `15ad9f64`.
class MessagesSetInlineGameScore extends TlMethod<bool> {
  /// Messages Set Inline Game Score constructor.
  const MessagesSetInlineGameScore({
    required this.flags,
    required this.id,
    required this.userId,
    required this.score,
  }) : super._();

  /// Deserialize.
  factory MessagesSetInlineGameScore.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// edit_message: bit
  bool get editMessage => _bit(flags, 0);

  /// force: bit
  bool get force => _bit(flags, 1);

  /// Id.
  final InputBotInlineMessageIDBase id;

  /// User Id.
  final InputUserBase userId;

  /// Score.
  final int score;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Game High Scores.
///
/// ID: `e822649d`.
class MessagesGetGameHighScores extends TlMethod<MessagesHighScoresBase> {
  /// Messages Get Game High Scores constructor.
  const MessagesGetGameHighScores({
    required this.peer,
    required this.id,
    required this.userId,
  }) : super._();

  /// Deserialize.
  factory MessagesGetGameHighScores.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final int id;

  /// User Id.
  final InputUserBase userId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Inline Game High Scores.
///
/// ID: `0f635e1b`.
class MessagesGetInlineGameHighScores extends TlMethod<MessagesHighScoresBase> {
  /// Messages Get Inline Game High Scores constructor.
  const MessagesGetInlineGameHighScores({
    required this.id,
    required this.userId,
  }) : super._();

  /// Deserialize.
  factory MessagesGetInlineGameHighScores.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final InputBotInlineMessageIDBase id;

  /// User Id.
  final InputUserBase userId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Common Chats.
///
/// ID: `e40ca104`.
class MessagesGetCommonChats extends TlMethod<MessagesChatsBase> {
  /// Messages Get Common Chats constructor.
  const MessagesGetCommonChats({
    required this.userId,
    required this.maxId,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory MessagesGetCommonChats.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final InputUserBase userId;

  /// Max Id.
  final int maxId;

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Set Bot Updates Status.
///
/// ID: `ec22cfcd`.
class HelpSetBotUpdatesStatus extends TlMethod<bool> {
  /// Help Set Bot Updates Status constructor.
  const HelpSetBotUpdatesStatus({
    required this.pendingUpdatesCount,
    required this.message,
  }) : super._();

  /// Deserialize.
  factory HelpSetBotUpdatesStatus.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Pending Updates Count.
  final int pendingUpdatesCount;

  /// Message.
  final String message;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Web Page.
///
/// ID: `8d9692a3`.
class MessagesGetWebPage extends TlMethod<MessagesWebPageBase> {
  /// Messages Get Web Page constructor.
  const MessagesGetWebPage({
    required this.url,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetWebPage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Url.
  final String url;

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Toggle Dialog Pin.
///
/// ID: `a731e257`.
class MessagesToggleDialogPin extends TlMethod<bool> {
  /// Messages Toggle Dialog Pin constructor.
  const MessagesToggleDialogPin({
    required this.flags,
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory MessagesToggleDialogPin.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// pinned: bit
  bool get pinned => _bit(flags, 0);

  /// Peer.
  final InputDialogPeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Reorder Pinned Dialogs.
///
/// ID: `3b1adf37`.
class MessagesReorderPinnedDialogs extends TlMethod<bool> {
  /// Messages Reorder Pinned Dialogs constructor.
  const MessagesReorderPinnedDialogs({
    required this.flags,
    required this.folderId,
    required this.order,
  }) : super._();

  /// Deserialize.
  factory MessagesReorderPinnedDialogs.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// force: bit
  bool get force => _bit(flags, 0);

  /// Folder Id.
  final int folderId;

  /// Order.
  final List<InputDialogPeerBase> order;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Pinned Dialogs.
///
/// ID: `d6b94df2`.
class MessagesGetPinnedDialogs extends TlMethod<MessagesPeerDialogsBase> {
  /// Messages Get Pinned Dialogs constructor.
  const MessagesGetPinnedDialogs({
    required this.folderId,
  }) : super._();

  /// Deserialize.
  factory MessagesGetPinnedDialogs.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Folder Id.
  final int folderId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bots Send Custom Request.
///
/// ID: `aa2769ed`.
class BotsSendCustomRequest extends TlMethod<DataJSONBase> {
  /// Bots Send Custom Request constructor.
  const BotsSendCustomRequest({
    required this.customMethod,
    required this.params,
  }) : super._();

  /// Deserialize.
  factory BotsSendCustomRequest.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Custom Method.
  final String customMethod;

  /// Params.
  final DataJSONBase params;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bots Answer Webhook J S O N Query.
///
/// ID: `e6213f4d`.
class BotsAnswerWebhookJSONQuery extends TlMethod<bool> {
  /// Bots Answer Webhook J S O N Query constructor.
  const BotsAnswerWebhookJSONQuery({
    required this.queryId,
    required this.data,
  }) : super._();

  /// Deserialize.
  factory BotsAnswerWebhookJSONQuery.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Query Id.
  final int queryId;

  /// Data.
  final DataJSONBase data;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Upload Get Web File.
///
/// ID: `24e6818d`.
class UploadGetWebFile extends TlMethod<UploadWebFileBase> {
  /// Upload Get Web File constructor.
  const UploadGetWebFile({
    required this.location,
    required this.offset,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory UploadGetWebFile.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Location.
  final InputWebFileLocationBase location;

  /// Offset.
  final int offset;

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Payments Get Payment Form.
///
/// ID: `37148dbb`.
class PaymentsGetPaymentForm extends TlMethod<PaymentsPaymentFormBase> {
  /// Payments Get Payment Form constructor.
  const PaymentsGetPaymentForm({
    required this.flags,
    required this.invoice,
    required this.themeParams,
  }) : super._();

  /// Deserialize.
  factory PaymentsGetPaymentForm.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Invoice.
  final InputInvoiceBase invoice;

  /// Theme Params.
  final DataJSONBase? themeParams;

  /// If [themeParams] exists.
  bool get hasThemeParamsField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Payments Get Payment Receipt.
///
/// ID: `2478d1cc`.
class PaymentsGetPaymentReceipt extends TlMethod<PaymentsPaymentReceiptBase> {
  /// Payments Get Payment Receipt constructor.
  const PaymentsGetPaymentReceipt({
    required this.peer,
    required this.msgId,
  }) : super._();

  /// Deserialize.
  factory PaymentsGetPaymentReceipt.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Msg Id.
  final int msgId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Payments Validate Requested Info.
///
/// ID: `b6c8f12b`.
class PaymentsValidateRequestedInfo
    extends TlMethod<PaymentsValidatedRequestedInfoBase> {
  /// Payments Validate Requested Info constructor.
  const PaymentsValidateRequestedInfo({
    required this.flags,
    required this.invoice,
    required this.info,
  }) : super._();

  /// Deserialize.
  factory PaymentsValidateRequestedInfo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// save: bit
  bool get save => _bit(flags, 0);

  /// Invoice.
  final InputInvoiceBase invoice;

  /// Info.
  final PaymentRequestedInfoBase info;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Payments Send Payment Form.
///
/// ID: `2d03522f`.
class PaymentsSendPaymentForm extends TlMethod<PaymentsPaymentResultBase> {
  /// Payments Send Payment Form constructor.
  const PaymentsSendPaymentForm({
    required this.flags,
    required this.formId,
    required this.invoice,
    required this.requestedInfoId,
    required this.shippingOptionId,
    required this.credentials,
    required this.tipAmount,
  }) : super._();

  /// Deserialize.
  factory PaymentsSendPaymentForm.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Form Id.
  final int formId;

  /// Invoice.
  final InputInvoiceBase invoice;

  /// Requested Info Id.
  final String? requestedInfoId;

  /// If [requestedInfoId] exists.
  bool get hasRequestedInfoIdField => _bit(flags, 0);

  /// Shipping Option Id.
  final String? shippingOptionId;

  /// If [shippingOptionId] exists.
  bool get hasShippingOptionIdField => _bit(flags, 1);

  /// Credentials.
  final InputPaymentCredentialsBase credentials;

  /// Tip Amount.
  final int? tipAmount;

  /// If [tipAmount] exists.
  bool get hasTipAmountField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Tmp Password.
///
/// ID: `449e0b51`.
class AccountGetTmpPassword extends TlMethod<AccountTmpPasswordBase> {
  /// Account Get Tmp Password constructor.
  const AccountGetTmpPassword({
    required this.password,
    required this.period,
  }) : super._();

  /// Deserialize.
  factory AccountGetTmpPassword.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Password.
  final InputCheckPasswordSRPBase password;

  /// Period.
  final int period;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Payments Get Saved Info.
///
/// ID: `227d824b`.
class PaymentsGetSavedInfo extends TlMethod<PaymentsSavedInfoBase> {
  /// Payments Get Saved Info constructor.
  const PaymentsGetSavedInfo() : super._();

  /// Deserialize.
  factory PaymentsGetSavedInfo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Payments Clear Saved Info.
///
/// ID: `d83d70c1`.
class PaymentsClearSavedInfo extends TlMethod<bool> {
  /// Payments Clear Saved Info constructor.
  const PaymentsClearSavedInfo({
    required this.flags,
  }) : super._();

  /// Deserialize.
  factory PaymentsClearSavedInfo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// credentials: bit
  bool get credentials => _bit(flags, 0);

  /// info: bit
  bool get info => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Set Bot Shipping Results.
///
/// ID: `e5f672fa`.
class MessagesSetBotShippingResults extends TlMethod<bool> {
  /// Messages Set Bot Shipping Results constructor.
  const MessagesSetBotShippingResults({
    required this.flags,
    required this.queryId,
    required this.error,
    required this.shippingOptions,
  }) : super._();

  /// Deserialize.
  factory MessagesSetBotShippingResults.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Query Id.
  final int queryId;

  /// Error.
  final String? error;

  /// If [error] exists.
  bool get hasErrorField => _bit(flags, 0);

  /// Shipping Options.
  final List<ShippingOptionBase>? shippingOptions;

  /// If [shippingOptions] exists.
  bool get hasShippingOptionsField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Set Bot Precheckout Results.
///
/// ID: `09c2dd95`.
class MessagesSetBotPrecheckoutResults extends TlMethod<bool> {
  /// Messages Set Bot Precheckout Results constructor.
  const MessagesSetBotPrecheckoutResults({
    required this.flags,
    required this.queryId,
    required this.error,
  }) : super._();

  /// Deserialize.
  factory MessagesSetBotPrecheckoutResults.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// success: bit
  bool get success => _bit(flags, 1);

  /// Query Id.
  final int queryId;

  /// Error.
  final String? error;

  /// If [error] exists.
  bool get hasErrorField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stickers Create Sticker Set.
///
/// ID: `9021ab67`.
class StickersCreateStickerSet extends TlMethod<MessagesStickerSetBase> {
  /// Stickers Create Sticker Set constructor.
  const StickersCreateStickerSet({
    required this.flags,
    required this.userId,
    required this.title,
    required this.shortName,
    required this.thumb,
    required this.stickers,
    required this.software,
  }) : super._();

  /// Deserialize.
  factory StickersCreateStickerSet.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// masks: bit
  bool get masks => _bit(flags, 0);

  /// animated: bit
  bool get animated => _bit(flags, 1);

  /// videos: bit
  bool get videos => _bit(flags, 4);

  /// emojis: bit
  bool get emojis => _bit(flags, 5);

  /// text_color: bit
  bool get textColor => _bit(flags, 6);

  /// User Id.
  final InputUserBase userId;

  /// Title.
  final String title;

  /// Short Name.
  final String shortName;

  /// Thumb.
  final InputDocumentBase? thumb;

  /// If [thumb] exists.
  bool get hasThumbField => _bit(flags, 2);

  /// Stickers.
  final List<InputStickerSetItemBase> stickers;

  /// Software.
  final String? software;

  /// If [software] exists.
  bool get hasSoftwareField => _bit(flags, 3);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stickers Remove Sticker From Set.
///
/// ID: `f7760f51`.
class StickersRemoveStickerFromSet extends TlMethod<MessagesStickerSetBase> {
  /// Stickers Remove Sticker From Set constructor.
  const StickersRemoveStickerFromSet({
    required this.sticker,
  }) : super._();

  /// Deserialize.
  factory StickersRemoveStickerFromSet.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Sticker.
  final InputDocumentBase sticker;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stickers Change Sticker Position.
///
/// ID: `ffb6d4ca`.
class StickersChangeStickerPosition extends TlMethod<MessagesStickerSetBase> {
  /// Stickers Change Sticker Position constructor.
  const StickersChangeStickerPosition({
    required this.sticker,
    required this.position,
  }) : super._();

  /// Deserialize.
  factory StickersChangeStickerPosition.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Sticker.
  final InputDocumentBase sticker;

  /// Position.
  final int position;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stickers Add Sticker To Set.
///
/// ID: `8653febe`.
class StickersAddStickerToSet extends TlMethod<MessagesStickerSetBase> {
  /// Stickers Add Sticker To Set constructor.
  const StickersAddStickerToSet({
    required this.stickerset,
    required this.sticker,
  }) : super._();

  /// Deserialize.
  factory StickersAddStickerToSet.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Stickerset.
  final InputStickerSetBase stickerset;

  /// Sticker.
  final InputStickerSetItemBase sticker;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Upload Media.
///
/// ID: `519bc2b1`.
class MessagesUploadMedia extends TlMethod<MessageMediaBase> {
  /// Messages Upload Media constructor.
  const MessagesUploadMedia({
    required this.peer,
    required this.media,
  }) : super._();

  /// Deserialize.
  factory MessagesUploadMedia.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Media.
  final InputMediaBase media;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Get Call Config.
///
/// ID: `55451fa9`.
class PhoneGetCallConfig extends TlMethod<DataJSONBase> {
  /// Phone Get Call Config constructor.
  const PhoneGetCallConfig() : super._();

  /// Deserialize.
  factory PhoneGetCallConfig.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Request Call.
///
/// ID: `42ff96ed`.
class PhoneRequestCall extends TlMethod<PhonePhoneCallBase> {
  /// Phone Request Call constructor.
  const PhoneRequestCall({
    required this.flags,
    required this.userId,
    required this.randomId,
    required this.gAHash,
    required this.protocol,
  }) : super._();

  /// Deserialize.
  factory PhoneRequestCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// video: bit
  bool get video => _bit(flags, 0);

  /// User Id.
  final InputUserBase userId;

  /// Random Id.
  final int randomId;

  /// G A Hash.
  final Uint8List gAHash;

  /// Protocol.
  final PhoneCallProtocolBase protocol;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Accept Call.
///
/// ID: `3bd2b4a0`.
class PhoneAcceptCall extends TlMethod<PhonePhoneCallBase> {
  /// Phone Accept Call constructor.
  const PhoneAcceptCall({
    required this.peer,
    required this.gB,
    required this.protocol,
  }) : super._();

  /// Deserialize.
  factory PhoneAcceptCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPhoneCallBase peer;

  /// G B.
  final Uint8List gB;

  /// Protocol.
  final PhoneCallProtocolBase protocol;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Confirm Call.
///
/// ID: `2efe1722`.
class PhoneConfirmCall extends TlMethod<PhonePhoneCallBase> {
  /// Phone Confirm Call constructor.
  const PhoneConfirmCall({
    required this.peer,
    required this.gA,
    required this.keyFingerprint,
    required this.protocol,
  }) : super._();

  /// Deserialize.
  factory PhoneConfirmCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPhoneCallBase peer;

  /// G A.
  final Uint8List gA;

  /// Key Fingerprint.
  final int keyFingerprint;

  /// Protocol.
  final PhoneCallProtocolBase protocol;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Received Call.
///
/// ID: `17d54f61`.
class PhoneReceivedCall extends TlMethod<bool> {
  /// Phone Received Call constructor.
  const PhoneReceivedCall({
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory PhoneReceivedCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPhoneCallBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Discard Call.
///
/// ID: `b2cbc1c0`.
class PhoneDiscardCall extends TlMethod<UpdatesBase> {
  /// Phone Discard Call constructor.
  const PhoneDiscardCall({
    required this.flags,
    required this.peer,
    required this.duration,
    required this.reason,
    required this.connectionId,
  }) : super._();

  /// Deserialize.
  factory PhoneDiscardCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// video: bit
  bool get video => _bit(flags, 0);

  /// Peer.
  final InputPhoneCallBase peer;

  /// Duration.
  final int duration;

  /// Reason.
  final PhoneCallDiscardReasonBase reason;

  /// Connection Id.
  final int connectionId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Set Call Rating.
///
/// ID: `59ead627`.
class PhoneSetCallRating extends TlMethod<UpdatesBase> {
  /// Phone Set Call Rating constructor.
  const PhoneSetCallRating({
    required this.flags,
    required this.peer,
    required this.rating,
    required this.comment,
  }) : super._();

  /// Deserialize.
  factory PhoneSetCallRating.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// user_initiative: bit
  bool get userInitiative => _bit(flags, 0);

  /// Peer.
  final InputPhoneCallBase peer;

  /// Rating.
  final int rating;

  /// Comment.
  final String comment;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Save Call Debug.
///
/// ID: `277add7e`.
class PhoneSaveCallDebug extends TlMethod<bool> {
  /// Phone Save Call Debug constructor.
  const PhoneSaveCallDebug({
    required this.peer,
    required this.debug,
  }) : super._();

  /// Deserialize.
  factory PhoneSaveCallDebug.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPhoneCallBase peer;

  /// Debug.
  final DataJSONBase debug;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Upload Get Cdn File.
///
/// ID: `395f69da`.
class UploadGetCdnFile extends TlMethod<UploadCdnFileBase> {
  /// Upload Get Cdn File constructor.
  const UploadGetCdnFile({
    required this.fileToken,
    required this.offset,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory UploadGetCdnFile.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// File Token.
  final Uint8List fileToken;

  /// Offset.
  final int offset;

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Upload Reupload Cdn File.
///
/// ID: `9b2754a8`.
class UploadReuploadCdnFile extends TlMethod<List<FileHashBase>> {
  /// Upload Reupload Cdn File constructor.
  const UploadReuploadCdnFile({
    required this.fileToken,
    required this.requestToken,
  }) : super._();

  /// Deserialize.
  factory UploadReuploadCdnFile.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// File Token.
  final Uint8List fileToken;

  /// Request Token.
  final Uint8List requestToken;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Get Cdn Config.
///
/// ID: `52029342`.
class HelpGetCdnConfig extends TlMethod<CdnConfigBase> {
  /// Help Get Cdn Config constructor.
  const HelpGetCdnConfig() : super._();

  /// Deserialize.
  factory HelpGetCdnConfig.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Langpack Get Lang Pack.
///
/// ID: `f2f2330a`.
class LangpackGetLangPack extends TlMethod<LangPackDifferenceBase> {
  /// Langpack Get Lang Pack constructor.
  const LangpackGetLangPack({
    required this.langPack,
    required this.langCode,
  }) : super._();

  /// Deserialize.
  factory LangpackGetLangPack.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Lang Pack.
  final String langPack;

  /// Lang Code.
  final String langCode;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Langpack Get Strings.
///
/// ID: `efea3803`.
class LangpackGetStrings extends TlMethod<List<LangPackStringBase>> {
  /// Langpack Get Strings constructor.
  const LangpackGetStrings({
    required this.langPack,
    required this.langCode,
    required this.keys,
  }) : super._();

  /// Deserialize.
  factory LangpackGetStrings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Lang Pack.
  final String langPack;

  /// Lang Code.
  final String langCode;

  /// Keys.
  final List<String> keys;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Langpack Get Difference.
///
/// ID: `cd984aa5`.
class LangpackGetDifference extends TlMethod<LangPackDifferenceBase> {
  /// Langpack Get Difference constructor.
  const LangpackGetDifference({
    required this.langPack,
    required this.langCode,
    required this.fromVersion,
  }) : super._();

  /// Deserialize.
  factory LangpackGetDifference.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Lang Pack.
  final String langPack;

  /// Lang Code.
  final String langCode;

  /// From Version.
  final int fromVersion;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Langpack Get Languages.
///
/// ID: `42c6978f`.
class LangpackGetLanguages extends TlMethod<List<LangPackLanguageBase>> {
  /// Langpack Get Languages constructor.
  const LangpackGetLanguages({
    required this.langPack,
  }) : super._();

  /// Deserialize.
  factory LangpackGetLanguages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Lang Pack.
  final String langPack;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Edit Banned.
///
/// ID: `96e6cd81`.
class ChannelsEditBanned extends TlMethod<UpdatesBase> {
  /// Channels Edit Banned constructor.
  const ChannelsEditBanned({
    required this.channel,
    required this.participant,
    required this.bannedRights,
  }) : super._();

  /// Deserialize.
  factory ChannelsEditBanned.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Participant.
  final InputPeerBase participant;

  /// Banned Rights.
  final ChatBannedRightsBase bannedRights;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Get Admin Log.
///
/// ID: `33ddf480`.
class ChannelsGetAdminLog extends TlMethod<ChannelsAdminLogResultsBase> {
  /// Channels Get Admin Log constructor.
  const ChannelsGetAdminLog({
    required this.flags,
    required this.channel,
    required this.q,
    required this.eventsFilter,
    required this.admins,
    required this.maxId,
    required this.minId,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory ChannelsGetAdminLog.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Channel.
  final InputChannelBase channel;

  /// Q.
  final String q;

  /// Events Filter.
  final ChannelAdminLogEventsFilterBase? eventsFilter;

  /// If [eventsFilter] exists.
  bool get hasEventsFilterField => _bit(flags, 0);

  /// Admins.
  final List<InputUserBase>? admins;

  /// If [admins] exists.
  bool get hasAdminsField => _bit(flags, 1);

  /// Max Id.
  final int maxId;

  /// Min Id.
  final int minId;

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Upload Get Cdn File Hashes.
///
/// ID: `91dc3f31`.
class UploadGetCdnFileHashes extends TlMethod<List<FileHashBase>> {
  /// Upload Get Cdn File Hashes constructor.
  const UploadGetCdnFileHashes({
    required this.fileToken,
    required this.offset,
  }) : super._();

  /// Deserialize.
  factory UploadGetCdnFileHashes.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// File Token.
  final Uint8List fileToken;

  /// Offset.
  final int offset;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Send Screenshot Notification.
///
/// ID: `a1405817`.
class MessagesSendScreenshotNotification extends TlMethod<UpdatesBase> {
  /// Messages Send Screenshot Notification constructor.
  const MessagesSendScreenshotNotification({
    required this.peer,
    required this.replyTo,
    required this.randomId,
  }) : super._();

  /// Deserialize.
  factory MessagesSendScreenshotNotification.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Reply To.
  final InputReplyToBase replyTo;

  /// Random Id.
  final int randomId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Set Stickers.
///
/// ID: `ea8ca4f9`.
class ChannelsSetStickers extends TlMethod<bool> {
  /// Channels Set Stickers constructor.
  const ChannelsSetStickers({
    required this.channel,
    required this.stickerset,
  }) : super._();

  /// Deserialize.
  factory ChannelsSetStickers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Stickerset.
  final InputStickerSetBase stickerset;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Faved Stickers.
///
/// ID: `04f1aaa9`.
class MessagesGetFavedStickers extends TlMethod<MessagesFavedStickersBase> {
  /// Messages Get Faved Stickers constructor.
  const MessagesGetFavedStickers({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetFavedStickers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Fave Sticker.
///
/// ID: `b9ffc55b`.
class MessagesFaveSticker extends TlMethod<bool> {
  /// Messages Fave Sticker constructor.
  const MessagesFaveSticker({
    required this.id,
    required this.unfave,
  }) : super._();

  /// Deserialize.
  factory MessagesFaveSticker.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final InputDocumentBase id;

  /// Unfave.
  final bool unfave;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Read Message Contents.
///
/// ID: `eab5dc38`.
class ChannelsReadMessageContents extends TlMethod<bool> {
  /// Channels Read Message Contents constructor.
  const ChannelsReadMessageContents({
    required this.channel,
    required this.id,
  }) : super._();

  /// Deserialize.
  factory ChannelsReadMessageContents.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Id.
  final List<int> id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Reset Saved.
///
/// ID: `879537f1`.
class ContactsResetSaved extends TlMethod<bool> {
  /// Contacts Reset Saved constructor.
  const ContactsResetSaved() : super._();

  /// Deserialize.
  factory ContactsResetSaved.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Unread Mentions.
///
/// ID: `f107e790`.
class MessagesGetUnreadMentions extends TlMethod<MessagesMessagesBase> {
  /// Messages Get Unread Mentions constructor.
  const MessagesGetUnreadMentions({
    required this.flags,
    required this.peer,
    required this.topMsgId,
    required this.offsetId,
    required this.addOffset,
    required this.limit,
    required this.maxId,
    required this.minId,
  }) : super._();

  /// Deserialize.
  factory MessagesGetUnreadMentions.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Peer.
  final InputPeerBase peer;

  /// Top Msg Id.
  final int? topMsgId;

  /// If [topMsgId] exists.
  bool get hasTopMsgIdField => _bit(flags, 0);

  /// Offset Id.
  final int offsetId;

  /// Add Offset.
  final int addOffset;

  /// Limit.
  final int limit;

  /// Max Id.
  final int maxId;

  /// Min Id.
  final int minId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Delete History.
///
/// ID: `9baa9647`.
class ChannelsDeleteHistory extends TlMethod<UpdatesBase> {
  /// Channels Delete History constructor.
  const ChannelsDeleteHistory({
    required this.flags,
    required this.channel,
    required this.maxId,
  }) : super._();

  /// Deserialize.
  factory ChannelsDeleteHistory.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// for_everyone: bit
  bool get forEveryone => _bit(flags, 0);

  /// Channel.
  final InputChannelBase channel;

  /// Max Id.
  final int maxId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Get Recent Me Urls.
///
/// ID: `3dc0f114`.
class HelpGetRecentMeUrls extends TlMethod<HelpRecentMeUrlsBase> {
  /// Help Get Recent Me Urls constructor.
  const HelpGetRecentMeUrls({
    required this.referer,
  }) : super._();

  /// Deserialize.
  factory HelpGetRecentMeUrls.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Referer.
  final String referer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Toggle Pre History Hidden.
///
/// ID: `eabbb94c`.
class ChannelsTogglePreHistoryHidden extends TlMethod<UpdatesBase> {
  /// Channels Toggle Pre History Hidden constructor.
  const ChannelsTogglePreHistoryHidden({
    required this.channel,
    required this.enabled,
  }) : super._();

  /// Deserialize.
  factory ChannelsTogglePreHistoryHidden.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Enabled.
  final bool enabled;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Read Mentions.
///
/// ID: `36e5bf4d`.
class MessagesReadMentions extends TlMethod<MessagesAffectedHistoryBase> {
  /// Messages Read Mentions constructor.
  const MessagesReadMentions({
    required this.flags,
    required this.peer,
    required this.topMsgId,
  }) : super._();

  /// Deserialize.
  factory MessagesReadMentions.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Peer.
  final InputPeerBase peer;

  /// Top Msg Id.
  final int? topMsgId;

  /// If [topMsgId] exists.
  bool get hasTopMsgIdField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Recent Locations.
///
/// ID: `702a40e0`.
class MessagesGetRecentLocations extends TlMethod<MessagesMessagesBase> {
  /// Messages Get Recent Locations constructor.
  const MessagesGetRecentLocations({
    required this.peer,
    required this.limit,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetRecentLocations.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Limit.
  final int limit;

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Send Multi Media.
///
/// ID: `456e8987`.
class MessagesSendMultiMedia extends TlMethod<UpdatesBase> {
  /// Messages Send Multi Media constructor.
  const MessagesSendMultiMedia({
    required this.flags,
    required this.peer,
    required this.replyTo,
    required this.multiMedia,
    required this.scheduleDate,
    required this.sendAs,
  }) : super._();

  /// Deserialize.
  factory MessagesSendMultiMedia.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// silent: bit
  bool get silent => _bit(flags, 5);

  /// background: bit
  bool get background => _bit(flags, 6);

  /// clear_draft: bit
  bool get clearDraft => _bit(flags, 7);

  /// noforwards: bit
  bool get noforwards => _bit(flags, 14);

  /// update_stickersets_order: bit
  bool get updateStickersetsOrder => _bit(flags, 15);

  /// invert_media: bit
  bool get invertMedia => _bit(flags, 16);

  /// Peer.
  final InputPeerBase peer;

  /// Reply To.
  final InputReplyToBase? replyTo;

  /// If [replyTo] exists.
  bool get hasReplyToField => _bit(flags, 0);

  /// Multi Media.
  final List<InputSingleMediaBase> multiMedia;

  /// Schedule Date.
  final int? scheduleDate;

  /// If [scheduleDate] exists.
  bool get hasScheduleDateField => _bit(flags, 10);

  /// Send As.
  final InputPeerBase? sendAs;

  /// If [sendAs] exists.
  bool get hasSendAsField => _bit(flags, 13);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Upload Encrypted File.
///
/// ID: `5057c497`.
class MessagesUploadEncryptedFile extends TlMethod<EncryptedFileBase> {
  /// Messages Upload Encrypted File constructor.
  const MessagesUploadEncryptedFile({
    required this.peer,
    required this.file,
  }) : super._();

  /// Deserialize.
  factory MessagesUploadEncryptedFile.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputEncryptedChatBase peer;

  /// File.
  final InputEncryptedFileBase file;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Web Authorizations.
///
/// ID: `182e6d6f`.
class AccountGetWebAuthorizations
    extends TlMethod<AccountWebAuthorizationsBase> {
  /// Account Get Web Authorizations constructor.
  const AccountGetWebAuthorizations() : super._();

  /// Deserialize.
  factory AccountGetWebAuthorizations.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Reset Web Authorization.
///
/// ID: `2d01b9ef`.
class AccountResetWebAuthorization extends TlMethod<bool> {
  /// Account Reset Web Authorization constructor.
  const AccountResetWebAuthorization({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory AccountResetWebAuthorization.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Reset Web Authorizations.
///
/// ID: `682d2594`.
class AccountResetWebAuthorizations extends TlMethod<bool> {
  /// Account Reset Web Authorizations constructor.
  const AccountResetWebAuthorizations() : super._();

  /// Deserialize.
  factory AccountResetWebAuthorizations.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Search Sticker Sets.
///
/// ID: `35705b8a`.
class MessagesSearchStickerSets extends TlMethod<MessagesFoundStickerSetsBase> {
  /// Messages Search Sticker Sets constructor.
  const MessagesSearchStickerSets({
    required this.flags,
    required this.q,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesSearchStickerSets.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// exclude_featured: bit
  bool get excludeFeatured => _bit(flags, 0);

  /// Q.
  final String q;

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Upload Get File Hashes.
///
/// ID: `9156982a`.
class UploadGetFileHashes extends TlMethod<List<FileHashBase>> {
  /// Upload Get File Hashes constructor.
  const UploadGetFileHashes({
    required this.location,
    required this.offset,
  }) : super._();

  /// Deserialize.
  factory UploadGetFileHashes.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Location.
  final InputFileLocationBase location;

  /// Offset.
  final int offset;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Get Terms Of Service Update.
///
/// ID: `2ca51fd1`.
class HelpGetTermsOfServiceUpdate
    extends TlMethod<HelpTermsOfServiceUpdateBase> {
  /// Help Get Terms Of Service Update constructor.
  const HelpGetTermsOfServiceUpdate() : super._();

  /// Deserialize.
  factory HelpGetTermsOfServiceUpdate.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Accept Terms Of Service.
///
/// ID: `ee72f79a`.
class HelpAcceptTermsOfService extends TlMethod<bool> {
  /// Help Accept Terms Of Service constructor.
  const HelpAcceptTermsOfService({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory HelpAcceptTermsOfService.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final DataJSONBase id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get All Secure Values.
///
/// ID: `b288bc7d`.
class AccountGetAllSecureValues extends TlMethod<List<SecureValueBase>> {
  /// Account Get All Secure Values constructor.
  const AccountGetAllSecureValues() : super._();

  /// Deserialize.
  factory AccountGetAllSecureValues.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Secure Value.
///
/// ID: `73665bc2`.
class AccountGetSecureValue extends TlMethod<List<SecureValueBase>> {
  /// Account Get Secure Value constructor.
  const AccountGetSecureValue({
    required this.types,
  }) : super._();

  /// Deserialize.
  factory AccountGetSecureValue.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Types.
  final List<SecureValueTypeBase> types;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Save Secure Value.
///
/// ID: `899fe31d`.
class AccountSaveSecureValue extends TlMethod<SecureValueBase> {
  /// Account Save Secure Value constructor.
  const AccountSaveSecureValue({
    required this.value,
    required this.secureSecretId,
  }) : super._();

  /// Deserialize.
  factory AccountSaveSecureValue.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Value.
  final InputSecureValueBase value;

  /// Secure Secret Id.
  final int secureSecretId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Delete Secure Value.
///
/// ID: `b880bc4b`.
class AccountDeleteSecureValue extends TlMethod<bool> {
  /// Account Delete Secure Value constructor.
  const AccountDeleteSecureValue({
    required this.types,
  }) : super._();

  /// Deserialize.
  factory AccountDeleteSecureValue.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Types.
  final List<SecureValueTypeBase> types;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Users Set Secure Value Errors.
///
/// ID: `90c894b5`.
class UsersSetSecureValueErrors extends TlMethod<bool> {
  /// Users Set Secure Value Errors constructor.
  const UsersSetSecureValueErrors({
    required this.id,
    required this.errors,
  }) : super._();

  /// Deserialize.
  factory UsersSetSecureValueErrors.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final InputUserBase id;

  /// Errors.
  final List<SecureValueErrorBase> errors;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Authorization Form.
///
/// ID: `a929597a`.
class AccountGetAuthorizationForm
    extends TlMethod<AccountAuthorizationFormBase> {
  /// Account Get Authorization Form constructor.
  const AccountGetAuthorizationForm({
    required this.botId,
    required this.scope,
    required this.publicKey,
  }) : super._();

  /// Deserialize.
  factory AccountGetAuthorizationForm.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Bot Id.
  final int botId;

  /// Scope.
  final String scope;

  /// Public Key.
  final String publicKey;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Accept Authorization.
///
/// ID: `f3ed4c73`.
class AccountAcceptAuthorization extends TlMethod<bool> {
  /// Account Accept Authorization constructor.
  const AccountAcceptAuthorization({
    required this.botId,
    required this.scope,
    required this.publicKey,
    required this.valueHashes,
    required this.credentials,
  }) : super._();

  /// Deserialize.
  factory AccountAcceptAuthorization.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Bot Id.
  final int botId;

  /// Scope.
  final String scope;

  /// Public Key.
  final String publicKey;

  /// Value Hashes.
  final List<SecureValueHashBase> valueHashes;

  /// Credentials.
  final SecureCredentialsEncryptedBase credentials;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Send Verify Phone Code.
///
/// ID: `a5a356f9`.
class AccountSendVerifyPhoneCode extends TlMethod<AuthSentCodeBase> {
  /// Account Send Verify Phone Code constructor.
  const AccountSendVerifyPhoneCode({
    required this.phoneNumber,
    required this.settings,
  }) : super._();

  /// Deserialize.
  factory AccountSendVerifyPhoneCode.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Phone Number.
  final String phoneNumber;

  /// Settings.
  final CodeSettingsBase settings;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Verify Phone.
///
/// ID: `4dd3a7f6`.
class AccountVerifyPhone extends TlMethod<bool> {
  /// Account Verify Phone constructor.
  const AccountVerifyPhone({
    required this.phoneNumber,
    required this.phoneCodeHash,
    required this.phoneCode,
  }) : super._();

  /// Deserialize.
  factory AccountVerifyPhone.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Phone Number.
  final String phoneNumber;

  /// Phone Code Hash.
  final String phoneCodeHash;

  /// Phone Code.
  final String phoneCode;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Send Verify Email Code.
///
/// ID: `98e037bb`.
class AccountSendVerifyEmailCode extends TlMethod<AccountSentEmailCodeBase> {
  /// Account Send Verify Email Code constructor.
  const AccountSendVerifyEmailCode({
    required this.purpose,
    required this.email,
  }) : super._();

  /// Deserialize.
  factory AccountSendVerifyEmailCode.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Purpose.
  final EmailVerifyPurposeBase purpose;

  /// Email.
  final String email;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Verify Email.
///
/// ID: `032da4cf`.
class AccountVerifyEmail extends TlMethod<AccountEmailVerifiedBase> {
  /// Account Verify Email constructor.
  const AccountVerifyEmail({
    required this.purpose,
    required this.verification,
  }) : super._();

  /// Deserialize.
  factory AccountVerifyEmail.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Purpose.
  final EmailVerifyPurposeBase purpose;

  /// Verification.
  final EmailVerificationBase verification;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Get Deep Link Info.
///
/// ID: `3fedc75f`.
class HelpGetDeepLinkInfo extends TlMethod<HelpDeepLinkInfoBase> {
  /// Help Get Deep Link Info constructor.
  const HelpGetDeepLinkInfo({
    required this.path,
  }) : super._();

  /// Deserialize.
  factory HelpGetDeepLinkInfo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Path.
  final String path;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Get Saved.
///
/// ID: `82f1e39f`.
class ContactsGetSaved extends TlMethod<List<SavedContactBase>> {
  /// Contacts Get Saved constructor.
  const ContactsGetSaved() : super._();

  /// Deserialize.
  factory ContactsGetSaved.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Get Left Channels.
///
/// ID: `8341ecc0`.
class ChannelsGetLeftChannels extends TlMethod<MessagesChatsBase> {
  /// Channels Get Left Channels constructor.
  const ChannelsGetLeftChannels({
    required this.offset,
  }) : super._();

  /// Deserialize.
  factory ChannelsGetLeftChannels.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Offset.
  final int offset;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Init Takeout Session.
///
/// ID: `8ef3eab0`.
class AccountInitTakeoutSession extends TlMethod<AccountTakeoutBase> {
  /// Account Init Takeout Session constructor.
  const AccountInitTakeoutSession({
    required this.flags,
    required this.fileMaxSize,
  }) : super._();

  /// Deserialize.
  factory AccountInitTakeoutSession.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// contacts: bit
  bool get contacts => _bit(flags, 0);

  /// message_users: bit
  bool get messageUsers => _bit(flags, 1);

  /// message_chats: bit
  bool get messageChats => _bit(flags, 2);

  /// message_megagroups: bit
  bool get messageMegagroups => _bit(flags, 3);

  /// message_channels: bit
  bool get messageChannels => _bit(flags, 4);

  /// files: bit
  bool get files => _bit(flags, 5);

  /// File Max Size.
  final int? fileMaxSize;

  /// If [fileMaxSize] exists.
  bool get hasFileMaxSizeField => _bit(flags, 5);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Finish Takeout Session.
///
/// ID: `1d2652ee`.
class AccountFinishTakeoutSession extends TlMethod<bool> {
  /// Account Finish Takeout Session constructor.
  const AccountFinishTakeoutSession({
    required this.flags,
  }) : super._();

  /// Deserialize.
  factory AccountFinishTakeoutSession.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// success: bit
  bool get success => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Split Ranges.
///
/// ID: `1cff7e08`.
class MessagesGetSplitRanges extends TlMethod<List<MessageRangeBase>> {
  /// Messages Get Split Ranges constructor.
  const MessagesGetSplitRanges() : super._();

  /// Deserialize.
  factory MessagesGetSplitRanges.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Invoke With Messages Range.
///
/// ID: `365275f2`.
class InvokeWithMessagesRange<X> extends TlMethod<X> {
  /// Invoke With Messages Range constructor.
  const InvokeWithMessagesRange({
    required this.range,
    required this.query,
  }) : super._();

  /// Deserialize.
  factory InvokeWithMessagesRange.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Range.
  final MessageRangeBase range;

  /// Query.
  final TlMethod<X> query;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Invoke With Takeout.
///
/// ID: `aca9fd2e`.
class InvokeWithTakeout<X> extends TlMethod<X> {
  /// Invoke With Takeout constructor.
  const InvokeWithTakeout({
    required this.takeoutId,
    required this.query,
  }) : super._();

  /// Deserialize.
  factory InvokeWithTakeout.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Takeout Id.
  final int takeoutId;

  /// Query.
  final TlMethod<X> query;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Mark Dialog Unread.
///
/// ID: `c286d98f`.
class MessagesMarkDialogUnread extends TlMethod<bool> {
  /// Messages Mark Dialog Unread constructor.
  const MessagesMarkDialogUnread({
    required this.flags,
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory MessagesMarkDialogUnread.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// unread: bit
  bool get unread => _bit(flags, 0);

  /// Peer.
  final InputDialogPeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Dialog Unread Marks.
///
/// ID: `22e24e22`.
class MessagesGetDialogUnreadMarks extends TlMethod<List<DialogPeerBase>> {
  /// Messages Get Dialog Unread Marks constructor.
  const MessagesGetDialogUnreadMarks() : super._();

  /// Deserialize.
  factory MessagesGetDialogUnreadMarks.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Toggle Top Peers.
///
/// ID: `8514bdda`.
class ContactsToggleTopPeers extends TlMethod<bool> {
  /// Contacts Toggle Top Peers constructor.
  const ContactsToggleTopPeers({
    required this.enabled,
  }) : super._();

  /// Deserialize.
  factory ContactsToggleTopPeers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Enabled.
  final bool enabled;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Clear All Drafts.
///
/// ID: `7e58ee9c`.
class MessagesClearAllDrafts extends TlMethod<bool> {
  /// Messages Clear All Drafts constructor.
  const MessagesClearAllDrafts() : super._();

  /// Deserialize.
  factory MessagesClearAllDrafts.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Get App Config.
///
/// ID: `61e3f854`.
class HelpGetAppConfig extends TlMethod<HelpAppConfigBase> {
  /// Help Get App Config constructor.
  const HelpGetAppConfig({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory HelpGetAppConfig.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Save App Log.
///
/// ID: `6f02f748`.
class HelpSaveAppLog extends TlMethod<bool> {
  /// Help Save App Log constructor.
  const HelpSaveAppLog({
    required this.events,
  }) : super._();

  /// Deserialize.
  factory HelpSaveAppLog.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Events.
  final List<InputAppEventBase> events;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Get Passport Config.
///
/// ID: `c661ad08`.
class HelpGetPassportConfig extends TlMethod<HelpPassportConfigBase> {
  /// Help Get Passport Config constructor.
  const HelpGetPassportConfig({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory HelpGetPassportConfig.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Langpack Get Language.
///
/// ID: `6a596502`.
class LangpackGetLanguage extends TlMethod<LangPackLanguageBase> {
  /// Langpack Get Language constructor.
  const LangpackGetLanguage({
    required this.langPack,
    required this.langCode,
  }) : super._();

  /// Deserialize.
  factory LangpackGetLanguage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Lang Pack.
  final String langPack;

  /// Lang Code.
  final String langCode;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Update Pinned Message.
///
/// ID: `d2aaf7ec`.
class MessagesUpdatePinnedMessage extends TlMethod<UpdatesBase> {
  /// Messages Update Pinned Message constructor.
  const MessagesUpdatePinnedMessage({
    required this.flags,
    required this.peer,
    required this.id,
  }) : super._();

  /// Deserialize.
  factory MessagesUpdatePinnedMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// silent: bit
  bool get silent => _bit(flags, 0);

  /// unpin: bit
  bool get unpin => _bit(flags, 1);

  /// pm_oneside: bit
  bool get pmOneside => _bit(flags, 2);

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final int id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Confirm Password Email.
///
/// ID: `8fdf1920`.
class AccountConfirmPasswordEmail extends TlMethod<bool> {
  /// Account Confirm Password Email constructor.
  const AccountConfirmPasswordEmail({
    required this.code,
  }) : super._();

  /// Deserialize.
  factory AccountConfirmPasswordEmail.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Code.
  final String code;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Resend Password Email.
///
/// ID: `7a7f2a15`.
class AccountResendPasswordEmail extends TlMethod<bool> {
  /// Account Resend Password Email constructor.
  const AccountResendPasswordEmail() : super._();

  /// Deserialize.
  factory AccountResendPasswordEmail.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Cancel Password Email.
///
/// ID: `c1cbd5b6`.
class AccountCancelPasswordEmail extends TlMethod<bool> {
  /// Account Cancel Password Email constructor.
  const AccountCancelPasswordEmail() : super._();

  /// Deserialize.
  factory AccountCancelPasswordEmail.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Get Support Name.
///
/// ID: `d360e72c`.
class HelpGetSupportName extends TlMethod<HelpSupportNameBase> {
  /// Help Get Support Name constructor.
  const HelpGetSupportName() : super._();

  /// Deserialize.
  factory HelpGetSupportName.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Get User Info.
///
/// ID: `038a08d3`.
class HelpGetUserInfo extends TlMethod<HelpUserInfoBase> {
  /// Help Get User Info constructor.
  const HelpGetUserInfo({
    required this.userId,
  }) : super._();

  /// Deserialize.
  factory HelpGetUserInfo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final InputUserBase userId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Edit User Info.
///
/// ID: `66b91b70`.
class HelpEditUserInfo extends TlMethod<HelpUserInfoBase> {
  /// Help Edit User Info constructor.
  const HelpEditUserInfo({
    required this.userId,
    required this.message,
    required this.entities,
  }) : super._();

  /// Deserialize.
  factory HelpEditUserInfo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final InputUserBase userId;

  /// Message.
  final String message;

  /// Entities.
  final List<MessageEntityBase> entities;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Contact Sign Up Notification.
///
/// ID: `9f07c728`.
class AccountGetContactSignUpNotification extends TlMethod<bool> {
  /// Account Get Contact Sign Up Notification constructor.
  const AccountGetContactSignUpNotification() : super._();

  /// Deserialize.
  factory AccountGetContactSignUpNotification.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Set Contact Sign Up Notification.
///
/// ID: `cff43f61`.
class AccountSetContactSignUpNotification extends TlMethod<bool> {
  /// Account Set Contact Sign Up Notification constructor.
  const AccountSetContactSignUpNotification({
    required this.silent,
  }) : super._();

  /// Deserialize.
  factory AccountSetContactSignUpNotification.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Silent.
  final bool silent;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Notify Exceptions.
///
/// ID: `53577479`.
class AccountGetNotifyExceptions extends TlMethod<UpdatesBase> {
  /// Account Get Notify Exceptions constructor.
  const AccountGetNotifyExceptions({
    required this.flags,
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory AccountGetNotifyExceptions.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// compare_sound: bit
  bool get compareSound => _bit(flags, 1);

  /// compare_stories: bit
  bool get compareStories => _bit(flags, 2);

  /// Peer.
  final InputNotifyPeerBase? peer;

  /// If [peer] exists.
  bool get hasPeerField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Send Vote.
///
/// ID: `10ea6184`.
class MessagesSendVote extends TlMethod<UpdatesBase> {
  /// Messages Send Vote constructor.
  const MessagesSendVote({
    required this.peer,
    required this.msgId,
    required this.options,
  }) : super._();

  /// Deserialize.
  factory MessagesSendVote.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Msg Id.
  final int msgId;

  /// Options.
  final List<Uint8List> options;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Poll Results.
///
/// ID: `73bb643b`.
class MessagesGetPollResults extends TlMethod<UpdatesBase> {
  /// Messages Get Poll Results constructor.
  const MessagesGetPollResults({
    required this.peer,
    required this.msgId,
  }) : super._();

  /// Deserialize.
  factory MessagesGetPollResults.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Msg Id.
  final int msgId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Onlines.
///
/// ID: `6e2be050`.
class MessagesGetOnlines extends TlMethod<ChatOnlinesBase> {
  /// Messages Get Onlines constructor.
  const MessagesGetOnlines({
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory MessagesGetOnlines.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Edit Chat About.
///
/// ID: `def60797`.
class MessagesEditChatAbout extends TlMethod<bool> {
  /// Messages Edit Chat About constructor.
  const MessagesEditChatAbout({
    required this.peer,
    required this.about,
  }) : super._();

  /// Deserialize.
  factory MessagesEditChatAbout.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// About.
  final String about;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Edit Chat Default Banned Rights.
///
/// ID: `a5866b41`.
class MessagesEditChatDefaultBannedRights extends TlMethod<UpdatesBase> {
  /// Messages Edit Chat Default Banned Rights constructor.
  const MessagesEditChatDefaultBannedRights({
    required this.peer,
    required this.bannedRights,
  }) : super._();

  /// Deserialize.
  factory MessagesEditChatDefaultBannedRights.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Banned Rights.
  final ChatBannedRightsBase bannedRights;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Wall Paper.
///
/// ID: `fc8ddbea`.
class AccountGetWallPaper extends TlMethod<WallPaperBase> {
  /// Account Get Wall Paper constructor.
  const AccountGetWallPaper({
    required this.wallpaper,
  }) : super._();

  /// Deserialize.
  factory AccountGetWallPaper.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Wallpaper.
  final InputWallPaperBase wallpaper;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Upload Wall Paper.
///
/// ID: `e39a8f03`.
class AccountUploadWallPaper extends TlMethod<WallPaperBase> {
  /// Account Upload Wall Paper constructor.
  const AccountUploadWallPaper({
    required this.flags,
    required this.file,
    required this.mimeType,
    required this.settings,
  }) : super._();

  /// Deserialize.
  factory AccountUploadWallPaper.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// for_chat: bit
  bool get forChat => _bit(flags, 0);

  /// File.
  final InputFileBase file;

  /// Mime Type.
  final String mimeType;

  /// Settings.
  final WallPaperSettingsBase settings;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Save Wall Paper.
///
/// ID: `6c5a5b37`.
class AccountSaveWallPaper extends TlMethod<bool> {
  /// Account Save Wall Paper constructor.
  const AccountSaveWallPaper({
    required this.wallpaper,
    required this.unsave,
    required this.settings,
  }) : super._();

  /// Deserialize.
  factory AccountSaveWallPaper.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Wallpaper.
  final InputWallPaperBase wallpaper;

  /// Unsave.
  final bool unsave;

  /// Settings.
  final WallPaperSettingsBase settings;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Install Wall Paper.
///
/// ID: `feed5769`.
class AccountInstallWallPaper extends TlMethod<bool> {
  /// Account Install Wall Paper constructor.
  const AccountInstallWallPaper({
    required this.wallpaper,
    required this.settings,
  }) : super._();

  /// Deserialize.
  factory AccountInstallWallPaper.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Wallpaper.
  final InputWallPaperBase wallpaper;

  /// Settings.
  final WallPaperSettingsBase settings;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Reset Wall Papers.
///
/// ID: `bb3b9804`.
class AccountResetWallPapers extends TlMethod<bool> {
  /// Account Reset Wall Papers constructor.
  const AccountResetWallPapers() : super._();

  /// Deserialize.
  factory AccountResetWallPapers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Auto Download Settings.
///
/// ID: `56da0b3f`.
class AccountGetAutoDownloadSettings
    extends TlMethod<AccountAutoDownloadSettingsBase> {
  /// Account Get Auto Download Settings constructor.
  const AccountGetAutoDownloadSettings() : super._();

  /// Deserialize.
  factory AccountGetAutoDownloadSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Save Auto Download Settings.
///
/// ID: `76f36233`.
class AccountSaveAutoDownloadSettings extends TlMethod<bool> {
  /// Account Save Auto Download Settings constructor.
  const AccountSaveAutoDownloadSettings({
    required this.flags,
    required this.settings,
  }) : super._();

  /// Deserialize.
  factory AccountSaveAutoDownloadSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// low: bit
  bool get low => _bit(flags, 0);

  /// high: bit
  bool get high => _bit(flags, 1);

  /// Settings.
  final AutoDownloadSettingsBase settings;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Emoji Keywords.
///
/// ID: `35a0e062`.
class MessagesGetEmojiKeywords extends TlMethod<EmojiKeywordsDifferenceBase> {
  /// Messages Get Emoji Keywords constructor.
  const MessagesGetEmojiKeywords({
    required this.langCode,
  }) : super._();

  /// Deserialize.
  factory MessagesGetEmojiKeywords.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Lang Code.
  final String langCode;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Emoji Keywords Difference.
///
/// ID: `1508b6af`.
class MessagesGetEmojiKeywordsDifference
    extends TlMethod<EmojiKeywordsDifferenceBase> {
  /// Messages Get Emoji Keywords Difference constructor.
  const MessagesGetEmojiKeywordsDifference({
    required this.langCode,
    required this.fromVersion,
  }) : super._();

  /// Deserialize.
  factory MessagesGetEmojiKeywordsDifference.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Lang Code.
  final String langCode;

  /// From Version.
  final int fromVersion;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Emoji Keywords Languages.
///
/// ID: `4e9963b2`.
class MessagesGetEmojiKeywordsLanguages
    extends TlMethod<List<EmojiLanguageBase>> {
  /// Messages Get Emoji Keywords Languages constructor.
  const MessagesGetEmojiKeywordsLanguages({
    required this.langCodes,
  }) : super._();

  /// Deserialize.
  factory MessagesGetEmojiKeywordsLanguages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Lang Codes.
  final List<String> langCodes;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Emoji U R L.
///
/// ID: `d5b10c26`.
class MessagesGetEmojiURL extends TlMethod<EmojiURLBase> {
  /// Messages Get Emoji U R L constructor.
  const MessagesGetEmojiURL({
    required this.langCode,
  }) : super._();

  /// Deserialize.
  factory MessagesGetEmojiURL.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Lang Code.
  final String langCode;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Folders Edit Peer Folders.
///
/// ID: `6847d0ab`.
class FoldersEditPeerFolders extends TlMethod<UpdatesBase> {
  /// Folders Edit Peer Folders constructor.
  const FoldersEditPeerFolders({
    required this.folderPeers,
  }) : super._();

  /// Deserialize.
  factory FoldersEditPeerFolders.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Folder Peers.
  final List<InputFolderPeerBase> folderPeers;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Search Counters.
///
/// ID: `1bbcf300`.
class MessagesGetSearchCounters
    extends TlMethod<List<MessagesSearchCounterBase>> {
  /// Messages Get Search Counters constructor.
  const MessagesGetSearchCounters({
    required this.flags,
    required this.peer,
    required this.savedPeerId,
    required this.topMsgId,
    required this.filters,
  }) : super._();

  /// Deserialize.
  factory MessagesGetSearchCounters.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Peer.
  final InputPeerBase peer;

  /// Saved Peer Id.
  final InputPeerBase? savedPeerId;

  /// If [savedPeerId] exists.
  bool get hasSavedPeerIdField => _bit(flags, 2);

  /// Top Msg Id.
  final int? topMsgId;

  /// If [topMsgId] exists.
  bool get hasTopMsgIdField => _bit(flags, 0);

  /// Filters.
  final List<MessagesFilterBase> filters;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Get Groups For Discussion.
///
/// ID: `f5dad378`.
class ChannelsGetGroupsForDiscussion extends TlMethod<MessagesChatsBase> {
  /// Channels Get Groups For Discussion constructor.
  const ChannelsGetGroupsForDiscussion() : super._();

  /// Deserialize.
  factory ChannelsGetGroupsForDiscussion.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Set Discussion Group.
///
/// ID: `40582bb2`.
class ChannelsSetDiscussionGroup extends TlMethod<bool> {
  /// Channels Set Discussion Group constructor.
  const ChannelsSetDiscussionGroup({
    required this.broadcast,
    required this.group,
  }) : super._();

  /// Deserialize.
  factory ChannelsSetDiscussionGroup.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Broadcast.
  final InputChannelBase broadcast;

  /// Group.
  final InputChannelBase group;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Request Url Auth.
///
/// ID: `198fb446`.
class MessagesRequestUrlAuth extends TlMethod<UrlAuthResultBase> {
  /// Messages Request Url Auth constructor.
  const MessagesRequestUrlAuth({
    required this.flags,
    required this.peer,
    required this.msgId,
    required this.buttonId,
    required this.url,
  }) : super._();

  /// Deserialize.
  factory MessagesRequestUrlAuth.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Peer.
  final InputPeerBase? peer;

  /// If [peer] exists.
  bool get hasPeerField => _bit(flags, 1);

  /// Msg Id.
  final int? msgId;

  /// If [msgId] exists.
  bool get hasMsgIdField => _bit(flags, 1);

  /// Button Id.
  final int? buttonId;

  /// If [buttonId] exists.
  bool get hasButtonIdField => _bit(flags, 1);

  /// Url.
  final String? url;

  /// If [url] exists.
  bool get hasUrlField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Accept Url Auth.
///
/// ID: `b12c7125`.
class MessagesAcceptUrlAuth extends TlMethod<UrlAuthResultBase> {
  /// Messages Accept Url Auth constructor.
  const MessagesAcceptUrlAuth({
    required this.flags,
    required this.peer,
    required this.msgId,
    required this.buttonId,
    required this.url,
  }) : super._();

  /// Deserialize.
  factory MessagesAcceptUrlAuth.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// write_allowed: bit
  bool get writeAllowed => _bit(flags, 0);

  /// Peer.
  final InputPeerBase? peer;

  /// If [peer] exists.
  bool get hasPeerField => _bit(flags, 1);

  /// Msg Id.
  final int? msgId;

  /// If [msgId] exists.
  bool get hasMsgIdField => _bit(flags, 1);

  /// Button Id.
  final int? buttonId;

  /// If [buttonId] exists.
  bool get hasButtonIdField => _bit(flags, 1);

  /// Url.
  final String? url;

  /// If [url] exists.
  bool get hasUrlField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Hide Peer Settings Bar.
///
/// ID: `4facb138`.
class MessagesHidePeerSettingsBar extends TlMethod<bool> {
  /// Messages Hide Peer Settings Bar constructor.
  const MessagesHidePeerSettingsBar({
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory MessagesHidePeerSettingsBar.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Add Contact.
///
/// ID: `e8f463d0`.
class ContactsAddContact extends TlMethod<UpdatesBase> {
  /// Contacts Add Contact constructor.
  const ContactsAddContact({
    required this.flags,
    required this.id,
    required this.firstName,
    required this.lastName,
    required this.phone,
  }) : super._();

  /// Deserialize.
  factory ContactsAddContact.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// add_phone_privacy_exception: bit
  bool get addPhonePrivacyException => _bit(flags, 0);

  /// Id.
  final InputUserBase id;

  /// First Name.
  final String firstName;

  /// Last Name.
  final String lastName;

  /// Phone.
  final String phone;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Accept Contact.
///
/// ID: `f831a20f`.
class ContactsAcceptContact extends TlMethod<UpdatesBase> {
  /// Contacts Accept Contact constructor.
  const ContactsAcceptContact({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory ContactsAcceptContact.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final InputUserBase id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Edit Creator.
///
/// ID: `8f38cd1f`.
class ChannelsEditCreator extends TlMethod<UpdatesBase> {
  /// Channels Edit Creator constructor.
  const ChannelsEditCreator({
    required this.channel,
    required this.userId,
    required this.password,
  }) : super._();

  /// Deserialize.
  factory ChannelsEditCreator.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// User Id.
  final InputUserBase userId;

  /// Password.
  final InputCheckPasswordSRPBase password;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Get Located.
///
/// ID: `d348bc44`.
class ContactsGetLocated extends TlMethod<UpdatesBase> {
  /// Contacts Get Located constructor.
  const ContactsGetLocated({
    required this.flags,
    required this.geoPoint,
    required this.selfExpires,
  }) : super._();

  /// Deserialize.
  factory ContactsGetLocated.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// background: bit
  bool get background => _bit(flags, 1);

  /// Geo Point.
  final InputGeoPointBase geoPoint;

  /// Self Expires.
  final int? selfExpires;

  /// If [selfExpires] exists.
  bool get hasSelfExpiresField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Edit Location.
///
/// ID: `58e63f6d`.
class ChannelsEditLocation extends TlMethod<bool> {
  /// Channels Edit Location constructor.
  const ChannelsEditLocation({
    required this.channel,
    required this.geoPoint,
    required this.address,
  }) : super._();

  /// Deserialize.
  factory ChannelsEditLocation.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Geo Point.
  final InputGeoPointBase geoPoint;

  /// Address.
  final String address;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Toggle Slow Mode.
///
/// ID: `edd49ef0`.
class ChannelsToggleSlowMode extends TlMethod<UpdatesBase> {
  /// Channels Toggle Slow Mode constructor.
  const ChannelsToggleSlowMode({
    required this.channel,
    required this.seconds,
  }) : super._();

  /// Deserialize.
  factory ChannelsToggleSlowMode.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Seconds.
  final int seconds;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Scheduled History.
///
/// ID: `f516760b`.
class MessagesGetScheduledHistory extends TlMethod<MessagesMessagesBase> {
  /// Messages Get Scheduled History constructor.
  const MessagesGetScheduledHistory({
    required this.peer,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetScheduledHistory.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Scheduled Messages.
///
/// ID: `bdbb0464`.
class MessagesGetScheduledMessages extends TlMethod<MessagesMessagesBase> {
  /// Messages Get Scheduled Messages constructor.
  const MessagesGetScheduledMessages({
    required this.peer,
    required this.id,
  }) : super._();

  /// Deserialize.
  factory MessagesGetScheduledMessages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final List<int> id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Send Scheduled Messages.
///
/// ID: `bd38850a`.
class MessagesSendScheduledMessages extends TlMethod<UpdatesBase> {
  /// Messages Send Scheduled Messages constructor.
  const MessagesSendScheduledMessages({
    required this.peer,
    required this.id,
  }) : super._();

  /// Deserialize.
  factory MessagesSendScheduledMessages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final List<int> id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Delete Scheduled Messages.
///
/// ID: `59ae2b16`.
class MessagesDeleteScheduledMessages extends TlMethod<UpdatesBase> {
  /// Messages Delete Scheduled Messages constructor.
  const MessagesDeleteScheduledMessages({
    required this.peer,
    required this.id,
  }) : super._();

  /// Deserialize.
  factory MessagesDeleteScheduledMessages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final List<int> id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Upload Theme.
///
/// ID: `1c3db333`.
class AccountUploadTheme extends TlMethod<DocumentBase> {
  /// Account Upload Theme constructor.
  const AccountUploadTheme({
    required this.flags,
    required this.file,
    required this.thumb,
    required this.fileName,
    required this.mimeType,
  }) : super._();

  /// Deserialize.
  factory AccountUploadTheme.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// File.
  final InputFileBase file;

  /// Thumb.
  final InputFileBase? thumb;

  /// If [thumb] exists.
  bool get hasThumbField => _bit(flags, 0);

  /// File Name.
  final String fileName;

  /// Mime Type.
  final String mimeType;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Create Theme.
///
/// ID: `652e4400`.
class AccountCreateTheme extends TlMethod<ThemeBase> {
  /// Account Create Theme constructor.
  const AccountCreateTheme({
    required this.flags,
    required this.slug,
    required this.title,
    required this.document,
    required this.settings,
  }) : super._();

  /// Deserialize.
  factory AccountCreateTheme.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Slug.
  final String slug;

  /// Title.
  final String title;

  /// Document.
  final InputDocumentBase? document;

  /// If [document] exists.
  bool get hasDocumentField => _bit(flags, 2);

  /// Settings.
  final List<InputThemeSettingsBase>? settings;

  /// If [settings] exists.
  bool get hasSettingsField => _bit(flags, 3);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Update Theme.
///
/// ID: `2bf40ccc`.
class AccountUpdateTheme extends TlMethod<ThemeBase> {
  /// Account Update Theme constructor.
  const AccountUpdateTheme({
    required this.flags,
    required this.format,
    required this.theme,
    required this.slug,
    required this.title,
    required this.document,
    required this.settings,
  }) : super._();

  /// Deserialize.
  factory AccountUpdateTheme.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Format.
  final String format;

  /// Theme.
  final InputThemeBase theme;

  /// Slug.
  final String? slug;

  /// If [slug] exists.
  bool get hasSlugField => _bit(flags, 0);

  /// Title.
  final String? title;

  /// If [title] exists.
  bool get hasTitleField => _bit(flags, 1);

  /// Document.
  final InputDocumentBase? document;

  /// If [document] exists.
  bool get hasDocumentField => _bit(flags, 2);

  /// Settings.
  final List<InputThemeSettingsBase>? settings;

  /// If [settings] exists.
  bool get hasSettingsField => _bit(flags, 3);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Save Theme.
///
/// ID: `f257106c`.
class AccountSaveTheme extends TlMethod<bool> {
  /// Account Save Theme constructor.
  const AccountSaveTheme({
    required this.theme,
    required this.unsave,
  }) : super._();

  /// Deserialize.
  factory AccountSaveTheme.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Theme.
  final InputThemeBase theme;

  /// Unsave.
  final bool unsave;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Install Theme.
///
/// ID: `c727bb3b`.
class AccountInstallTheme extends TlMethod<bool> {
  /// Account Install Theme constructor.
  const AccountInstallTheme({
    required this.flags,
    required this.theme,
    required this.format,
    required this.baseTheme,
  }) : super._();

  /// Deserialize.
  factory AccountInstallTheme.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// dark: bit
  bool get dark => _bit(flags, 0);

  /// Theme.
  final InputThemeBase? theme;

  /// If [theme] exists.
  bool get hasThemeField => _bit(flags, 1);

  /// Format.
  final String? format;

  /// If [format] exists.
  bool get hasFormatField => _bit(flags, 2);

  /// Base Theme.
  final BaseThemeBase? baseTheme;

  /// If [baseTheme] exists.
  bool get hasBaseThemeField => _bit(flags, 3);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Theme.
///
/// ID: `3a5869ec`.
class AccountGetTheme extends TlMethod<ThemeBase> {
  /// Account Get Theme constructor.
  const AccountGetTheme({
    required this.format,
    required this.theme,
  }) : super._();

  /// Deserialize.
  factory AccountGetTheme.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Format.
  final String format;

  /// Theme.
  final InputThemeBase theme;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Themes.
///
/// ID: `7206e458`.
class AccountGetThemes extends TlMethod<AccountThemesBase> {
  /// Account Get Themes constructor.
  const AccountGetThemes({
    required this.format,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory AccountGetThemes.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Format.
  final String format;

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Export Login Token.
///
/// ID: `b7e085fe`.
class AuthExportLoginToken extends TlMethod<AuthLoginTokenBase> {
  /// Auth Export Login Token constructor.
  const AuthExportLoginToken({
    required this.apiId,
    required this.apiHash,
    required this.exceptIds,
  }) : super._();

  /// Deserialize.
  factory AuthExportLoginToken.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Api Id.
  final int apiId;

  /// Api Hash.
  final String apiHash;

  /// Except Ids.
  final List<int> exceptIds;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Import Login Token.
///
/// ID: `95ac5ce4`.
class AuthImportLoginToken extends TlMethod<AuthLoginTokenBase> {
  /// Auth Import Login Token constructor.
  const AuthImportLoginToken({
    required this.token,
  }) : super._();

  /// Deserialize.
  factory AuthImportLoginToken.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Token.
  final Uint8List token;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Accept Login Token.
///
/// ID: `e894ad4d`.
class AuthAcceptLoginToken extends TlMethod<AuthorizationBase> {
  /// Auth Accept Login Token constructor.
  const AuthAcceptLoginToken({
    required this.token,
  }) : super._();

  /// Deserialize.
  factory AuthAcceptLoginToken.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Token.
  final Uint8List token;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Set Content Settings.
///
/// ID: `b574b16b`.
class AccountSetContentSettings extends TlMethod<bool> {
  /// Account Set Content Settings constructor.
  const AccountSetContentSettings({
    required this.flags,
  }) : super._();

  /// Deserialize.
  factory AccountSetContentSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// sensitive_enabled: bit
  bool get sensitiveEnabled => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Content Settings.
///
/// ID: `8b9b4dae`.
class AccountGetContentSettings extends TlMethod<AccountContentSettingsBase> {
  /// Account Get Content Settings constructor.
  const AccountGetContentSettings() : super._();

  /// Deserialize.
  factory AccountGetContentSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Get Inactive Channels.
///
/// ID: `11e831ee`.
class ChannelsGetInactiveChannels extends TlMethod<MessagesInactiveChatsBase> {
  /// Channels Get Inactive Channels constructor.
  const ChannelsGetInactiveChannels() : super._();

  /// Deserialize.
  factory ChannelsGetInactiveChannels.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Multi Wall Papers.
///
/// ID: `65ad71dc`.
class AccountGetMultiWallPapers extends TlMethod<List<WallPaperBase>> {
  /// Account Get Multi Wall Papers constructor.
  const AccountGetMultiWallPapers({
    required this.wallpapers,
  }) : super._();

  /// Deserialize.
  factory AccountGetMultiWallPapers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Wallpapers.
  final List<InputWallPaperBase> wallpapers;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Poll Votes.
///
/// ID: `b86e380e`.
class MessagesGetPollVotes extends TlMethod<MessagesVotesListBase> {
  /// Messages Get Poll Votes constructor.
  const MessagesGetPollVotes({
    required this.flags,
    required this.peer,
    required this.id,
    required this.option,
    required this.offset,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory MessagesGetPollVotes.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final int id;

  /// Option.
  final Uint8List? option;

  /// If [option] exists.
  bool get hasOptionField => _bit(flags, 0);

  /// Offset.
  final String? offset;

  /// If [offset] exists.
  bool get hasOffsetField => _bit(flags, 1);

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Toggle Sticker Sets.
///
/// ID: `b5052fea`.
class MessagesToggleStickerSets extends TlMethod<bool> {
  /// Messages Toggle Sticker Sets constructor.
  const MessagesToggleStickerSets({
    required this.flags,
    required this.stickersets,
  }) : super._();

  /// Deserialize.
  factory MessagesToggleStickerSets.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// uninstall: bit
  bool get uninstall => _bit(flags, 0);

  /// archive: bit
  bool get archive => _bit(flags, 1);

  /// unarchive: bit
  bool get unarchive => _bit(flags, 2);

  /// Stickersets.
  final List<InputStickerSetBase> stickersets;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Payments Get Bank Card Data.
///
/// ID: `2e79d779`.
class PaymentsGetBankCardData extends TlMethod<PaymentsBankCardDataBase> {
  /// Payments Get Bank Card Data constructor.
  const PaymentsGetBankCardData({
    required this.number,
  }) : super._();

  /// Deserialize.
  factory PaymentsGetBankCardData.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Number.
  final String number;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Dialog Filters.
///
/// ID: `f19ed96d`.
class MessagesGetDialogFilters extends TlMethod<List<DialogFilterBase>> {
  /// Messages Get Dialog Filters constructor.
  const MessagesGetDialogFilters() : super._();

  /// Deserialize.
  factory MessagesGetDialogFilters.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Suggested Dialog Filters.
///
/// ID: `a29cd42c`.
class MessagesGetSuggestedDialogFilters
    extends TlMethod<List<DialogFilterSuggestedBase>> {
  /// Messages Get Suggested Dialog Filters constructor.
  const MessagesGetSuggestedDialogFilters() : super._();

  /// Deserialize.
  factory MessagesGetSuggestedDialogFilters.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Update Dialog Filter.
///
/// ID: `1ad4a04a`.
class MessagesUpdateDialogFilter extends TlMethod<bool> {
  /// Messages Update Dialog Filter constructor.
  const MessagesUpdateDialogFilter({
    required this.flags,
    required this.id,
    required this.filter,
  }) : super._();

  /// Deserialize.
  factory MessagesUpdateDialogFilter.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Id.
  final int id;

  /// Filter.
  final DialogFilterBase? filter;

  /// If [filter] exists.
  bool get hasFilterField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Update Dialog Filters Order.
///
/// ID: `c563c1e4`.
class MessagesUpdateDialogFiltersOrder extends TlMethod<bool> {
  /// Messages Update Dialog Filters Order constructor.
  const MessagesUpdateDialogFiltersOrder({
    required this.order,
  }) : super._();

  /// Deserialize.
  factory MessagesUpdateDialogFiltersOrder.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Order.
  final List<int> order;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stats Get Broadcast Stats.
///
/// ID: `ab42441a`.
class StatsGetBroadcastStats extends TlMethod<StatsBroadcastStatsBase> {
  /// Stats Get Broadcast Stats constructor.
  const StatsGetBroadcastStats({
    required this.flags,
    required this.channel,
  }) : super._();

  /// Deserialize.
  factory StatsGetBroadcastStats.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// dark: bit
  bool get dark => _bit(flags, 0);

  /// Channel.
  final InputChannelBase channel;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stats Load Async Graph.
///
/// ID: `621d5fa0`.
class StatsLoadAsyncGraph extends TlMethod<StatsGraphBase> {
  /// Stats Load Async Graph constructor.
  const StatsLoadAsyncGraph({
    required this.flags,
    required this.token,
    required this.x,
  }) : super._();

  /// Deserialize.
  factory StatsLoadAsyncGraph.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Token.
  final String token;

  /// X.
  final int? x;

  /// If [x] exists.
  bool get hasXField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stickers Set Sticker Set Thumb.
///
/// ID: `a76a5392`.
class StickersSetStickerSetThumb extends TlMethod<MessagesStickerSetBase> {
  /// Stickers Set Sticker Set Thumb constructor.
  const StickersSetStickerSetThumb({
    required this.flags,
    required this.stickerset,
    required this.thumb,
    required this.thumbDocumentId,
  }) : super._();

  /// Deserialize.
  factory StickersSetStickerSetThumb.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Stickerset.
  final InputStickerSetBase stickerset;

  /// Thumb.
  final InputDocumentBase? thumb;

  /// If [thumb] exists.
  bool get hasThumbField => _bit(flags, 0);

  /// Thumb Document Id.
  final int? thumbDocumentId;

  /// If [thumbDocumentId] exists.
  bool get hasThumbDocumentIdField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bots Set Bot Commands.
///
/// ID: `0517165a`.
class BotsSetBotCommands extends TlMethod<bool> {
  /// Bots Set Bot Commands constructor.
  const BotsSetBotCommands({
    required this.scope,
    required this.langCode,
    required this.commands,
  }) : super._();

  /// Deserialize.
  factory BotsSetBotCommands.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Scope.
  final BotCommandScopeBase scope;

  /// Lang Code.
  final String langCode;

  /// Commands.
  final List<BotCommandBase> commands;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Old Featured Stickers.
///
/// ID: `7ed094a1`.
class MessagesGetOldFeaturedStickers
    extends TlMethod<MessagesFeaturedStickersBase> {
  /// Messages Get Old Featured Stickers constructor.
  const MessagesGetOldFeaturedStickers({
    required this.offset,
    required this.limit,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetOldFeaturedStickers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Offset.
  final int offset;

  /// Limit.
  final int limit;

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Get Promo Data.
///
/// ID: `c0977421`.
class HelpGetPromoData extends TlMethod<HelpPromoDataBase> {
  /// Help Get Promo Data constructor.
  const HelpGetPromoData() : super._();

  /// Deserialize.
  factory HelpGetPromoData.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Hide Promo Data.
///
/// ID: `1e251c95`.
class HelpHidePromoData extends TlMethod<bool> {
  /// Help Hide Promo Data constructor.
  const HelpHidePromoData({
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory HelpHidePromoData.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Send Signaling Data.
///
/// ID: `ff7a9383`.
class PhoneSendSignalingData extends TlMethod<bool> {
  /// Phone Send Signaling Data constructor.
  const PhoneSendSignalingData({
    required this.peer,
    required this.data,
  }) : super._();

  /// Deserialize.
  factory PhoneSendSignalingData.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPhoneCallBase peer;

  /// Data.
  final Uint8List data;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stats Get Megagroup Stats.
///
/// ID: `dcdf8607`.
class StatsGetMegagroupStats extends TlMethod<StatsMegagroupStatsBase> {
  /// Stats Get Megagroup Stats constructor.
  const StatsGetMegagroupStats({
    required this.flags,
    required this.channel,
  }) : super._();

  /// Deserialize.
  factory StatsGetMegagroupStats.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// dark: bit
  bool get dark => _bit(flags, 0);

  /// Channel.
  final InputChannelBase channel;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Global Privacy Settings.
///
/// ID: `eb2b4cf6`.
class AccountGetGlobalPrivacySettings
    extends TlMethod<GlobalPrivacySettingsBase> {
  /// Account Get Global Privacy Settings constructor.
  const AccountGetGlobalPrivacySettings() : super._();

  /// Deserialize.
  factory AccountGetGlobalPrivacySettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Set Global Privacy Settings.
///
/// ID: `1edaaac2`.
class AccountSetGlobalPrivacySettings
    extends TlMethod<GlobalPrivacySettingsBase> {
  /// Account Set Global Privacy Settings constructor.
  const AccountSetGlobalPrivacySettings({
    required this.settings,
  }) : super._();

  /// Deserialize.
  factory AccountSetGlobalPrivacySettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Settings.
  final GlobalPrivacySettingsBase settings;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Dismiss Suggestion.
///
/// ID: `f50dbaa1`.
class HelpDismissSuggestion extends TlMethod<bool> {
  /// Help Dismiss Suggestion constructor.
  const HelpDismissSuggestion({
    required this.peer,
    required this.suggestion,
  }) : super._();

  /// Deserialize.
  factory HelpDismissSuggestion.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Suggestion.
  final String suggestion;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Get Countries List.
///
/// ID: `735787a8`.
class HelpGetCountriesList extends TlMethod<HelpCountriesListBase> {
  /// Help Get Countries List constructor.
  const HelpGetCountriesList({
    required this.langCode,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory HelpGetCountriesList.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Lang Code.
  final String langCode;

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Replies.
///
/// ID: `22ddd30c`.
class MessagesGetReplies extends TlMethod<MessagesMessagesBase> {
  /// Messages Get Replies constructor.
  const MessagesGetReplies({
    required this.peer,
    required this.msgId,
    required this.offsetId,
    required this.offsetDate,
    required this.addOffset,
    required this.limit,
    required this.maxId,
    required this.minId,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetReplies.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Msg Id.
  final int msgId;

  /// Offset Id.
  final int offsetId;

  /// Offset Date.
  final int offsetDate;

  /// Add Offset.
  final int addOffset;

  /// Limit.
  final int limit;

  /// Max Id.
  final int maxId;

  /// Min Id.
  final int minId;

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Discussion Message.
///
/// ID: `446972fd`.
class MessagesGetDiscussionMessage
    extends TlMethod<MessagesDiscussionMessageBase> {
  /// Messages Get Discussion Message constructor.
  const MessagesGetDiscussionMessage({
    required this.peer,
    required this.msgId,
  }) : super._();

  /// Deserialize.
  factory MessagesGetDiscussionMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Msg Id.
  final int msgId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Read Discussion.
///
/// ID: `f731a9f4`.
class MessagesReadDiscussion extends TlMethod<bool> {
  /// Messages Read Discussion constructor.
  const MessagesReadDiscussion({
    required this.peer,
    required this.msgId,
    required this.readMaxId,
  }) : super._();

  /// Deserialize.
  factory MessagesReadDiscussion.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Msg Id.
  final int msgId;

  /// Read Max Id.
  final int readMaxId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Block From Replies.
///
/// ID: `29a8962c`.
class ContactsBlockFromReplies extends TlMethod<UpdatesBase> {
  /// Contacts Block From Replies constructor.
  const ContactsBlockFromReplies({
    required this.flags,
    required this.msgId,
  }) : super._();

  /// Deserialize.
  factory ContactsBlockFromReplies.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// delete_message: bit
  bool get deleteMessage => _bit(flags, 0);

  /// delete_history: bit
  bool get deleteHistory => _bit(flags, 1);

  /// report_spam: bit
  bool get reportSpam => _bit(flags, 2);

  /// Msg Id.
  final int msgId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stats Get Message Public Forwards.
///
/// ID: `5f150144`.
class StatsGetMessagePublicForwards extends TlMethod<StatsPublicForwardsBase> {
  /// Stats Get Message Public Forwards constructor.
  const StatsGetMessagePublicForwards({
    required this.channel,
    required this.msgId,
    required this.offset,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory StatsGetMessagePublicForwards.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Msg Id.
  final int msgId;

  /// Offset.
  final String offset;

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stats Get Message Stats.
///
/// ID: `b6e0a3f5`.
class StatsGetMessageStats extends TlMethod<StatsMessageStatsBase> {
  /// Stats Get Message Stats constructor.
  const StatsGetMessageStats({
    required this.flags,
    required this.channel,
    required this.msgId,
  }) : super._();

  /// Deserialize.
  factory StatsGetMessageStats.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// dark: bit
  bool get dark => _bit(flags, 0);

  /// Channel.
  final InputChannelBase channel;

  /// Msg Id.
  final int msgId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Unpin All Messages.
///
/// ID: `ee22b9a8`.
class MessagesUnpinAllMessages extends TlMethod<MessagesAffectedHistoryBase> {
  /// Messages Unpin All Messages constructor.
  const MessagesUnpinAllMessages({
    required this.flags,
    required this.peer,
    required this.topMsgId,
  }) : super._();

  /// Deserialize.
  factory MessagesUnpinAllMessages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Peer.
  final InputPeerBase peer;

  /// Top Msg Id.
  final int? topMsgId;

  /// If [topMsgId] exists.
  bool get hasTopMsgIdField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Create Group Call.
///
/// ID: `48cdc6d8`.
class PhoneCreateGroupCall extends TlMethod<UpdatesBase> {
  /// Phone Create Group Call constructor.
  const PhoneCreateGroupCall({
    required this.flags,
    required this.peer,
    required this.randomId,
    required this.title,
    required this.scheduleDate,
  }) : super._();

  /// Deserialize.
  factory PhoneCreateGroupCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// rtmp_stream: bit
  bool get rtmpStream => _bit(flags, 2);

  /// Peer.
  final InputPeerBase peer;

  /// Random Id.
  final int randomId;

  /// Title.
  final String? title;

  /// If [title] exists.
  bool get hasTitleField => _bit(flags, 0);

  /// Schedule Date.
  final int? scheduleDate;

  /// If [scheduleDate] exists.
  bool get hasScheduleDateField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Join Group Call.
///
/// ID: `b132ff7b`.
class PhoneJoinGroupCall extends TlMethod<UpdatesBase> {
  /// Phone Join Group Call constructor.
  const PhoneJoinGroupCall({
    required this.flags,
    required this.call,
    required this.joinAs,
    required this.inviteHash,
    required this.params,
  }) : super._();

  /// Deserialize.
  factory PhoneJoinGroupCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// muted: bit
  bool get muted => _bit(flags, 0);

  /// video_stopped: bit
  bool get videoStopped => _bit(flags, 2);

  /// Call.
  final InputGroupCallBase call;

  /// Join As.
  final InputPeerBase joinAs;

  /// Invite Hash.
  final String? inviteHash;

  /// If [inviteHash] exists.
  bool get hasInviteHashField => _bit(flags, 1);

  /// Params.
  final DataJSONBase params;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Leave Group Call.
///
/// ID: `500377f9`.
class PhoneLeaveGroupCall extends TlMethod<UpdatesBase> {
  /// Phone Leave Group Call constructor.
  const PhoneLeaveGroupCall({
    required this.call,
    required this.source,
  }) : super._();

  /// Deserialize.
  factory PhoneLeaveGroupCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Call.
  final InputGroupCallBase call;

  /// Source.
  final int source;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Invite To Group Call.
///
/// ID: `7b393160`.
class PhoneInviteToGroupCall extends TlMethod<UpdatesBase> {
  /// Phone Invite To Group Call constructor.
  const PhoneInviteToGroupCall({
    required this.call,
    required this.users,
  }) : super._();

  /// Deserialize.
  factory PhoneInviteToGroupCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Call.
  final InputGroupCallBase call;

  /// Users.
  final List<InputUserBase> users;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Discard Group Call.
///
/// ID: `7a777135`.
class PhoneDiscardGroupCall extends TlMethod<UpdatesBase> {
  /// Phone Discard Group Call constructor.
  const PhoneDiscardGroupCall({
    required this.call,
  }) : super._();

  /// Deserialize.
  factory PhoneDiscardGroupCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Call.
  final InputGroupCallBase call;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Toggle Group Call Settings.
///
/// ID: `74bbb43d`.
class PhoneToggleGroupCallSettings extends TlMethod<UpdatesBase> {
  /// Phone Toggle Group Call Settings constructor.
  const PhoneToggleGroupCallSettings({
    required this.flags,
    required this.call,
    required this.joinMuted,
  }) : super._();

  /// Deserialize.
  factory PhoneToggleGroupCallSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// reset_invite_hash: bit
  bool get resetInviteHash => _bit(flags, 1);

  /// Call.
  final InputGroupCallBase call;

  /// Join Muted.
  final bool? joinMuted;

  /// If [joinMuted] exists.
  bool get hasJoinMutedField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Get Group Call.
///
/// ID: `041845db`.
class PhoneGetGroupCall extends TlMethod<PhoneGroupCallBase> {
  /// Phone Get Group Call constructor.
  const PhoneGetGroupCall({
    required this.call,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory PhoneGetGroupCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Call.
  final InputGroupCallBase call;

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Get Group Participants.
///
/// ID: `c558d8ab`.
class PhoneGetGroupParticipants extends TlMethod<PhoneGroupParticipantsBase> {
  /// Phone Get Group Participants constructor.
  const PhoneGetGroupParticipants({
    required this.call,
    required this.ids,
    required this.sources,
    required this.offset,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory PhoneGetGroupParticipants.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Call.
  final InputGroupCallBase call;

  /// Ids.
  final List<InputPeerBase> ids;

  /// Sources.
  final List<int> sources;

  /// Offset.
  final String offset;

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Check Group Call.
///
/// ID: `b59cf977`.
class PhoneCheckGroupCall extends TlMethod<List<int>> {
  /// Phone Check Group Call constructor.
  const PhoneCheckGroupCall({
    required this.call,
    required this.sources,
  }) : super._();

  /// Deserialize.
  factory PhoneCheckGroupCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Call.
  final InputGroupCallBase call;

  /// Sources.
  final List<int> sources;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Delete Chat.
///
/// ID: `5bd0ee50`.
class MessagesDeleteChat extends TlMethod<bool> {
  /// Messages Delete Chat constructor.
  const MessagesDeleteChat({
    required this.chatId,
  }) : super._();

  /// Deserialize.
  factory MessagesDeleteChat.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chat Id.
  final int chatId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Delete Phone Call History.
///
/// ID: `f9cbe409`.
class MessagesDeletePhoneCallHistory
    extends TlMethod<MessagesAffectedFoundMessagesBase> {
  /// Messages Delete Phone Call History constructor.
  const MessagesDeletePhoneCallHistory({
    required this.flags,
  }) : super._();

  /// Deserialize.
  factory MessagesDeletePhoneCallHistory.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// revoke: bit
  bool get revoke => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Check History Import.
///
/// ID: `43fe19f3`.
class MessagesCheckHistoryImport
    extends TlMethod<MessagesHistoryImportParsedBase> {
  /// Messages Check History Import constructor.
  const MessagesCheckHistoryImport({
    required this.importHead,
  }) : super._();

  /// Deserialize.
  factory MessagesCheckHistoryImport.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Import Head.
  final String importHead;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Init History Import.
///
/// ID: `34090c3b`.
class MessagesInitHistoryImport extends TlMethod<MessagesHistoryImportBase> {
  /// Messages Init History Import constructor.
  const MessagesInitHistoryImport({
    required this.peer,
    required this.file,
    required this.mediaCount,
  }) : super._();

  /// Deserialize.
  factory MessagesInitHistoryImport.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// File.
  final InputFileBase file;

  /// Media Count.
  final int mediaCount;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Upload Imported Media.
///
/// ID: `2a862092`.
class MessagesUploadImportedMedia extends TlMethod<MessageMediaBase> {
  /// Messages Upload Imported Media constructor.
  const MessagesUploadImportedMedia({
    required this.peer,
    required this.importId,
    required this.fileName,
    required this.media,
  }) : super._();

  /// Deserialize.
  factory MessagesUploadImportedMedia.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Import Id.
  final int importId;

  /// File Name.
  final String fileName;

  /// Media.
  final InputMediaBase media;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Start History Import.
///
/// ID: `b43df344`.
class MessagesStartHistoryImport extends TlMethod<bool> {
  /// Messages Start History Import constructor.
  const MessagesStartHistoryImport({
    required this.peer,
    required this.importId,
  }) : super._();

  /// Deserialize.
  factory MessagesStartHistoryImport.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Import Id.
  final int importId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Exported Chat Invites.
///
/// ID: `a2b5a3f6`.
class MessagesGetExportedChatInvites
    extends TlMethod<MessagesExportedChatInvitesBase> {
  /// Messages Get Exported Chat Invites constructor.
  const MessagesGetExportedChatInvites({
    required this.flags,
    required this.peer,
    required this.adminId,
    required this.offsetDate,
    required this.offsetLink,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory MessagesGetExportedChatInvites.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// revoked: bit
  bool get revoked => _bit(flags, 3);

  /// Peer.
  final InputPeerBase peer;

  /// Admin Id.
  final InputUserBase adminId;

  /// Offset Date.
  final int? offsetDate;

  /// If [offsetDate] exists.
  bool get hasOffsetDateField => _bit(flags, 2);

  /// Offset Link.
  final String? offsetLink;

  /// If [offsetLink] exists.
  bool get hasOffsetLinkField => _bit(flags, 2);

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Exported Chat Invite.
///
/// ID: `73746f5c`.
class MessagesGetExportedChatInvite
    extends TlMethod<MessagesExportedChatInviteBase> {
  /// Messages Get Exported Chat Invite constructor.
  const MessagesGetExportedChatInvite({
    required this.peer,
    required this.link,
  }) : super._();

  /// Deserialize.
  factory MessagesGetExportedChatInvite.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Link.
  final String link;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Edit Exported Chat Invite.
///
/// ID: `bdca2f75`.
class MessagesEditExportedChatInvite
    extends TlMethod<MessagesExportedChatInviteBase> {
  /// Messages Edit Exported Chat Invite constructor.
  const MessagesEditExportedChatInvite({
    required this.flags,
    required this.peer,
    required this.link,
    required this.expireDate,
    required this.usageLimit,
    required this.requestNeeded,
    required this.title,
  }) : super._();

  /// Deserialize.
  factory MessagesEditExportedChatInvite.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// revoked: bit
  bool get revoked => _bit(flags, 2);

  /// Peer.
  final InputPeerBase peer;

  /// Link.
  final String link;

  /// Expire Date.
  final int? expireDate;

  /// If [expireDate] exists.
  bool get hasExpireDateField => _bit(flags, 0);

  /// Usage Limit.
  final int? usageLimit;

  /// If [usageLimit] exists.
  bool get hasUsageLimitField => _bit(flags, 1);

  /// Request Needed.
  final bool? requestNeeded;

  /// If [requestNeeded] exists.
  bool get hasRequestNeededField => _bit(flags, 3);

  /// Title.
  final String? title;

  /// If [title] exists.
  bool get hasTitleField => _bit(flags, 4);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Delete Revoked Exported Chat Invites.
///
/// ID: `56987bd5`.
class MessagesDeleteRevokedExportedChatInvites extends TlMethod<bool> {
  /// Messages Delete Revoked Exported Chat Invites constructor.
  const MessagesDeleteRevokedExportedChatInvites({
    required this.peer,
    required this.adminId,
  }) : super._();

  /// Deserialize.
  factory MessagesDeleteRevokedExportedChatInvites.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Admin Id.
  final InputUserBase adminId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Delete Exported Chat Invite.
///
/// ID: `d464a42b`.
class MessagesDeleteExportedChatInvite extends TlMethod<bool> {
  /// Messages Delete Exported Chat Invite constructor.
  const MessagesDeleteExportedChatInvite({
    required this.peer,
    required this.link,
  }) : super._();

  /// Deserialize.
  factory MessagesDeleteExportedChatInvite.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Link.
  final String link;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Admins With Invites.
///
/// ID: `3920e6ef`.
class MessagesGetAdminsWithInvites
    extends TlMethod<MessagesChatAdminsWithInvitesBase> {
  /// Messages Get Admins With Invites constructor.
  const MessagesGetAdminsWithInvites({
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory MessagesGetAdminsWithInvites.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Chat Invite Importers.
///
/// ID: `df04dd4e`.
class MessagesGetChatInviteImporters
    extends TlMethod<MessagesChatInviteImportersBase> {
  /// Messages Get Chat Invite Importers constructor.
  const MessagesGetChatInviteImporters({
    required this.flags,
    required this.peer,
    required this.link,
    required this.q,
    required this.offsetDate,
    required this.offsetUser,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory MessagesGetChatInviteImporters.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// requested: bit
  bool get requested => _bit(flags, 0);

  /// Peer.
  final InputPeerBase peer;

  /// Link.
  final String? link;

  /// If [link] exists.
  bool get hasLinkField => _bit(flags, 1);

  /// Q.
  final String? q;

  /// If [q] exists.
  bool get hasQField => _bit(flags, 2);

  /// Offset Date.
  final int offsetDate;

  /// Offset User.
  final InputUserBase offsetUser;

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Set History T T L.
///
/// ID: `b80e5fe4`.
class MessagesSetHistoryTTL extends TlMethod<UpdatesBase> {
  /// Messages Set History T T L constructor.
  const MessagesSetHistoryTTL({
    required this.peer,
    required this.period,
  }) : super._();

  /// Deserialize.
  factory MessagesSetHistoryTTL.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Period.
  final int period;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Report Profile Photo.
///
/// ID: `fa8cc6f5`.
class AccountReportProfilePhoto extends TlMethod<bool> {
  /// Account Report Profile Photo constructor.
  const AccountReportProfilePhoto({
    required this.peer,
    required this.photoId,
    required this.reason,
    required this.message,
  }) : super._();

  /// Deserialize.
  factory AccountReportProfilePhoto.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Photo Id.
  final InputPhotoBase photoId;

  /// Reason.
  final ReportReasonBase reason;

  /// Message.
  final String message;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Convert To Gigagroup.
///
/// ID: `0b290c69`.
class ChannelsConvertToGigagroup extends TlMethod<UpdatesBase> {
  /// Channels Convert To Gigagroup constructor.
  const ChannelsConvertToGigagroup({
    required this.channel,
  }) : super._();

  /// Deserialize.
  factory ChannelsConvertToGigagroup.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Check History Import Peer.
///
/// ID: `5dc60f03`.
class MessagesCheckHistoryImportPeer
    extends TlMethod<MessagesCheckedHistoryImportPeerBase> {
  /// Messages Check History Import Peer constructor.
  const MessagesCheckHistoryImportPeer({
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory MessagesCheckHistoryImportPeer.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Toggle Group Call Record.
///
/// ID: `f128c708`.
class PhoneToggleGroupCallRecord extends TlMethod<UpdatesBase> {
  /// Phone Toggle Group Call Record constructor.
  const PhoneToggleGroupCallRecord({
    required this.flags,
    required this.call,
    required this.title,
    required this.videoPortrait,
  }) : super._();

  /// Deserialize.
  factory PhoneToggleGroupCallRecord.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// start: bit
  bool get start => _bit(flags, 0);

  /// video: bit
  bool get video => _bit(flags, 2);

  /// Call.
  final InputGroupCallBase call;

  /// Title.
  final String? title;

  /// If [title] exists.
  bool get hasTitleField => _bit(flags, 1);

  /// Video Portrait.
  final bool? videoPortrait;

  /// If [videoPortrait] exists.
  bool get hasVideoPortraitField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Edit Group Call Participant.
///
/// ID: `a5273abf`.
class PhoneEditGroupCallParticipant extends TlMethod<UpdatesBase> {
  /// Phone Edit Group Call Participant constructor.
  const PhoneEditGroupCallParticipant({
    required this.flags,
    required this.call,
    required this.participant,
    required this.muted,
    required this.volume,
    required this.raiseHand,
    required this.videoStopped,
    required this.videoPaused,
    required this.presentationPaused,
  }) : super._();

  /// Deserialize.
  factory PhoneEditGroupCallParticipant.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Call.
  final InputGroupCallBase call;

  /// Participant.
  final InputPeerBase participant;

  /// Muted.
  final bool? muted;

  /// If [muted] exists.
  bool get hasMutedField => _bit(flags, 0);

  /// Volume.
  final int? volume;

  /// If [volume] exists.
  bool get hasVolumeField => _bit(flags, 1);

  /// Raise Hand.
  final bool? raiseHand;

  /// If [raiseHand] exists.
  bool get hasRaiseHandField => _bit(flags, 2);

  /// Video Stopped.
  final bool? videoStopped;

  /// If [videoStopped] exists.
  bool get hasVideoStoppedField => _bit(flags, 3);

  /// Video Paused.
  final bool? videoPaused;

  /// If [videoPaused] exists.
  bool get hasVideoPausedField => _bit(flags, 4);

  /// Presentation Paused.
  final bool? presentationPaused;

  /// If [presentationPaused] exists.
  bool get hasPresentationPausedField => _bit(flags, 5);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Edit Group Call Title.
///
/// ID: `1ca6ac0a`.
class PhoneEditGroupCallTitle extends TlMethod<UpdatesBase> {
  /// Phone Edit Group Call Title constructor.
  const PhoneEditGroupCallTitle({
    required this.call,
    required this.title,
  }) : super._();

  /// Deserialize.
  factory PhoneEditGroupCallTitle.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Call.
  final InputGroupCallBase call;

  /// Title.
  final String title;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Get Group Call Join As.
///
/// ID: `ef7c213a`.
class PhoneGetGroupCallJoinAs extends TlMethod<PhoneJoinAsPeersBase> {
  /// Phone Get Group Call Join As constructor.
  const PhoneGetGroupCallJoinAs({
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory PhoneGetGroupCallJoinAs.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Export Group Call Invite.
///
/// ID: `e6aa647f`.
class PhoneExportGroupCallInvite
    extends TlMethod<PhoneExportedGroupCallInviteBase> {
  /// Phone Export Group Call Invite constructor.
  const PhoneExportGroupCallInvite({
    required this.flags,
    required this.call,
  }) : super._();

  /// Deserialize.
  factory PhoneExportGroupCallInvite.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// can_self_unmute: bit
  bool get canSelfUnmute => _bit(flags, 0);

  /// Call.
  final InputGroupCallBase call;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Toggle Group Call Start Subscription.
///
/// ID: `219c34e6`.
class PhoneToggleGroupCallStartSubscription extends TlMethod<UpdatesBase> {
  /// Phone Toggle Group Call Start Subscription constructor.
  const PhoneToggleGroupCallStartSubscription({
    required this.call,
    required this.subscribed,
  }) : super._();

  /// Deserialize.
  factory PhoneToggleGroupCallStartSubscription.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Call.
  final InputGroupCallBase call;

  /// Subscribed.
  final bool subscribed;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Start Scheduled Group Call.
///
/// ID: `5680e342`.
class PhoneStartScheduledGroupCall extends TlMethod<UpdatesBase> {
  /// Phone Start Scheduled Group Call constructor.
  const PhoneStartScheduledGroupCall({
    required this.call,
  }) : super._();

  /// Deserialize.
  factory PhoneStartScheduledGroupCall.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Call.
  final InputGroupCallBase call;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Save Default Group Call Join As.
///
/// ID: `575e1f8c`.
class PhoneSaveDefaultGroupCallJoinAs extends TlMethod<bool> {
  /// Phone Save Default Group Call Join As constructor.
  const PhoneSaveDefaultGroupCallJoinAs({
    required this.peer,
    required this.joinAs,
  }) : super._();

  /// Deserialize.
  factory PhoneSaveDefaultGroupCallJoinAs.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Join As.
  final InputPeerBase joinAs;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Join Group Call Presentation.
///
/// ID: `cbea6bc4`.
class PhoneJoinGroupCallPresentation extends TlMethod<UpdatesBase> {
  /// Phone Join Group Call Presentation constructor.
  const PhoneJoinGroupCallPresentation({
    required this.call,
    required this.params,
  }) : super._();

  /// Deserialize.
  factory PhoneJoinGroupCallPresentation.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Call.
  final InputGroupCallBase call;

  /// Params.
  final DataJSONBase params;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Leave Group Call Presentation.
///
/// ID: `1c50d144`.
class PhoneLeaveGroupCallPresentation extends TlMethod<UpdatesBase> {
  /// Phone Leave Group Call Presentation constructor.
  const PhoneLeaveGroupCallPresentation({
    required this.call,
  }) : super._();

  /// Deserialize.
  factory PhoneLeaveGroupCallPresentation.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Call.
  final InputGroupCallBase call;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stickers Check Short Name.
///
/// ID: `284b3639`.
class StickersCheckShortName extends TlMethod<bool> {
  /// Stickers Check Short Name constructor.
  const StickersCheckShortName({
    required this.shortName,
  }) : super._();

  /// Deserialize.
  factory StickersCheckShortName.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Short Name.
  final String shortName;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stickers Suggest Short Name.
///
/// ID: `4dafc503`.
class StickersSuggestShortName
    extends TlMethod<StickersSuggestedShortNameBase> {
  /// Stickers Suggest Short Name constructor.
  const StickersSuggestShortName({
    required this.title,
  }) : super._();

  /// Deserialize.
  factory StickersSuggestShortName.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Title.
  final String title;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bots Reset Bot Commands.
///
/// ID: `3d8de0f9`.
class BotsResetBotCommands extends TlMethod<bool> {
  /// Bots Reset Bot Commands constructor.
  const BotsResetBotCommands({
    required this.scope,
    required this.langCode,
  }) : super._();

  /// Deserialize.
  factory BotsResetBotCommands.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Scope.
  final BotCommandScopeBase scope;

  /// Lang Code.
  final String langCode;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bots Get Bot Commands.
///
/// ID: `e34c0dd6`.
class BotsGetBotCommands extends TlMethod<List<BotCommandBase>> {
  /// Bots Get Bot Commands constructor.
  const BotsGetBotCommands({
    required this.scope,
    required this.langCode,
  }) : super._();

  /// Deserialize.
  factory BotsGetBotCommands.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Scope.
  final BotCommandScopeBase scope;

  /// Lang Code.
  final String langCode;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Reset Password.
///
/// ID: `9308ce1b`.
class AccountResetPassword extends TlMethod<AccountResetPasswordResultBase> {
  /// Account Reset Password constructor.
  const AccountResetPassword() : super._();

  /// Deserialize.
  factory AccountResetPassword.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Decline Password Reset.
///
/// ID: `4c9409f6`.
class AccountDeclinePasswordReset extends TlMethod<bool> {
  /// Account Decline Password Reset constructor.
  const AccountDeclinePasswordReset() : super._();

  /// Deserialize.
  factory AccountDeclinePasswordReset.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Check Recovery Password.
///
/// ID: `0d36bf79`.
class AuthCheckRecoveryPassword extends TlMethod<bool> {
  /// Auth Check Recovery Password constructor.
  const AuthCheckRecoveryPassword({
    required this.code,
  }) : super._();

  /// Deserialize.
  factory AuthCheckRecoveryPassword.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Code.
  final String code;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Chat Themes.
///
/// ID: `d638de89`.
class AccountGetChatThemes extends TlMethod<AccountThemesBase> {
  /// Account Get Chat Themes constructor.
  const AccountGetChatThemes({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory AccountGetChatThemes.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Set Chat Theme.
///
/// ID: `e63be13f`.
class MessagesSetChatTheme extends TlMethod<UpdatesBase> {
  /// Messages Set Chat Theme constructor.
  const MessagesSetChatTheme({
    required this.peer,
    required this.emoticon,
  }) : super._();

  /// Deserialize.
  factory MessagesSetChatTheme.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Emoticon.
  final String emoticon;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels View Sponsored Message.
///
/// ID: `beaedb94`.
class ChannelsViewSponsoredMessage extends TlMethod<bool> {
  /// Channels View Sponsored Message constructor.
  const ChannelsViewSponsoredMessage({
    required this.channel,
    required this.randomId,
  }) : super._();

  /// Deserialize.
  factory ChannelsViewSponsoredMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Random Id.
  final Uint8List randomId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Get Sponsored Messages.
///
/// ID: `ec210fbf`.
class ChannelsGetSponsoredMessages
    extends TlMethod<MessagesSponsoredMessagesBase> {
  /// Channels Get Sponsored Messages constructor.
  const ChannelsGetSponsoredMessages({
    required this.channel,
  }) : super._();

  /// Deserialize.
  factory ChannelsGetSponsoredMessages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Message Read Participants.
///
/// ID: `31c1c44f`.
class MessagesGetMessageReadParticipants
    extends TlMethod<List<ReadParticipantDateBase>> {
  /// Messages Get Message Read Participants constructor.
  const MessagesGetMessageReadParticipants({
    required this.peer,
    required this.msgId,
  }) : super._();

  /// Deserialize.
  factory MessagesGetMessageReadParticipants.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Msg Id.
  final int msgId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Search Results Calendar.
///
/// ID: `6aa3f6bd`.
class MessagesGetSearchResultsCalendar
    extends TlMethod<MessagesSearchResultsCalendarBase> {
  /// Messages Get Search Results Calendar constructor.
  const MessagesGetSearchResultsCalendar({
    required this.flags,
    required this.peer,
    required this.savedPeerId,
    required this.filter,
    required this.offsetId,
    required this.offsetDate,
  }) : super._();

  /// Deserialize.
  factory MessagesGetSearchResultsCalendar.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Peer.
  final InputPeerBase peer;

  /// Saved Peer Id.
  final InputPeerBase? savedPeerId;

  /// If [savedPeerId] exists.
  bool get hasSavedPeerIdField => _bit(flags, 2);

  /// Filter.
  final MessagesFilterBase filter;

  /// Offset Id.
  final int offsetId;

  /// Offset Date.
  final int offsetDate;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Search Results Positions.
///
/// ID: `9c7f2f10`.
class MessagesGetSearchResultsPositions
    extends TlMethod<MessagesSearchResultsPositionsBase> {
  /// Messages Get Search Results Positions constructor.
  const MessagesGetSearchResultsPositions({
    required this.flags,
    required this.peer,
    required this.savedPeerId,
    required this.filter,
    required this.offsetId,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory MessagesGetSearchResultsPositions.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Peer.
  final InputPeerBase peer;

  /// Saved Peer Id.
  final InputPeerBase? savedPeerId;

  /// If [savedPeerId] exists.
  bool get hasSavedPeerIdField => _bit(flags, 2);

  /// Filter.
  final MessagesFilterBase filter;

  /// Offset Id.
  final int offsetId;

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Hide Chat Join Request.
///
/// ID: `7fe7e815`.
class MessagesHideChatJoinRequest extends TlMethod<UpdatesBase> {
  /// Messages Hide Chat Join Request constructor.
  const MessagesHideChatJoinRequest({
    required this.flags,
    required this.peer,
    required this.userId,
  }) : super._();

  /// Deserialize.
  factory MessagesHideChatJoinRequest.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// approved: bit
  bool get approved => _bit(flags, 0);

  /// Peer.
  final InputPeerBase peer;

  /// User Id.
  final InputUserBase userId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Hide All Chat Join Requests.
///
/// ID: `e085f4ea`.
class MessagesHideAllChatJoinRequests extends TlMethod<UpdatesBase> {
  /// Messages Hide All Chat Join Requests constructor.
  const MessagesHideAllChatJoinRequests({
    required this.flags,
    required this.peer,
    required this.link,
  }) : super._();

  /// Deserialize.
  factory MessagesHideAllChatJoinRequests.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// approved: bit
  bool get approved => _bit(flags, 0);

  /// Peer.
  final InputPeerBase peer;

  /// Link.
  final String? link;

  /// If [link] exists.
  bool get hasLinkField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Toggle No Forwards.
///
/// ID: `b11eafa2`.
class MessagesToggleNoForwards extends TlMethod<UpdatesBase> {
  /// Messages Toggle No Forwards constructor.
  const MessagesToggleNoForwards({
    required this.peer,
    required this.enabled,
  }) : super._();

  /// Deserialize.
  factory MessagesToggleNoForwards.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Enabled.
  final bool enabled;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Save Default Send As.
///
/// ID: `ccfddf96`.
class MessagesSaveDefaultSendAs extends TlMethod<bool> {
  /// Messages Save Default Send As constructor.
  const MessagesSaveDefaultSendAs({
    required this.peer,
    required this.sendAs,
  }) : super._();

  /// Deserialize.
  factory MessagesSaveDefaultSendAs.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Send As.
  final InputPeerBase sendAs;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Get Send As.
///
/// ID: `0dc770ee`.
class ChannelsGetSendAs extends TlMethod<ChannelsSendAsPeersBase> {
  /// Channels Get Send As constructor.
  const ChannelsGetSendAs({
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory ChannelsGetSendAs.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Set Authorization T T L.
///
/// ID: `bf899aa0`.
class AccountSetAuthorizationTTL extends TlMethod<bool> {
  /// Account Set Authorization T T L constructor.
  const AccountSetAuthorizationTTL({
    required this.authorizationTtlDays,
  }) : super._();

  /// Deserialize.
  factory AccountSetAuthorizationTTL.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Authorization Ttl Days.
  final int authorizationTtlDays;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Change Authorization Settings.
///
/// ID: `40f48462`.
class AccountChangeAuthorizationSettings extends TlMethod<bool> {
  /// Account Change Authorization Settings constructor.
  const AccountChangeAuthorizationSettings({
    required this.flags,
    required this.hash,
    required this.encryptedRequestsDisabled,
    required this.callRequestsDisabled,
  }) : super._();

  /// Deserialize.
  factory AccountChangeAuthorizationSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// confirmed: bit
  bool get confirmed => _bit(flags, 3);

  /// Hash.
  final int hash;

  /// Encrypted Requests Disabled.
  final bool? encryptedRequestsDisabled;

  /// If [encryptedRequestsDisabled] exists.
  bool get hasEncryptedRequestsDisabledField => _bit(flags, 0);

  /// Call Requests Disabled.
  final bool? callRequestsDisabled;

  /// If [callRequestsDisabled] exists.
  bool get hasCallRequestsDisabledField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Delete Participant History.
///
/// ID: `367544db`.
class ChannelsDeleteParticipantHistory
    extends TlMethod<MessagesAffectedHistoryBase> {
  /// Channels Delete Participant History constructor.
  const ChannelsDeleteParticipantHistory({
    required this.channel,
    required this.participant,
  }) : super._();

  /// Deserialize.
  factory ChannelsDeleteParticipantHistory.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Participant.
  final InputPeerBase participant;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Send Reaction.
///
/// ID: `d30d78d4`.
class MessagesSendReaction extends TlMethod<UpdatesBase> {
  /// Messages Send Reaction constructor.
  const MessagesSendReaction({
    required this.flags,
    required this.peer,
    required this.msgId,
    required this.reaction,
  }) : super._();

  /// Deserialize.
  factory MessagesSendReaction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// big: bit
  bool get big => _bit(flags, 1);

  /// add_to_recent: bit
  bool get addToRecent => _bit(flags, 2);

  /// Peer.
  final InputPeerBase peer;

  /// Msg Id.
  final int msgId;

  /// Reaction.
  final List<ReactionBase>? reaction;

  /// If [reaction] exists.
  bool get hasReactionField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Messages Reactions.
///
/// ID: `8bba90e6`.
class MessagesGetMessagesReactions extends TlMethod<UpdatesBase> {
  /// Messages Get Messages Reactions constructor.
  const MessagesGetMessagesReactions({
    required this.peer,
    required this.id,
  }) : super._();

  /// Deserialize.
  factory MessagesGetMessagesReactions.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final List<int> id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Message Reactions List.
///
/// ID: `461b3f48`.
class MessagesGetMessageReactionsList
    extends TlMethod<MessagesMessageReactionsListBase> {
  /// Messages Get Message Reactions List constructor.
  const MessagesGetMessageReactionsList({
    required this.flags,
    required this.peer,
    required this.id,
    required this.reaction,
    required this.offset,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory MessagesGetMessageReactionsList.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final int id;

  /// Reaction.
  final ReactionBase? reaction;

  /// If [reaction] exists.
  bool get hasReactionField => _bit(flags, 0);

  /// Offset.
  final String? offset;

  /// If [offset] exists.
  bool get hasOffsetField => _bit(flags, 1);

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Set Chat Available Reactions.
///
/// ID: `feb16771`.
class MessagesSetChatAvailableReactions extends TlMethod<UpdatesBase> {
  /// Messages Set Chat Available Reactions constructor.
  const MessagesSetChatAvailableReactions({
    required this.peer,
    required this.availableReactions,
  }) : super._();

  /// Deserialize.
  factory MessagesSetChatAvailableReactions.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Available Reactions.
  final ChatReactionsBase availableReactions;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Available Reactions.
///
/// ID: `18dea0ac`.
class MessagesGetAvailableReactions
    extends TlMethod<MessagesAvailableReactionsBase> {
  /// Messages Get Available Reactions constructor.
  const MessagesGetAvailableReactions({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetAvailableReactions.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Set Default Reaction.
///
/// ID: `4f47a016`.
class MessagesSetDefaultReaction extends TlMethod<bool> {
  /// Messages Set Default Reaction constructor.
  const MessagesSetDefaultReaction({
    required this.reaction,
  }) : super._();

  /// Deserialize.
  factory MessagesSetDefaultReaction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Reaction.
  final ReactionBase reaction;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Translate Text.
///
/// ID: `63183030`.
class MessagesTranslateText extends TlMethod<MessagesTranslatedTextBase> {
  /// Messages Translate Text constructor.
  const MessagesTranslateText({
    required this.flags,
    required this.peer,
    required this.id,
    required this.text,
    required this.toLang,
  }) : super._();

  /// Deserialize.
  factory MessagesTranslateText.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Peer.
  final InputPeerBase? peer;

  /// If [peer] exists.
  bool get hasPeerField => _bit(flags, 0);

  /// Id.
  final List<int>? id;

  /// If [id] exists.
  bool get hasIdField => _bit(flags, 0);

  /// Text.
  final List<TextWithEntitiesBase>? text;

  /// If [text] exists.
  bool get hasTextField => _bit(flags, 1);

  /// To Lang.
  final String toLang;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Unread Reactions.
///
/// ID: `3223495b`.
class MessagesGetUnreadReactions extends TlMethod<MessagesMessagesBase> {
  /// Messages Get Unread Reactions constructor.
  const MessagesGetUnreadReactions({
    required this.flags,
    required this.peer,
    required this.topMsgId,
    required this.offsetId,
    required this.addOffset,
    required this.limit,
    required this.maxId,
    required this.minId,
  }) : super._();

  /// Deserialize.
  factory MessagesGetUnreadReactions.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Peer.
  final InputPeerBase peer;

  /// Top Msg Id.
  final int? topMsgId;

  /// If [topMsgId] exists.
  bool get hasTopMsgIdField => _bit(flags, 0);

  /// Offset Id.
  final int offsetId;

  /// Add Offset.
  final int addOffset;

  /// Limit.
  final int limit;

  /// Max Id.
  final int maxId;

  /// Min Id.
  final int minId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Read Reactions.
///
/// ID: `54aa7f8e`.
class MessagesReadReactions extends TlMethod<MessagesAffectedHistoryBase> {
  /// Messages Read Reactions constructor.
  const MessagesReadReactions({
    required this.flags,
    required this.peer,
    required this.topMsgId,
  }) : super._();

  /// Deserialize.
  factory MessagesReadReactions.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Peer.
  final InputPeerBase peer;

  /// Top Msg Id.
  final int? topMsgId;

  /// If [topMsgId] exists.
  bool get hasTopMsgIdField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Resolve Phone.
///
/// ID: `8af94344`.
class ContactsResolvePhone extends TlMethod<ContactsResolvedPeerBase> {
  /// Contacts Resolve Phone constructor.
  const ContactsResolvePhone({
    required this.phone,
  }) : super._();

  /// Deserialize.
  factory ContactsResolvePhone.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Phone.
  final String phone;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Get Group Call Stream Channels.
///
/// ID: `1ab21940`.
class PhoneGetGroupCallStreamChannels
    extends TlMethod<PhoneGroupCallStreamChannelsBase> {
  /// Phone Get Group Call Stream Channels constructor.
  const PhoneGetGroupCallStreamChannels({
    required this.call,
  }) : super._();

  /// Deserialize.
  factory PhoneGetGroupCallStreamChannels.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Call.
  final InputGroupCallBase call;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Get Group Call Stream Rtmp Url.
///
/// ID: `deb3abbf`.
class PhoneGetGroupCallStreamRtmpUrl
    extends TlMethod<PhoneGroupCallStreamRtmpUrlBase> {
  /// Phone Get Group Call Stream Rtmp Url constructor.
  const PhoneGetGroupCallStreamRtmpUrl({
    required this.peer,
    required this.revoke,
  }) : super._();

  /// Deserialize.
  factory PhoneGetGroupCallStreamRtmpUrl.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Revoke.
  final bool revoke;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Search Sent Media.
///
/// ID: `107e31a0`.
class MessagesSearchSentMedia extends TlMethod<MessagesMessagesBase> {
  /// Messages Search Sent Media constructor.
  const MessagesSearchSentMedia({
    required this.q,
    required this.filter,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory MessagesSearchSentMedia.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Q.
  final String q;

  /// Filter.
  final MessagesFilterBase filter;

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Attach Menu Bots.
///
/// ID: `16fcc2cb`.
class MessagesGetAttachMenuBots extends TlMethod<AttachMenuBotsBase> {
  /// Messages Get Attach Menu Bots constructor.
  const MessagesGetAttachMenuBots({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetAttachMenuBots.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Attach Menu Bot.
///
/// ID: `77216192`.
class MessagesGetAttachMenuBot extends TlMethod<AttachMenuBotsBotBase> {
  /// Messages Get Attach Menu Bot constructor.
  const MessagesGetAttachMenuBot({
    required this.bot,
  }) : super._();

  /// Deserialize.
  factory MessagesGetAttachMenuBot.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Bot.
  final InputUserBase bot;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Toggle Bot In Attach Menu.
///
/// ID: `69f59d69`.
class MessagesToggleBotInAttachMenu extends TlMethod<bool> {
  /// Messages Toggle Bot In Attach Menu constructor.
  const MessagesToggleBotInAttachMenu({
    required this.flags,
    required this.bot,
    required this.enabled,
  }) : super._();

  /// Deserialize.
  factory MessagesToggleBotInAttachMenu.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// write_allowed: bit
  bool get writeAllowed => _bit(flags, 0);

  /// Bot.
  final InputUserBase bot;

  /// Enabled.
  final bool enabled;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Request Web View.
///
/// ID: `269dc2c1`.
class MessagesRequestWebView extends TlMethod<WebViewResultBase> {
  /// Messages Request Web View constructor.
  const MessagesRequestWebView({
    required this.flags,
    required this.peer,
    required this.bot,
    required this.url,
    required this.startParam,
    required this.themeParams,
    required this.platform,
    required this.replyTo,
    required this.sendAs,
  }) : super._();

  /// Deserialize.
  factory MessagesRequestWebView.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// from_bot_menu: bit
  bool get fromBotMenu => _bit(flags, 4);

  /// silent: bit
  bool get silent => _bit(flags, 5);

  /// Peer.
  final InputPeerBase peer;

  /// Bot.
  final InputUserBase bot;

  /// Url.
  final String? url;

  /// If [url] exists.
  bool get hasUrlField => _bit(flags, 1);

  /// Start Param.
  final String? startParam;

  /// If [startParam] exists.
  bool get hasStartParamField => _bit(flags, 3);

  /// Theme Params.
  final DataJSONBase? themeParams;

  /// If [themeParams] exists.
  bool get hasThemeParamsField => _bit(flags, 2);

  /// Platform.
  final String platform;

  /// Reply To.
  final InputReplyToBase? replyTo;

  /// If [replyTo] exists.
  bool get hasReplyToField => _bit(flags, 0);

  /// Send As.
  final InputPeerBase? sendAs;

  /// If [sendAs] exists.
  bool get hasSendAsField => _bit(flags, 13);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Prolong Web View.
///
/// ID: `b0d81a83`.
class MessagesProlongWebView extends TlMethod<bool> {
  /// Messages Prolong Web View constructor.
  const MessagesProlongWebView({
    required this.flags,
    required this.peer,
    required this.bot,
    required this.queryId,
    required this.replyTo,
    required this.sendAs,
  }) : super._();

  /// Deserialize.
  factory MessagesProlongWebView.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// silent: bit
  bool get silent => _bit(flags, 5);

  /// Peer.
  final InputPeerBase peer;

  /// Bot.
  final InputUserBase bot;

  /// Query Id.
  final int queryId;

  /// Reply To.
  final InputReplyToBase? replyTo;

  /// If [replyTo] exists.
  bool get hasReplyToField => _bit(flags, 0);

  /// Send As.
  final InputPeerBase? sendAs;

  /// If [sendAs] exists.
  bool get hasSendAsField => _bit(flags, 13);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Request Simple Web View.
///
/// ID: `1a46500a`.
class MessagesRequestSimpleWebView extends TlMethod<SimpleWebViewResultBase> {
  /// Messages Request Simple Web View constructor.
  const MessagesRequestSimpleWebView({
    required this.flags,
    required this.bot,
    required this.url,
    required this.startParam,
    required this.themeParams,
    required this.platform,
  }) : super._();

  /// Deserialize.
  factory MessagesRequestSimpleWebView.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// from_switch_webview: bit
  bool get fromSwitchWebview => _bit(flags, 1);

  /// from_side_menu: bit
  bool get fromSideMenu => _bit(flags, 2);

  /// Bot.
  final InputUserBase bot;

  /// Url.
  final String? url;

  /// If [url] exists.
  bool get hasUrlField => _bit(flags, 3);

  /// Start Param.
  final String? startParam;

  /// If [startParam] exists.
  bool get hasStartParamField => _bit(flags, 4);

  /// Theme Params.
  final DataJSONBase? themeParams;

  /// If [themeParams] exists.
  bool get hasThemeParamsField => _bit(flags, 0);

  /// Platform.
  final String platform;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Send Web View Result Message.
///
/// ID: `0a4314f5`.
class MessagesSendWebViewResultMessage
    extends TlMethod<WebViewMessageSentBase> {
  /// Messages Send Web View Result Message constructor.
  const MessagesSendWebViewResultMessage({
    required this.botQueryId,
    required this.result,
  }) : super._();

  /// Deserialize.
  factory MessagesSendWebViewResultMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Bot Query Id.
  final String botQueryId;

  /// Result.
  final InputBotInlineResultBase result;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Send Web View Data.
///
/// ID: `dc0242c8`.
class MessagesSendWebViewData extends TlMethod<UpdatesBase> {
  /// Messages Send Web View Data constructor.
  const MessagesSendWebViewData({
    required this.bot,
    required this.randomId,
    required this.buttonText,
    required this.data,
  }) : super._();

  /// Deserialize.
  factory MessagesSendWebViewData.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Bot.
  final InputUserBase bot;

  /// Random Id.
  final int randomId;

  /// Button Text.
  final String buttonText;

  /// Data.
  final String data;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bots Set Bot Menu Button.
///
/// ID: `4504d54f`.
class BotsSetBotMenuButton extends TlMethod<bool> {
  /// Bots Set Bot Menu Button constructor.
  const BotsSetBotMenuButton({
    required this.userId,
    required this.button,
  }) : super._();

  /// Deserialize.
  factory BotsSetBotMenuButton.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final InputUserBase userId;

  /// Button.
  final BotMenuButtonBase button;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bots Get Bot Menu Button.
///
/// ID: `9c60eb28`.
class BotsGetBotMenuButton extends TlMethod<BotMenuButtonBase> {
  /// Bots Get Bot Menu Button constructor.
  const BotsGetBotMenuButton({
    required this.userId,
  }) : super._();

  /// Deserialize.
  factory BotsGetBotMenuButton.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// User Id.
  final InputUserBase userId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Saved Ringtones.
///
/// ID: `e1902288`.
class AccountGetSavedRingtones extends TlMethod<AccountSavedRingtonesBase> {
  /// Account Get Saved Ringtones constructor.
  const AccountGetSavedRingtones({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory AccountGetSavedRingtones.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Save Ringtone.
///
/// ID: `3dea5b03`.
class AccountSaveRingtone extends TlMethod<AccountSavedRingtoneBase> {
  /// Account Save Ringtone constructor.
  const AccountSaveRingtone({
    required this.id,
    required this.unsave,
  }) : super._();

  /// Deserialize.
  factory AccountSaveRingtone.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final InputDocumentBase id;

  /// Unsave.
  final bool unsave;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Upload Ringtone.
///
/// ID: `831a83a2`.
class AccountUploadRingtone extends TlMethod<DocumentBase> {
  /// Account Upload Ringtone constructor.
  const AccountUploadRingtone({
    required this.file,
    required this.fileName,
    required this.mimeType,
  }) : super._();

  /// Deserialize.
  factory AccountUploadRingtone.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// File.
  final InputFileBase file;

  /// File Name.
  final String fileName;

  /// Mime Type.
  final String mimeType;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bots Set Bot Broadcast Default Admin Rights.
///
/// ID: `788464e1`.
class BotsSetBotBroadcastDefaultAdminRights extends TlMethod<bool> {
  /// Bots Set Bot Broadcast Default Admin Rights constructor.
  const BotsSetBotBroadcastDefaultAdminRights({
    required this.adminRights,
  }) : super._();

  /// Deserialize.
  factory BotsSetBotBroadcastDefaultAdminRights.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Admin Rights.
  final ChatAdminRightsBase adminRights;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bots Set Bot Group Default Admin Rights.
///
/// ID: `925ec9ea`.
class BotsSetBotGroupDefaultAdminRights extends TlMethod<bool> {
  /// Bots Set Bot Group Default Admin Rights constructor.
  const BotsSetBotGroupDefaultAdminRights({
    required this.adminRights,
  }) : super._();

  /// Deserialize.
  factory BotsSetBotGroupDefaultAdminRights.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Admin Rights.
  final ChatAdminRightsBase adminRights;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Phone Save Call Log.
///
/// ID: `41248786`.
class PhoneSaveCallLog extends TlMethod<bool> {
  /// Phone Save Call Log constructor.
  const PhoneSaveCallLog({
    required this.peer,
    required this.file,
  }) : super._();

  /// Deserialize.
  factory PhoneSaveCallLog.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPhoneCallBase peer;

  /// File.
  final InputFileBase file;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Toggle Join To Send.
///
/// ID: `e4cb9580`.
class ChannelsToggleJoinToSend extends TlMethod<UpdatesBase> {
  /// Channels Toggle Join To Send constructor.
  const ChannelsToggleJoinToSend({
    required this.channel,
    required this.enabled,
  }) : super._();

  /// Deserialize.
  factory ChannelsToggleJoinToSend.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Enabled.
  final bool enabled;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Toggle Join Request.
///
/// ID: `4c2985b6`.
class ChannelsToggleJoinRequest extends TlMethod<UpdatesBase> {
  /// Channels Toggle Join Request constructor.
  const ChannelsToggleJoinRequest({
    required this.channel,
    required this.enabled,
  }) : super._();

  /// Deserialize.
  factory ChannelsToggleJoinRequest.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Enabled.
  final bool enabled;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Payments Export Invoice.
///
/// ID: `0f91b065`.
class PaymentsExportInvoice extends TlMethod<PaymentsExportedInvoiceBase> {
  /// Payments Export Invoice constructor.
  const PaymentsExportInvoice({
    required this.invoiceMedia,
  }) : super._();

  /// Deserialize.
  factory PaymentsExportInvoice.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Invoice Media.
  final InputMediaBase invoiceMedia;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Transcribe Audio.
///
/// ID: `269e9a49`.
class MessagesTranscribeAudio extends TlMethod<MessagesTranscribedAudioBase> {
  /// Messages Transcribe Audio constructor.
  const MessagesTranscribeAudio({
    required this.peer,
    required this.msgId,
  }) : super._();

  /// Deserialize.
  factory MessagesTranscribeAudio.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Msg Id.
  final int msgId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Rate Transcribed Audio.
///
/// ID: `7f1d072f`.
class MessagesRateTranscribedAudio extends TlMethod<bool> {
  /// Messages Rate Transcribed Audio constructor.
  const MessagesRateTranscribedAudio({
    required this.peer,
    required this.msgId,
    required this.transcriptionId,
    required this.good,
  }) : super._();

  /// Deserialize.
  factory MessagesRateTranscribedAudio.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Msg Id.
  final int msgId;

  /// Transcription Id.
  final int transcriptionId;

  /// Good.
  final bool good;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Payments Assign App Store Transaction.
///
/// ID: `80ed747d`.
class PaymentsAssignAppStoreTransaction extends TlMethod<UpdatesBase> {
  /// Payments Assign App Store Transaction constructor.
  const PaymentsAssignAppStoreTransaction({
    required this.receipt,
    required this.purpose,
  }) : super._();

  /// Deserialize.
  factory PaymentsAssignAppStoreTransaction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Receipt.
  final Uint8List receipt;

  /// Purpose.
  final InputStorePaymentPurposeBase purpose;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Payments Assign Play Market Transaction.
///
/// ID: `dffd50d3`.
class PaymentsAssignPlayMarketTransaction extends TlMethod<UpdatesBase> {
  /// Payments Assign Play Market Transaction constructor.
  const PaymentsAssignPlayMarketTransaction({
    required this.receipt,
    required this.purpose,
  }) : super._();

  /// Deserialize.
  factory PaymentsAssignPlayMarketTransaction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Receipt.
  final DataJSONBase receipt;

  /// Purpose.
  final InputStorePaymentPurposeBase purpose;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Payments Can Purchase Premium.
///
/// ID: `9fc19eb6`.
class PaymentsCanPurchasePremium extends TlMethod<bool> {
  /// Payments Can Purchase Premium constructor.
  const PaymentsCanPurchasePremium({
    required this.purpose,
  }) : super._();

  /// Deserialize.
  factory PaymentsCanPurchasePremium.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Purpose.
  final InputStorePaymentPurposeBase purpose;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Get Premium Promo.
///
/// ID: `b81b93d4`.
class HelpGetPremiumPromo extends TlMethod<HelpPremiumPromoBase> {
  /// Help Get Premium Promo constructor.
  const HelpGetPremiumPromo() : super._();

  /// Deserialize.
  factory HelpGetPremiumPromo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Custom Emoji Documents.
///
/// ID: `d9ab0f54`.
class MessagesGetCustomEmojiDocuments extends TlMethod<List<DocumentBase>> {
  /// Messages Get Custom Emoji Documents constructor.
  const MessagesGetCustomEmojiDocuments({
    required this.documentId,
  }) : super._();

  /// Deserialize.
  factory MessagesGetCustomEmojiDocuments.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Document Id.
  final List<int> documentId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Emoji Stickers.
///
/// ID: `fbfca18f`.
class MessagesGetEmojiStickers extends TlMethod<MessagesAllStickersBase> {
  /// Messages Get Emoji Stickers constructor.
  const MessagesGetEmojiStickers({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetEmojiStickers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Featured Emoji Stickers.
///
/// ID: `0ecf6736`.
class MessagesGetFeaturedEmojiStickers
    extends TlMethod<MessagesFeaturedStickersBase> {
  /// Messages Get Featured Emoji Stickers constructor.
  const MessagesGetFeaturedEmojiStickers({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetFeaturedEmojiStickers.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Update Emoji Status.
///
/// ID: `fbd3de6b`.
class AccountUpdateEmojiStatus extends TlMethod<bool> {
  /// Account Update Emoji Status constructor.
  const AccountUpdateEmojiStatus({
    required this.emojiStatus,
  }) : super._();

  /// Deserialize.
  factory AccountUpdateEmojiStatus.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Emoji Status.
  final EmojiStatusBase emojiStatus;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Default Emoji Statuses.
///
/// ID: `d6753386`.
class AccountGetDefaultEmojiStatuses
    extends TlMethod<AccountEmojiStatusesBase> {
  /// Account Get Default Emoji Statuses constructor.
  const AccountGetDefaultEmojiStatuses({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory AccountGetDefaultEmojiStatuses.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Recent Emoji Statuses.
///
/// ID: `0f578105`.
class AccountGetRecentEmojiStatuses extends TlMethod<AccountEmojiStatusesBase> {
  /// Account Get Recent Emoji Statuses constructor.
  const AccountGetRecentEmojiStatuses({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory AccountGetRecentEmojiStatuses.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Clear Recent Emoji Statuses.
///
/// ID: `18201aae`.
class AccountClearRecentEmojiStatuses extends TlMethod<bool> {
  /// Account Clear Recent Emoji Statuses constructor.
  const AccountClearRecentEmojiStatuses() : super._();

  /// Deserialize.
  factory AccountClearRecentEmojiStatuses.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Report Reaction.
///
/// ID: `3f64c076`.
class MessagesReportReaction extends TlMethod<bool> {
  /// Messages Report Reaction constructor.
  const MessagesReportReaction({
    required this.peer,
    required this.id,
    required this.reactionPeer,
  }) : super._();

  /// Deserialize.
  factory MessagesReportReaction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final int id;

  /// Reaction Peer.
  final InputPeerBase reactionPeer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Top Reactions.
///
/// ID: `bb8125ba`.
class MessagesGetTopReactions extends TlMethod<MessagesReactionsBase> {
  /// Messages Get Top Reactions constructor.
  const MessagesGetTopReactions({
    required this.limit,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetTopReactions.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Limit.
  final int limit;

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Recent Reactions.
///
/// ID: `39461db2`.
class MessagesGetRecentReactions extends TlMethod<MessagesReactionsBase> {
  /// Messages Get Recent Reactions constructor.
  const MessagesGetRecentReactions({
    required this.limit,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetRecentReactions.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Limit.
  final int limit;

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Clear Recent Reactions.
///
/// ID: `9dfeefb4`.
class MessagesClearRecentReactions extends TlMethod<bool> {
  /// Messages Clear Recent Reactions constructor.
  const MessagesClearRecentReactions() : super._();

  /// Deserialize.
  factory MessagesClearRecentReactions.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Extended Media.
///
/// ID: `84f80814`.
class MessagesGetExtendedMedia extends TlMethod<UpdatesBase> {
  /// Messages Get Extended Media constructor.
  const MessagesGetExtendedMedia({
    required this.peer,
    required this.id,
  }) : super._();

  /// Deserialize.
  factory MessagesGetExtendedMedia.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final List<int> id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Import Web Token Authorization.
///
/// ID: `2db873a9`.
class AuthImportWebTokenAuthorization extends TlMethod<AuthAuthorizationBase> {
  /// Auth Import Web Token Authorization constructor.
  const AuthImportWebTokenAuthorization({
    required this.apiId,
    required this.apiHash,
    required this.webAuthToken,
  }) : super._();

  /// Deserialize.
  factory AuthImportWebTokenAuthorization.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Api Id.
  final int apiId;

  /// Api Hash.
  final String apiHash;

  /// Web Auth Token.
  final String webAuthToken;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Reorder Usernames.
///
/// ID: `ef500eab`.
class AccountReorderUsernames extends TlMethod<bool> {
  /// Account Reorder Usernames constructor.
  const AccountReorderUsernames({
    required this.order,
  }) : super._();

  /// Deserialize.
  factory AccountReorderUsernames.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Order.
  final List<String> order;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Toggle Username.
///
/// ID: `58d6b376`.
class AccountToggleUsername extends TlMethod<bool> {
  /// Account Toggle Username constructor.
  const AccountToggleUsername({
    required this.username,
    required this.active,
  }) : super._();

  /// Deserialize.
  factory AccountToggleUsername.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Username.
  final String username;

  /// Active.
  final bool active;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Reorder Usernames.
///
/// ID: `b45ced1d`.
class ChannelsReorderUsernames extends TlMethod<bool> {
  /// Channels Reorder Usernames constructor.
  const ChannelsReorderUsernames({
    required this.channel,
    required this.order,
  }) : super._();

  /// Deserialize.
  factory ChannelsReorderUsernames.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Order.
  final List<String> order;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Toggle Username.
///
/// ID: `50f24105`.
class ChannelsToggleUsername extends TlMethod<bool> {
  /// Channels Toggle Username constructor.
  const ChannelsToggleUsername({
    required this.channel,
    required this.username,
    required this.active,
  }) : super._();

  /// Deserialize.
  factory ChannelsToggleUsername.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Username.
  final String username;

  /// Active.
  final bool active;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Deactivate All Usernames.
///
/// ID: `0a245dd3`.
class ChannelsDeactivateAllUsernames extends TlMethod<bool> {
  /// Channels Deactivate All Usernames constructor.
  const ChannelsDeactivateAllUsernames({
    required this.channel,
  }) : super._();

  /// Deserialize.
  factory ChannelsDeactivateAllUsernames.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Toggle Forum.
///
/// ID: `a4298b29`.
class ChannelsToggleForum extends TlMethod<UpdatesBase> {
  /// Channels Toggle Forum constructor.
  const ChannelsToggleForum({
    required this.channel,
    required this.enabled,
  }) : super._();

  /// Deserialize.
  factory ChannelsToggleForum.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Enabled.
  final bool enabled;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Create Forum Topic.
///
/// ID: `f40c0224`.
class ChannelsCreateForumTopic extends TlMethod<UpdatesBase> {
  /// Channels Create Forum Topic constructor.
  const ChannelsCreateForumTopic({
    required this.flags,
    required this.channel,
    required this.title,
    required this.iconColor,
    required this.iconEmojiId,
    required this.randomId,
    required this.sendAs,
  }) : super._();

  /// Deserialize.
  factory ChannelsCreateForumTopic.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Channel.
  final InputChannelBase channel;

  /// Title.
  final String title;

  /// Icon Color.
  final int? iconColor;

  /// If [iconColor] exists.
  bool get hasIconColorField => _bit(flags, 0);

  /// Icon Emoji Id.
  final int? iconEmojiId;

  /// If [iconEmojiId] exists.
  bool get hasIconEmojiIdField => _bit(flags, 3);

  /// Random Id.
  final int randomId;

  /// Send As.
  final InputPeerBase? sendAs;

  /// If [sendAs] exists.
  bool get hasSendAsField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Get Forum Topics.
///
/// ID: `0de560d1`.
class ChannelsGetForumTopics extends TlMethod<MessagesForumTopicsBase> {
  /// Channels Get Forum Topics constructor.
  const ChannelsGetForumTopics({
    required this.flags,
    required this.channel,
    required this.q,
    required this.offsetDate,
    required this.offsetId,
    required this.offsetTopic,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory ChannelsGetForumTopics.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Channel.
  final InputChannelBase channel;

  /// Q.
  final String? q;

  /// If [q] exists.
  bool get hasQField => _bit(flags, 0);

  /// Offset Date.
  final int offsetDate;

  /// Offset Id.
  final int offsetId;

  /// Offset Topic.
  final int offsetTopic;

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Get Forum Topics By I D.
///
/// ID: `b0831eb9`.
class ChannelsGetForumTopicsByID extends TlMethod<MessagesForumTopicsBase> {
  /// Channels Get Forum Topics By I D constructor.
  const ChannelsGetForumTopicsByID({
    required this.channel,
    required this.topics,
  }) : super._();

  /// Deserialize.
  factory ChannelsGetForumTopicsByID.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Topics.
  final List<int> topics;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Edit Forum Topic.
///
/// ID: `f4dfa185`.
class ChannelsEditForumTopic extends TlMethod<UpdatesBase> {
  /// Channels Edit Forum Topic constructor.
  const ChannelsEditForumTopic({
    required this.flags,
    required this.channel,
    required this.topicId,
    required this.title,
    required this.iconEmojiId,
    required this.closed,
    required this.hidden,
  }) : super._();

  /// Deserialize.
  factory ChannelsEditForumTopic.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Channel.
  final InputChannelBase channel;

  /// Topic Id.
  final int topicId;

  /// Title.
  final String? title;

  /// If [title] exists.
  bool get hasTitleField => _bit(flags, 0);

  /// Icon Emoji Id.
  final int? iconEmojiId;

  /// If [iconEmojiId] exists.
  bool get hasIconEmojiIdField => _bit(flags, 1);

  /// Closed.
  final bool? closed;

  /// If [closed] exists.
  bool get hasClosedField => _bit(flags, 2);

  /// Hidden.
  final bool? hidden;

  /// If [hidden] exists.
  bool get hasHiddenField => _bit(flags, 3);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Update Pinned Forum Topic.
///
/// ID: `6c2d9026`.
class ChannelsUpdatePinnedForumTopic extends TlMethod<UpdatesBase> {
  /// Channels Update Pinned Forum Topic constructor.
  const ChannelsUpdatePinnedForumTopic({
    required this.channel,
    required this.topicId,
    required this.pinned,
  }) : super._();

  /// Deserialize.
  factory ChannelsUpdatePinnedForumTopic.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Topic Id.
  final int topicId;

  /// Pinned.
  final bool pinned;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Delete Topic History.
///
/// ID: `34435f2d`.
class ChannelsDeleteTopicHistory extends TlMethod<MessagesAffectedHistoryBase> {
  /// Channels Delete Topic History constructor.
  const ChannelsDeleteTopicHistory({
    required this.channel,
    required this.topMsgId,
  }) : super._();

  /// Deserialize.
  factory ChannelsDeleteTopicHistory.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Top Msg Id.
  final int topMsgId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Reorder Pinned Forum Topics.
///
/// ID: `2950a18f`.
class ChannelsReorderPinnedForumTopics extends TlMethod<UpdatesBase> {
  /// Channels Reorder Pinned Forum Topics constructor.
  const ChannelsReorderPinnedForumTopics({
    required this.flags,
    required this.channel,
    required this.order,
  }) : super._();

  /// Deserialize.
  factory ChannelsReorderPinnedForumTopics.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// force: bit
  bool get force => _bit(flags, 0);

  /// Channel.
  final InputChannelBase channel;

  /// Order.
  final List<int> order;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Toggle Anti Spam.
///
/// ID: `68f3e4eb`.
class ChannelsToggleAntiSpam extends TlMethod<UpdatesBase> {
  /// Channels Toggle Anti Spam constructor.
  const ChannelsToggleAntiSpam({
    required this.channel,
    required this.enabled,
  }) : super._();

  /// Deserialize.
  factory ChannelsToggleAntiSpam.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Enabled.
  final bool enabled;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Report Anti Spam False Positive.
///
/// ID: `a850a693`.
class ChannelsReportAntiSpamFalsePositive extends TlMethod<bool> {
  /// Channels Report Anti Spam False Positive constructor.
  const ChannelsReportAntiSpamFalsePositive({
    required this.channel,
    required this.msgId,
  }) : super._();

  /// Deserialize.
  factory ChannelsReportAntiSpamFalsePositive.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Msg Id.
  final int msgId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Set Default History T T L.
///
/// ID: `9eb51445`.
class MessagesSetDefaultHistoryTTL extends TlMethod<bool> {
  /// Messages Set Default History T T L constructor.
  const MessagesSetDefaultHistoryTTL({
    required this.period,
  }) : super._();

  /// Deserialize.
  factory MessagesSetDefaultHistoryTTL.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Period.
  final int period;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Default History T T L.
///
/// ID: `658b7188`.
class MessagesGetDefaultHistoryTTL extends TlMethod<DefaultHistoryTTLBase> {
  /// Messages Get Default History T T L constructor.
  const MessagesGetDefaultHistoryTTL() : super._();

  /// Deserialize.
  factory MessagesGetDefaultHistoryTTL.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Export Contact Token.
///
/// ID: `f8654027`.
class ContactsExportContactToken extends TlMethod<ExportedContactTokenBase> {
  /// Contacts Export Contact Token constructor.
  const ContactsExportContactToken() : super._();

  /// Deserialize.
  factory ContactsExportContactToken.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Import Contact Token.
///
/// ID: `13005788`.
class ContactsImportContactToken extends TlMethod<UserBase> {
  /// Contacts Import Contact Token constructor.
  const ContactsImportContactToken({
    required this.token,
  }) : super._();

  /// Deserialize.
  factory ContactsImportContactToken.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Token.
  final String token;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Photos Upload Contact Profile Photo.
///
/// ID: `e14c4a71`.
class PhotosUploadContactProfilePhoto extends TlMethod<PhotosPhotoBase> {
  /// Photos Upload Contact Profile Photo constructor.
  const PhotosUploadContactProfilePhoto({
    required this.flags,
    required this.userId,
    required this.file,
    required this.video,
    required this.videoStartTs,
    required this.videoEmojiMarkup,
  }) : super._();

  /// Deserialize.
  factory PhotosUploadContactProfilePhoto.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// suggest: bit
  bool get suggest => _bit(flags, 3);

  /// save: bit
  bool get save => _bit(flags, 4);

  /// User Id.
  final InputUserBase userId;

  /// File.
  final InputFileBase? file;

  /// If [file] exists.
  bool get hasFileField => _bit(flags, 0);

  /// Video.
  final InputFileBase? video;

  /// If [video] exists.
  bool get hasVideoField => _bit(flags, 1);

  /// Video Start Ts.
  final double? videoStartTs;

  /// If [videoStartTs] exists.
  bool get hasVideoStartTsField => _bit(flags, 2);

  /// Video Emoji Markup.
  final VideoSizeBase? videoEmojiMarkup;

  /// If [videoEmojiMarkup] exists.
  bool get hasVideoEmojiMarkupField => _bit(flags, 5);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Toggle Participants Hidden.
///
/// ID: `6a6e7854`.
class ChannelsToggleParticipantsHidden extends TlMethod<UpdatesBase> {
  /// Channels Toggle Participants Hidden constructor.
  const ChannelsToggleParticipantsHidden({
    required this.channel,
    required this.enabled,
  }) : super._();

  /// Deserialize.
  factory ChannelsToggleParticipantsHidden.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Enabled.
  final bool enabled;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Send Bot Requested Peer.
///
/// ID: `91b2d060`.
class MessagesSendBotRequestedPeer extends TlMethod<UpdatesBase> {
  /// Messages Send Bot Requested Peer constructor.
  const MessagesSendBotRequestedPeer({
    required this.peer,
    required this.msgId,
    required this.buttonId,
    required this.requestedPeers,
  }) : super._();

  /// Deserialize.
  factory MessagesSendBotRequestedPeer.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Msg Id.
  final int msgId;

  /// Button Id.
  final int buttonId;

  /// Requested Peers.
  final List<InputPeerBase> requestedPeers;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Default Profile Photo Emojis.
///
/// ID: `e2750328`.
class AccountGetDefaultProfilePhotoEmojis extends TlMethod<EmojiListBase> {
  /// Account Get Default Profile Photo Emojis constructor.
  const AccountGetDefaultProfilePhotoEmojis({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory AccountGetDefaultProfilePhotoEmojis.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Default Group Photo Emojis.
///
/// ID: `915860ae`.
class AccountGetDefaultGroupPhotoEmojis extends TlMethod<EmojiListBase> {
  /// Account Get Default Group Photo Emojis constructor.
  const AccountGetDefaultGroupPhotoEmojis({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory AccountGetDefaultGroupPhotoEmojis.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Request Firebase Sms.
///
/// ID: `89464b50`.
class AuthRequestFirebaseSms extends TlMethod<bool> {
  /// Auth Request Firebase Sms constructor.
  const AuthRequestFirebaseSms({
    required this.flags,
    required this.phoneNumber,
    required this.phoneCodeHash,
    required this.safetyNetToken,
    required this.iosPushSecret,
  }) : super._();

  /// Deserialize.
  factory AuthRequestFirebaseSms.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Phone Number.
  final String phoneNumber;

  /// Phone Code Hash.
  final String phoneCodeHash;

  /// Safety Net Token.
  final String? safetyNetToken;

  /// If [safetyNetToken] exists.
  bool get hasSafetyNetTokenField => _bit(flags, 0);

  /// Ios Push Secret.
  final String? iosPushSecret;

  /// If [iosPushSecret] exists.
  bool get hasIosPushSecretField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Emoji Groups.
///
/// ID: `7488ce5b`.
class MessagesGetEmojiGroups extends TlMethod<MessagesEmojiGroupsBase> {
  /// Messages Get Emoji Groups constructor.
  const MessagesGetEmojiGroups({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetEmojiGroups.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Emoji Status Groups.
///
/// ID: `2ecd56cd`.
class MessagesGetEmojiStatusGroups extends TlMethod<MessagesEmojiGroupsBase> {
  /// Messages Get Emoji Status Groups constructor.
  const MessagesGetEmojiStatusGroups({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetEmojiStatusGroups.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Emoji Profile Photo Groups.
///
/// ID: `21a548f3`.
class MessagesGetEmojiProfilePhotoGroups
    extends TlMethod<MessagesEmojiGroupsBase> {
  /// Messages Get Emoji Profile Photo Groups constructor.
  const MessagesGetEmojiProfilePhotoGroups({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetEmojiProfilePhotoGroups.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Search Custom Emoji.
///
/// ID: `2c11c0d7`.
class MessagesSearchCustomEmoji extends TlMethod<EmojiListBase> {
  /// Messages Search Custom Emoji constructor.
  const MessagesSearchCustomEmoji({
    required this.emoticon,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesSearchCustomEmoji.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Emoticon.
  final String emoticon;

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Toggle Peer Translations.
///
/// ID: `e47cb579`.
class MessagesTogglePeerTranslations extends TlMethod<bool> {
  /// Messages Toggle Peer Translations constructor.
  const MessagesTogglePeerTranslations({
    required this.flags,
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory MessagesTogglePeerTranslations.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// disabled: bit
  bool get disabled => _bit(flags, 0);

  /// Peer.
  final InputPeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Auto Save Settings.
///
/// ID: `adcbbcda`.
class AccountGetAutoSaveSettings extends TlMethod<AccountAutoSaveSettingsBase> {
  /// Account Get Auto Save Settings constructor.
  const AccountGetAutoSaveSettings() : super._();

  /// Deserialize.
  factory AccountGetAutoSaveSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Save Auto Save Settings.
///
/// ID: `d69b8361`.
class AccountSaveAutoSaveSettings extends TlMethod<bool> {
  /// Account Save Auto Save Settings constructor.
  const AccountSaveAutoSaveSettings({
    required this.flags,
    required this.peer,
    required this.settings,
  }) : super._();

  /// Deserialize.
  factory AccountSaveAutoSaveSettings.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// users: bit
  bool get users => _bit(flags, 0);

  /// chats: bit
  bool get chats => _bit(flags, 1);

  /// broadcasts: bit
  bool get broadcasts => _bit(flags, 2);

  /// Peer.
  final InputPeerBase? peer;

  /// If [peer] exists.
  bool get hasPeerField => _bit(flags, 3);

  /// Settings.
  final AutoSaveSettingsBase settings;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Delete Auto Save Exceptions.
///
/// ID: `53bc0020`.
class AccountDeleteAutoSaveExceptions extends TlMethod<bool> {
  /// Account Delete Auto Save Exceptions constructor.
  const AccountDeleteAutoSaveExceptions() : super._();

  /// Deserialize.
  factory AccountDeleteAutoSaveExceptions.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stickers Change Sticker.
///
/// ID: `f5537ebc`.
class StickersChangeSticker extends TlMethod<MessagesStickerSetBase> {
  /// Stickers Change Sticker constructor.
  const StickersChangeSticker({
    required this.flags,
    required this.sticker,
    required this.emoji,
    required this.maskCoords,
    required this.keywords,
  }) : super._();

  /// Deserialize.
  factory StickersChangeSticker.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Sticker.
  final InputDocumentBase sticker;

  /// Emoji.
  final String? emoji;

  /// If [emoji] exists.
  bool get hasEmojiField => _bit(flags, 0);

  /// Mask Coords.
  final MaskCoordsBase? maskCoords;

  /// If [maskCoords] exists.
  bool get hasMaskCoordsField => _bit(flags, 1);

  /// Keywords.
  final String? keywords;

  /// If [keywords] exists.
  bool get hasKeywordsField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stickers Rename Sticker Set.
///
/// ID: `124b1c00`.
class StickersRenameStickerSet extends TlMethod<MessagesStickerSetBase> {
  /// Stickers Rename Sticker Set constructor.
  const StickersRenameStickerSet({
    required this.stickerset,
    required this.title,
  }) : super._();

  /// Deserialize.
  factory StickersRenameStickerSet.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Stickerset.
  final InputStickerSetBase stickerset;

  /// Title.
  final String title;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stickers Delete Sticker Set.
///
/// ID: `87704394`.
class StickersDeleteStickerSet extends TlMethod<bool> {
  /// Stickers Delete Sticker Set constructor.
  const StickersDeleteStickerSet({
    required this.stickerset,
  }) : super._();

  /// Deserialize.
  factory StickersDeleteStickerSet.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Stickerset.
  final InputStickerSetBase stickerset;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Bot App.
///
/// ID: `34fdc5c3`.
class MessagesGetBotApp extends TlMethod<MessagesBotAppBase> {
  /// Messages Get Bot App constructor.
  const MessagesGetBotApp({
    required this.app,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetBotApp.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// App.
  final InputBotAppBase app;

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Request App Web View.
///
/// ID: `8c5a3b3c`.
class MessagesRequestAppWebView extends TlMethod<AppWebViewResultBase> {
  /// Messages Request App Web View constructor.
  const MessagesRequestAppWebView({
    required this.flags,
    required this.peer,
    required this.app,
    required this.startParam,
    required this.themeParams,
    required this.platform,
  }) : super._();

  /// Deserialize.
  factory MessagesRequestAppWebView.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// write_allowed: bit
  bool get writeAllowed => _bit(flags, 0);

  /// Peer.
  final InputPeerBase peer;

  /// App.
  final InputBotAppBase app;

  /// Start Param.
  final String? startParam;

  /// If [startParam] exists.
  bool get hasStartParamField => _bit(flags, 1);

  /// Theme Params.
  final DataJSONBase? themeParams;

  /// If [themeParams] exists.
  bool get hasThemeParamsField => _bit(flags, 2);

  /// Platform.
  final String platform;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bots Set Bot Info.
///
/// ID: `10cf3123`.
class BotsSetBotInfo extends TlMethod<bool> {
  /// Bots Set Bot Info constructor.
  const BotsSetBotInfo({
    required this.flags,
    required this.bot,
    required this.langCode,
    required this.name,
    required this.about,
    required this.description,
  }) : super._();

  /// Deserialize.
  factory BotsSetBotInfo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Bot.
  final InputUserBase? bot;

  /// If [bot] exists.
  bool get hasBotField => _bit(flags, 2);

  /// Lang Code.
  final String langCode;

  /// Name.
  final String? name;

  /// If [name] exists.
  bool get hasNameField => _bit(flags, 3);

  /// About.
  final String? about;

  /// If [about] exists.
  bool get hasAboutField => _bit(flags, 0);

  /// Description.
  final String? description;

  /// If [description] exists.
  bool get hasDescriptionField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bots Get Bot Info.
///
/// ID: `dcd914fd`.
class BotsGetBotInfo extends TlMethod<BotsBotInfoBase> {
  /// Bots Get Bot Info constructor.
  const BotsGetBotInfo({
    required this.flags,
    required this.bot,
    required this.langCode,
  }) : super._();

  /// Deserialize.
  factory BotsGetBotInfo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Bot.
  final InputUserBase? bot;

  /// If [bot] exists.
  bool get hasBotField => _bit(flags, 0);

  /// Lang Code.
  final String langCode;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Auth Reset Login Email.
///
/// ID: `7e960193`.
class AuthResetLoginEmail extends TlMethod<AuthSentCodeBase> {
  /// Auth Reset Login Email constructor.
  const AuthResetLoginEmail({
    required this.phoneNumber,
    required this.phoneCodeHash,
  }) : super._();

  /// Deserialize.
  factory AuthResetLoginEmail.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Phone Number.
  final String phoneNumber;

  /// Phone Code Hash.
  final String phoneCodeHash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Chatlists Export Chatlist Invite.
///
/// ID: `8472478e`.
class ChatlistsExportChatlistInvite
    extends TlMethod<ChatlistsExportedChatlistInviteBase> {
  /// Chatlists Export Chatlist Invite constructor.
  const ChatlistsExportChatlistInvite({
    required this.chatlist,
    required this.title,
    required this.peers,
  }) : super._();

  /// Deserialize.
  factory ChatlistsExportChatlistInvite.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chatlist.
  final InputChatlistBase chatlist;

  /// Title.
  final String title;

  /// Peers.
  final List<InputPeerBase> peers;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Chatlists Delete Exported Invite.
///
/// ID: `719c5c5e`.
class ChatlistsDeleteExportedInvite extends TlMethod<bool> {
  /// Chatlists Delete Exported Invite constructor.
  const ChatlistsDeleteExportedInvite({
    required this.chatlist,
    required this.slug,
  }) : super._();

  /// Deserialize.
  factory ChatlistsDeleteExportedInvite.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chatlist.
  final InputChatlistBase chatlist;

  /// Slug.
  final String slug;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Chatlists Edit Exported Invite.
///
/// ID: `653db63d`.
class ChatlistsEditExportedInvite extends TlMethod<ExportedChatlistInviteBase> {
  /// Chatlists Edit Exported Invite constructor.
  const ChatlistsEditExportedInvite({
    required this.flags,
    required this.chatlist,
    required this.slug,
    required this.title,
    required this.peers,
  }) : super._();

  /// Deserialize.
  factory ChatlistsEditExportedInvite.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Chatlist.
  final InputChatlistBase chatlist;

  /// Slug.
  final String slug;

  /// Title.
  final String? title;

  /// If [title] exists.
  bool get hasTitleField => _bit(flags, 1);

  /// Peers.
  final List<InputPeerBase>? peers;

  /// If [peers] exists.
  bool get hasPeersField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Chatlists Get Exported Invites.
///
/// ID: `ce03da83`.
class ChatlistsGetExportedInvites
    extends TlMethod<ChatlistsExportedInvitesBase> {
  /// Chatlists Get Exported Invites constructor.
  const ChatlistsGetExportedInvites({
    required this.chatlist,
  }) : super._();

  /// Deserialize.
  factory ChatlistsGetExportedInvites.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chatlist.
  final InputChatlistBase chatlist;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Chatlists Check Chatlist Invite.
///
/// ID: `41c10fff`.
class ChatlistsCheckChatlistInvite
    extends TlMethod<ChatlistsChatlistInviteBase> {
  /// Chatlists Check Chatlist Invite constructor.
  const ChatlistsCheckChatlistInvite({
    required this.slug,
  }) : super._();

  /// Deserialize.
  factory ChatlistsCheckChatlistInvite.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Slug.
  final String slug;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Chatlists Join Chatlist Invite.
///
/// ID: `a6b1e39a`.
class ChatlistsJoinChatlistInvite extends TlMethod<UpdatesBase> {
  /// Chatlists Join Chatlist Invite constructor.
  const ChatlistsJoinChatlistInvite({
    required this.slug,
    required this.peers,
  }) : super._();

  /// Deserialize.
  factory ChatlistsJoinChatlistInvite.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Slug.
  final String slug;

  /// Peers.
  final List<InputPeerBase> peers;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Chatlists Get Chatlist Updates.
///
/// ID: `89419521`.
class ChatlistsGetChatlistUpdates
    extends TlMethod<ChatlistsChatlistUpdatesBase> {
  /// Chatlists Get Chatlist Updates constructor.
  const ChatlistsGetChatlistUpdates({
    required this.chatlist,
  }) : super._();

  /// Deserialize.
  factory ChatlistsGetChatlistUpdates.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chatlist.
  final InputChatlistBase chatlist;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Chatlists Join Chatlist Updates.
///
/// ID: `e089f8f5`.
class ChatlistsJoinChatlistUpdates extends TlMethod<UpdatesBase> {
  /// Chatlists Join Chatlist Updates constructor.
  const ChatlistsJoinChatlistUpdates({
    required this.chatlist,
    required this.peers,
  }) : super._();

  /// Deserialize.
  factory ChatlistsJoinChatlistUpdates.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chatlist.
  final InputChatlistBase chatlist;

  /// Peers.
  final List<InputPeerBase> peers;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Chatlists Hide Chatlist Updates.
///
/// ID: `66e486fb`.
class ChatlistsHideChatlistUpdates extends TlMethod<bool> {
  /// Chatlists Hide Chatlist Updates constructor.
  const ChatlistsHideChatlistUpdates({
    required this.chatlist,
  }) : super._();

  /// Deserialize.
  factory ChatlistsHideChatlistUpdates.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chatlist.
  final InputChatlistBase chatlist;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Chatlists Get Leave Chatlist Suggestions.
///
/// ID: `fdbcd714`.
class ChatlistsGetLeaveChatlistSuggestions extends TlMethod<List<PeerBase>> {
  /// Chatlists Get Leave Chatlist Suggestions constructor.
  const ChatlistsGetLeaveChatlistSuggestions({
    required this.chatlist,
  }) : super._();

  /// Deserialize.
  factory ChatlistsGetLeaveChatlistSuggestions.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chatlist.
  final InputChatlistBase chatlist;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Chatlists Leave Chatlist.
///
/// ID: `74fae13a`.
class ChatlistsLeaveChatlist extends TlMethod<UpdatesBase> {
  /// Chatlists Leave Chatlist constructor.
  const ChatlistsLeaveChatlist({
    required this.chatlist,
    required this.peers,
  }) : super._();

  /// Deserialize.
  factory ChatlistsLeaveChatlist.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Chatlist.
  final InputChatlistBase chatlist;

  /// Peers.
  final List<InputPeerBase> peers;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bots Reorder Usernames.
///
/// ID: `9709b1c2`.
class BotsReorderUsernames extends TlMethod<bool> {
  /// Bots Reorder Usernames constructor.
  const BotsReorderUsernames({
    required this.bot,
    required this.order,
  }) : super._();

  /// Deserialize.
  factory BotsReorderUsernames.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Bot.
  final InputUserBase bot;

  /// Order.
  final List<String> order;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bots Toggle Username.
///
/// ID: `053ca973`.
class BotsToggleUsername extends TlMethod<bool> {
  /// Bots Toggle Username constructor.
  const BotsToggleUsername({
    required this.bot,
    required this.username,
    required this.active,
  }) : super._();

  /// Deserialize.
  factory BotsToggleUsername.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Bot.
  final InputUserBase bot;

  /// Username.
  final String username;

  /// Active.
  final bool active;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Set Chat Wall Paper.
///
/// ID: `8ffacae1`.
class MessagesSetChatWallPaper extends TlMethod<UpdatesBase> {
  /// Messages Set Chat Wall Paper constructor.
  const MessagesSetChatWallPaper({
    required this.flags,
    required this.peer,
    required this.wallpaper,
    required this.settings,
    required this.id,
  }) : super._();

  /// Deserialize.
  factory MessagesSetChatWallPaper.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// for_both: bit
  bool get forBoth => _bit(flags, 3);

  /// revert: bit
  bool get revert => _bit(flags, 4);

  /// Peer.
  final InputPeerBase peer;

  /// Wallpaper.
  final InputWallPaperBase? wallpaper;

  /// If [wallpaper] exists.
  bool get hasWallpaperField => _bit(flags, 0);

  /// Settings.
  final WallPaperSettingsBase? settings;

  /// If [settings] exists.
  bool get hasSettingsField => _bit(flags, 2);

  /// Id.
  final int? id;

  /// If [id] exists.
  bool get hasIdField => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Invalidate Sign In Codes.
///
/// ID: `ca8ae8ba`.
class AccountInvalidateSignInCodes extends TlMethod<bool> {
  /// Account Invalidate Sign In Codes constructor.
  const AccountInvalidateSignInCodes({
    required this.codes,
  }) : super._();

  /// Deserialize.
  factory AccountInvalidateSignInCodes.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Codes.
  final List<String> codes;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Click Sponsored Message.
///
/// ID: `18afbc93`.
class ChannelsClickSponsoredMessage extends TlMethod<bool> {
  /// Channels Click Sponsored Message constructor.
  const ChannelsClickSponsoredMessage({
    required this.channel,
    required this.randomId,
  }) : super._();

  /// Deserialize.
  factory ChannelsClickSponsoredMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Random Id.
  final Uint8List randomId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Edit Close Friends.
///
/// ID: `ba6705f0`.
class ContactsEditCloseFriends extends TlMethod<bool> {
  /// Contacts Edit Close Friends constructor.
  const ContactsEditCloseFriends({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory ContactsEditCloseFriends.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final List<int> id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stories Can Send Story.
///
/// ID: `c7dfdfdd`.
class StoriesCanSendStory extends TlMethod<bool> {
  /// Stories Can Send Story constructor.
  const StoriesCanSendStory({
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory StoriesCanSendStory.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stories Send Story.
///
/// ID: `e4e6694b`.
class StoriesSendStory extends TlMethod<UpdatesBase> {
  /// Stories Send Story constructor.
  const StoriesSendStory({
    required this.flags,
    required this.peer,
    required this.media,
    required this.mediaAreas,
    required this.caption,
    required this.entities,
    required this.privacyRules,
    required this.randomId,
    required this.period,
    required this.fwdFromId,
    required this.fwdFromStory,
  }) : super._();

  /// Deserialize.
  factory StoriesSendStory.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// pinned: bit
  bool get pinned => _bit(flags, 2);

  /// noforwards: bit
  bool get noforwards => _bit(flags, 4);

  /// fwd_modified: bit
  bool get fwdModified => _bit(flags, 7);

  /// Peer.
  final InputPeerBase peer;

  /// Media.
  final InputMediaBase media;

  /// Media Areas.
  final List<MediaAreaBase>? mediaAreas;

  /// If [mediaAreas] exists.
  bool get hasMediaAreasField => _bit(flags, 5);

  /// Caption.
  final String? caption;

  /// If [caption] exists.
  bool get hasCaptionField => _bit(flags, 0);

  /// Entities.
  final List<MessageEntityBase>? entities;

  /// If [entities] exists.
  bool get hasEntitiesField => _bit(flags, 1);

  /// Privacy Rules.
  final List<InputPrivacyRuleBase> privacyRules;

  /// Random Id.
  final int randomId;

  /// Period.
  final int? period;

  /// If [period] exists.
  bool get hasPeriodField => _bit(flags, 3);

  /// Fwd From Id.
  final InputPeerBase? fwdFromId;

  /// If [fwdFromId] exists.
  bool get hasFwdFromIdField => _bit(flags, 6);

  /// Fwd From Story.
  final int? fwdFromStory;

  /// If [fwdFromStory] exists.
  bool get hasFwdFromStoryField => _bit(flags, 6);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stories Edit Story.
///
/// ID: `b583ba46`.
class StoriesEditStory extends TlMethod<UpdatesBase> {
  /// Stories Edit Story constructor.
  const StoriesEditStory({
    required this.flags,
    required this.peer,
    required this.id,
    required this.media,
    required this.mediaAreas,
    required this.caption,
    required this.entities,
    required this.privacyRules,
  }) : super._();

  /// Deserialize.
  factory StoriesEditStory.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final int id;

  /// Media.
  final InputMediaBase? media;

  /// If [media] exists.
  bool get hasMediaField => _bit(flags, 0);

  /// Media Areas.
  final List<MediaAreaBase>? mediaAreas;

  /// If [mediaAreas] exists.
  bool get hasMediaAreasField => _bit(flags, 3);

  /// Caption.
  final String? caption;

  /// If [caption] exists.
  bool get hasCaptionField => _bit(flags, 1);

  /// Entities.
  final List<MessageEntityBase>? entities;

  /// If [entities] exists.
  bool get hasEntitiesField => _bit(flags, 1);

  /// Privacy Rules.
  final List<InputPrivacyRuleBase>? privacyRules;

  /// If [privacyRules] exists.
  bool get hasPrivacyRulesField => _bit(flags, 2);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stories Delete Stories.
///
/// ID: `ae59db5f`.
class StoriesDeleteStories extends TlMethod<List<int>> {
  /// Stories Delete Stories constructor.
  const StoriesDeleteStories({
    required this.peer,
    required this.id,
  }) : super._();

  /// Deserialize.
  factory StoriesDeleteStories.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final List<int> id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stories Toggle Pinned.
///
/// ID: `9a75a1ef`.
class StoriesTogglePinned extends TlMethod<List<int>> {
  /// Stories Toggle Pinned constructor.
  const StoriesTogglePinned({
    required this.peer,
    required this.id,
    required this.pinned,
  }) : super._();

  /// Deserialize.
  factory StoriesTogglePinned.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final List<int> id;

  /// Pinned.
  final bool pinned;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stories Get All Stories.
///
/// ID: `eeb0d625`.
class StoriesGetAllStories extends TlMethod<StoriesAllStoriesBase> {
  /// Stories Get All Stories constructor.
  const StoriesGetAllStories({
    required this.flags,
    required this.state,
  }) : super._();

  /// Deserialize.
  factory StoriesGetAllStories.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// next: bit
  bool get next => _bit(flags, 1);

  /// hidden: bit
  bool get hidden => _bit(flags, 2);

  /// State.
  final String? state;

  /// If [state] exists.
  bool get hasStateField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stories Get Pinned Stories.
///
/// ID: `5821a5dc`.
class StoriesGetPinnedStories extends TlMethod<StoriesStoriesBase> {
  /// Stories Get Pinned Stories constructor.
  const StoriesGetPinnedStories({
    required this.peer,
    required this.offsetId,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory StoriesGetPinnedStories.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Offset Id.
  final int offsetId;

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stories Get Stories Archive.
///
/// ID: `b4352016`.
class StoriesGetStoriesArchive extends TlMethod<StoriesStoriesBase> {
  /// Stories Get Stories Archive constructor.
  const StoriesGetStoriesArchive({
    required this.peer,
    required this.offsetId,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory StoriesGetStoriesArchive.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Offset Id.
  final int offsetId;

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stories Get Stories By I D.
///
/// ID: `5774ca74`.
class StoriesGetStoriesByID extends TlMethod<StoriesStoriesBase> {
  /// Stories Get Stories By I D constructor.
  const StoriesGetStoriesByID({
    required this.peer,
    required this.id,
  }) : super._();

  /// Deserialize.
  factory StoriesGetStoriesByID.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final List<int> id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stories Toggle All Stories Hidden.
///
/// ID: `7c2557c4`.
class StoriesToggleAllStoriesHidden extends TlMethod<bool> {
  /// Stories Toggle All Stories Hidden constructor.
  const StoriesToggleAllStoriesHidden({
    required this.hidden,
  }) : super._();

  /// Deserialize.
  factory StoriesToggleAllStoriesHidden.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hidden.
  final bool hidden;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stories Read Stories.
///
/// ID: `a556dac8`.
class StoriesReadStories extends TlMethod<List<int>> {
  /// Stories Read Stories constructor.
  const StoriesReadStories({
    required this.peer,
    required this.maxId,
  }) : super._();

  /// Deserialize.
  factory StoriesReadStories.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Max Id.
  final int maxId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stories Increment Story Views.
///
/// ID: `b2028afb`.
class StoriesIncrementStoryViews extends TlMethod<bool> {
  /// Stories Increment Story Views constructor.
  const StoriesIncrementStoryViews({
    required this.peer,
    required this.id,
  }) : super._();

  /// Deserialize.
  factory StoriesIncrementStoryViews.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final List<int> id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stories Get Story Views List.
///
/// ID: `7ed23c57`.
class StoriesGetStoryViewsList extends TlMethod<StoriesStoryViewsListBase> {
  /// Stories Get Story Views List constructor.
  const StoriesGetStoryViewsList({
    required this.flags,
    required this.peer,
    required this.q,
    required this.id,
    required this.offset,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory StoriesGetStoryViewsList.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// just_contacts: bit
  bool get justContacts => _bit(flags, 0);

  /// reactions_first: bit
  bool get reactionsFirst => _bit(flags, 2);

  /// forwards_first: bit
  bool get forwardsFirst => _bit(flags, 3);

  /// Peer.
  final InputPeerBase peer;

  /// Q.
  final String? q;

  /// If [q] exists.
  bool get hasQField => _bit(flags, 1);

  /// Id.
  final int id;

  /// Offset.
  final String offset;

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stories Get Stories Views.
///
/// ID: `28e16cc8`.
class StoriesGetStoriesViews extends TlMethod<StoriesStoryViewsBase> {
  /// Stories Get Stories Views constructor.
  const StoriesGetStoriesViews({
    required this.peer,
    required this.id,
  }) : super._();

  /// Deserialize.
  factory StoriesGetStoriesViews.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final List<int> id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stories Export Story Link.
///
/// ID: `7b8def20`.
class StoriesExportStoryLink extends TlMethod<ExportedStoryLinkBase> {
  /// Stories Export Story Link constructor.
  const StoriesExportStoryLink({
    required this.peer,
    required this.id,
  }) : super._();

  /// Deserialize.
  factory StoriesExportStoryLink.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final int id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stories Report.
///
/// ID: `1923fa8c`.
class StoriesReport extends TlMethod<bool> {
  /// Stories Report constructor.
  const StoriesReport({
    required this.peer,
    required this.id,
    required this.reason,
    required this.message,
  }) : super._();

  /// Deserialize.
  factory StoriesReport.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final List<int> id;

  /// Reason.
  final ReportReasonBase reason;

  /// Message.
  final String message;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stories Activate Stealth Mode.
///
/// ID: `57bbd166`.
class StoriesActivateStealthMode extends TlMethod<UpdatesBase> {
  /// Stories Activate Stealth Mode constructor.
  const StoriesActivateStealthMode({
    required this.flags,
  }) : super._();

  /// Deserialize.
  factory StoriesActivateStealthMode.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// past: bit
  bool get past => _bit(flags, 0);

  /// future: bit
  bool get future => _bit(flags, 1);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Contacts Set Blocked.
///
/// ID: `94c65c76`.
class ContactsSetBlocked extends TlMethod<bool> {
  /// Contacts Set Blocked constructor.
  const ContactsSetBlocked({
    required this.flags,
    required this.id,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory ContactsSetBlocked.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// my_stories_from: bit
  bool get myStoriesFrom => _bit(flags, 0);

  /// Id.
  final List<InputPeerBase> id;

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stories Send Reaction.
///
/// ID: `7fd736b2`.
class StoriesSendReaction extends TlMethod<UpdatesBase> {
  /// Stories Send Reaction constructor.
  const StoriesSendReaction({
    required this.flags,
    required this.peer,
    required this.storyId,
    required this.reaction,
  }) : super._();

  /// Deserialize.
  factory StoriesSendReaction.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// add_to_recent: bit
  bool get addToRecent => _bit(flags, 0);

  /// Peer.
  final InputPeerBase peer;

  /// Story Id.
  final int storyId;

  /// Reaction.
  final ReactionBase reaction;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bots Can Send Message.
///
/// ID: `1359f4e6`.
class BotsCanSendMessage extends TlMethod<bool> {
  /// Bots Can Send Message constructor.
  const BotsCanSendMessage({
    required this.bot,
  }) : super._();

  /// Deserialize.
  factory BotsCanSendMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Bot.
  final InputUserBase bot;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bots Allow Send Message.
///
/// ID: `f132e3ef`.
class BotsAllowSendMessage extends TlMethod<UpdatesBase> {
  /// Bots Allow Send Message constructor.
  const BotsAllowSendMessage({
    required this.bot,
  }) : super._();

  /// Deserialize.
  factory BotsAllowSendMessage.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Bot.
  final InputUserBase bot;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Bots Invoke Web View Custom Method.
///
/// ID: `087fc5e7`.
class BotsInvokeWebViewCustomMethod extends TlMethod<DataJSONBase> {
  /// Bots Invoke Web View Custom Method constructor.
  const BotsInvokeWebViewCustomMethod({
    required this.bot,
    required this.customMethod,
    required this.params,
  }) : super._();

  /// Deserialize.
  factory BotsInvokeWebViewCustomMethod.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Bot.
  final InputUserBase bot;

  /// Custom Method.
  final String customMethod;

  /// Params.
  final DataJSONBase params;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stories Get Peer Stories.
///
/// ID: `2c4ada50`.
class StoriesGetPeerStories extends TlMethod<StoriesPeerStoriesBase> {
  /// Stories Get Peer Stories constructor.
  const StoriesGetPeerStories({
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory StoriesGetPeerStories.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stories Get All Read Peer Stories.
///
/// ID: `9b5ae7f9`.
class StoriesGetAllReadPeerStories extends TlMethod<UpdatesBase> {
  /// Stories Get All Read Peer Stories constructor.
  const StoriesGetAllReadPeerStories() : super._();

  /// Deserialize.
  factory StoriesGetAllReadPeerStories.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stories Get Peer Max I Ds.
///
/// ID: `535983c3`.
class StoriesGetPeerMaxIDs extends TlMethod<List<int>> {
  /// Stories Get Peer Max I Ds constructor.
  const StoriesGetPeerMaxIDs({
    required this.id,
  }) : super._();

  /// Deserialize.
  factory StoriesGetPeerMaxIDs.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Id.
  final List<InputPeerBase> id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stories Get Chats To Send.
///
/// ID: `a56a8b60`.
class StoriesGetChatsToSend extends TlMethod<MessagesChatsBase> {
  /// Stories Get Chats To Send constructor.
  const StoriesGetChatsToSend() : super._();

  /// Deserialize.
  factory StoriesGetChatsToSend.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stories Toggle Peer Stories Hidden.
///
/// ID: `bd0415c4`.
class StoriesTogglePeerStoriesHidden extends TlMethod<bool> {
  /// Stories Toggle Peer Stories Hidden constructor.
  const StoriesTogglePeerStoriesHidden({
    required this.peer,
    required this.hidden,
  }) : super._();

  /// Deserialize.
  factory StoriesTogglePeerStoriesHidden.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Hidden.
  final bool hidden;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Payments Get Premium Gift Code Options.
///
/// ID: `2757ba54`.
class PaymentsGetPremiumGiftCodeOptions
    extends TlMethod<List<PremiumGiftCodeOptionBase>> {
  /// Payments Get Premium Gift Code Options constructor.
  const PaymentsGetPremiumGiftCodeOptions({
    required this.flags,
    required this.boostPeer,
  }) : super._();

  /// Deserialize.
  factory PaymentsGetPremiumGiftCodeOptions.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Boost Peer.
  final InputPeerBase? boostPeer;

  /// If [boostPeer] exists.
  bool get hasBoostPeerField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Payments Check Gift Code.
///
/// ID: `8e51b4c1`.
class PaymentsCheckGiftCode extends TlMethod<PaymentsCheckedGiftCodeBase> {
  /// Payments Check Gift Code constructor.
  const PaymentsCheckGiftCode({
    required this.slug,
  }) : super._();

  /// Deserialize.
  factory PaymentsCheckGiftCode.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Slug.
  final String slug;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Payments Apply Gift Code.
///
/// ID: `f6e26854`.
class PaymentsApplyGiftCode extends TlMethod<UpdatesBase> {
  /// Payments Apply Gift Code constructor.
  const PaymentsApplyGiftCode({
    required this.slug,
  }) : super._();

  /// Deserialize.
  factory PaymentsApplyGiftCode.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Slug.
  final String slug;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Payments Get Giveaway Info.
///
/// ID: `f4239425`.
class PaymentsGetGiveawayInfo extends TlMethod<PaymentsGiveawayInfoBase> {
  /// Payments Get Giveaway Info constructor.
  const PaymentsGetGiveawayInfo({
    required this.peer,
    required this.msgId,
  }) : super._();

  /// Deserialize.
  factory PaymentsGetGiveawayInfo.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Msg Id.
  final int msgId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Payments Launch Prepaid Giveaway.
///
/// ID: `5ff58f20`.
class PaymentsLaunchPrepaidGiveaway extends TlMethod<UpdatesBase> {
  /// Payments Launch Prepaid Giveaway constructor.
  const PaymentsLaunchPrepaidGiveaway({
    required this.peer,
    required this.giveawayId,
    required this.purpose,
  }) : super._();

  /// Deserialize.
  factory PaymentsLaunchPrepaidGiveaway.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Giveaway Id.
  final int giveawayId;

  /// Purpose.
  final InputStorePaymentPurposeBase purpose;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Update Color.
///
/// ID: `7cefa15d`.
class AccountUpdateColor extends TlMethod<bool> {
  /// Account Update Color constructor.
  const AccountUpdateColor({
    required this.flags,
    required this.color,
    required this.backgroundEmojiId,
  }) : super._();

  /// Deserialize.
  factory AccountUpdateColor.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// for_profile: bit
  bool get forProfile => _bit(flags, 1);

  /// Color.
  final int? color;

  /// If [color] exists.
  bool get hasColorField => _bit(flags, 2);

  /// Background Emoji Id.
  final int? backgroundEmojiId;

  /// If [backgroundEmojiId] exists.
  bool get hasBackgroundEmojiIdField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Update Color.
///
/// ID: `d8aa3671`.
class ChannelsUpdateColor extends TlMethod<UpdatesBase> {
  /// Channels Update Color constructor.
  const ChannelsUpdateColor({
    required this.flags,
    required this.channel,
    required this.color,
    required this.backgroundEmojiId,
  }) : super._();

  /// Deserialize.
  factory ChannelsUpdateColor.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// for_profile: bit
  bool get forProfile => _bit(flags, 1);

  /// Channel.
  final InputChannelBase channel;

  /// Color.
  final int? color;

  /// If [color] exists.
  bool get hasColorField => _bit(flags, 2);

  /// Background Emoji Id.
  final int? backgroundEmojiId;

  /// If [backgroundEmojiId] exists.
  bool get hasBackgroundEmojiIdField => _bit(flags, 0);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Default Background Emojis.
///
/// ID: `a60ab9ce`.
class AccountGetDefaultBackgroundEmojis extends TlMethod<EmojiListBase> {
  /// Account Get Default Background Emojis constructor.
  const AccountGetDefaultBackgroundEmojis({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory AccountGetDefaultBackgroundEmojis.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Premium Get Boosts List.
///
/// ID: `60f67660`.
class PremiumGetBoostsList extends TlMethod<PremiumBoostsListBase> {
  /// Premium Get Boosts List constructor.
  const PremiumGetBoostsList({
    required this.flags,
    required this.peer,
    required this.offset,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory PremiumGetBoostsList.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// gifts: bit
  bool get gifts => _bit(flags, 0);

  /// Peer.
  final InputPeerBase peer;

  /// Offset.
  final String offset;

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Premium Get My Boosts.
///
/// ID: `0be77b4a`.
class PremiumGetMyBoosts extends TlMethod<PremiumMyBoostsBase> {
  /// Premium Get My Boosts constructor.
  const PremiumGetMyBoosts() : super._();

  /// Deserialize.
  factory PremiumGetMyBoosts.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Premium Apply Boost.
///
/// ID: `6b7da746`.
class PremiumApplyBoost extends TlMethod<PremiumMyBoostsBase> {
  /// Premium Apply Boost constructor.
  const PremiumApplyBoost({
    required this.flags,
    required this.slots,
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory PremiumApplyBoost.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Slots.
  final List<int>? slots;

  /// If [slots] exists.
  bool get hasSlotsField => _bit(flags, 0);

  /// Peer.
  final InputPeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Premium Get Boosts Status.
///
/// ID: `042f1f61`.
class PremiumGetBoostsStatus extends TlMethod<PremiumBoostsStatusBase> {
  /// Premium Get Boosts Status constructor.
  const PremiumGetBoostsStatus({
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory PremiumGetBoostsStatus.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Premium Get User Boosts.
///
/// ID: `39854d1f`.
class PremiumGetUserBoosts extends TlMethod<PremiumBoostsListBase> {
  /// Premium Get User Boosts constructor.
  const PremiumGetUserBoosts({
    required this.peer,
    required this.userId,
  }) : super._();

  /// Deserialize.
  factory PremiumGetUserBoosts.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// User Id.
  final InputUserBase userId;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Toggle View Forum As Messages.
///
/// ID: `9738bb15`.
class ChannelsToggleViewForumAsMessages extends TlMethod<UpdatesBase> {
  /// Channels Toggle View Forum As Messages constructor.
  const ChannelsToggleViewForumAsMessages({
    required this.channel,
    required this.enabled,
  }) : super._();

  /// Deserialize.
  factory ChannelsToggleViewForumAsMessages.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Enabled.
  final bool enabled;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Search Emoji Sticker Sets.
///
/// ID: `92b4494c`.
class MessagesSearchEmojiStickerSets
    extends TlMethod<MessagesFoundStickerSetsBase> {
  /// Messages Search Emoji Sticker Sets constructor.
  const MessagesSearchEmojiStickerSets({
    required this.flags,
    required this.q,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesSearchEmojiStickerSets.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// exclude_featured: bit
  bool get excludeFeatured => _bit(flags, 0);

  /// Q.
  final String q;

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Get Channel Recommendations.
///
/// ID: `83b70d97`.
class ChannelsGetChannelRecommendations extends TlMethod<MessagesChatsBase> {
  /// Channels Get Channel Recommendations constructor.
  const ChannelsGetChannelRecommendations({
    required this.channel,
  }) : super._();

  /// Deserialize.
  factory ChannelsGetChannelRecommendations.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stats Get Story Stats.
///
/// ID: `374fef40`.
class StatsGetStoryStats extends TlMethod<StatsStoryStatsBase> {
  /// Stats Get Story Stats constructor.
  const StatsGetStoryStats({
    required this.flags,
    required this.peer,
    required this.id,
  }) : super._();

  /// Deserialize.
  factory StatsGetStoryStats.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// dark: bit
  bool get dark => _bit(flags, 0);

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final int id;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stats Get Story Public Forwards.
///
/// ID: `a6437ef6`.
class StatsGetStoryPublicForwards extends TlMethod<StatsPublicForwardsBase> {
  /// Stats Get Story Public Forwards constructor.
  const StatsGetStoryPublicForwards({
    required this.peer,
    required this.id,
    required this.offset,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory StatsGetStoryPublicForwards.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final int id;

  /// Offset.
  final String offset;

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Get Peer Colors.
///
/// ID: `da80f42f`.
class HelpGetPeerColors extends TlMethod<HelpPeerColorsBase> {
  /// Help Get Peer Colors constructor.
  const HelpGetPeerColors({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory HelpGetPeerColors.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Help Get Peer Profile Colors.
///
/// ID: `abcfa9fd`.
class HelpGetPeerProfileColors extends TlMethod<HelpPeerColorsBase> {
  /// Help Get Peer Profile Colors constructor.
  const HelpGetPeerProfileColors({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory HelpGetPeerProfileColors.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Stories Get Story Reactions List.
///
/// ID: `b9b2881f`.
class StoriesGetStoryReactionsList
    extends TlMethod<StoriesStoryReactionsListBase> {
  /// Stories Get Story Reactions List constructor.
  const StoriesGetStoryReactionsList({
    required this.flags,
    required this.peer,
    required this.id,
    required this.reaction,
    required this.offset,
    required this.limit,
  }) : super._();

  /// Deserialize.
  factory StoriesGetStoryReactionsList.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// forwards_first: bit
  bool get forwardsFirst => _bit(flags, 2);

  /// Peer.
  final InputPeerBase peer;

  /// Id.
  final int id;

  /// Reaction.
  final ReactionBase? reaction;

  /// If [reaction] exists.
  bool get hasReactionField => _bit(flags, 0);

  /// Offset.
  final String? offset;

  /// If [offset] exists.
  bool get hasOffsetField => _bit(flags, 1);

  /// Limit.
  final int limit;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Channels Update Emoji Status.
///
/// ID: `f0d3e6a8`.
class ChannelsUpdateEmojiStatus extends TlMethod<UpdatesBase> {
  /// Channels Update Emoji Status constructor.
  const ChannelsUpdateEmojiStatus({
    required this.channel,
    required this.emojiStatus,
  }) : super._();

  /// Deserialize.
  factory ChannelsUpdateEmojiStatus.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Channel.
  final InputChannelBase channel;

  /// Emoji Status.
  final EmojiStatusBase emojiStatus;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Channel Default Emoji Statuses.
///
/// ID: `7727a7d5`.
class AccountGetChannelDefaultEmojiStatuses
    extends TlMethod<AccountEmojiStatusesBase> {
  /// Account Get Channel Default Emoji Statuses constructor.
  const AccountGetChannelDefaultEmojiStatuses({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory AccountGetChannelDefaultEmojiStatuses.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Account Get Channel Restricted Status Emojis.
///
/// ID: `35a9e0d5`.
class AccountGetChannelRestrictedStatusEmojis extends TlMethod<EmojiListBase> {
  /// Account Get Channel Restricted Status Emojis constructor.
  const AccountGetChannelRestrictedStatusEmojis({
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory AccountGetChannelRestrictedStatusEmojis.deserialize(
      Uint8List buffer) {
    throw Exception();
  }

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Saved Dialogs.
///
/// ID: `5381d21a`.
class MessagesGetSavedDialogs extends TlMethod<MessagesSavedDialogsBase> {
  /// Messages Get Saved Dialogs constructor.
  const MessagesGetSavedDialogs({
    required this.flags,
    required this.offsetDate,
    required this.offsetId,
    required this.offsetPeer,
    required this.limit,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetSavedDialogs.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// exclude_pinned: bit
  bool get excludePinned => _bit(flags, 0);

  /// Offset Date.
  final int offsetDate;

  /// Offset Id.
  final int offsetId;

  /// Offset Peer.
  final InputPeerBase offsetPeer;

  /// Limit.
  final int limit;

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Saved History.
///
/// ID: `3d9a414d`.
class MessagesGetSavedHistory extends TlMethod<MessagesMessagesBase> {
  /// Messages Get Saved History constructor.
  const MessagesGetSavedHistory({
    required this.peer,
    required this.offsetId,
    required this.offsetDate,
    required this.addOffset,
    required this.limit,
    required this.maxId,
    required this.minId,
    required this.hash,
  }) : super._();

  /// Deserialize.
  factory MessagesGetSavedHistory.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Peer.
  final InputPeerBase peer;

  /// Offset Id.
  final int offsetId;

  /// Offset Date.
  final int offsetDate;

  /// Add Offset.
  final int addOffset;

  /// Limit.
  final int limit;

  /// Max Id.
  final int maxId;

  /// Min Id.
  final int minId;

  /// Hash.
  final int hash;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Delete Saved History.
///
/// ID: `6e98102b`.
class MessagesDeleteSavedHistory extends TlMethod<MessagesAffectedHistoryBase> {
  /// Messages Delete Saved History constructor.
  const MessagesDeleteSavedHistory({
    required this.flags,
    required this.peer,
    required this.maxId,
    required this.minDate,
    required this.maxDate,
  }) : super._();

  /// Deserialize.
  factory MessagesDeleteSavedHistory.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// Peer.
  final InputPeerBase peer;

  /// Max Id.
  final int maxId;

  /// Min Date.
  final int? minDate;

  /// If [minDate] exists.
  bool get hasMinDateField => _bit(flags, 2);

  /// Max Date.
  final int? maxDate;

  /// If [maxDate] exists.
  bool get hasMaxDateField => _bit(flags, 3);

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Get Pinned Saved Dialogs.
///
/// ID: `d63d94e0`.
class MessagesGetPinnedSavedDialogs extends TlMethod<MessagesSavedDialogsBase> {
  /// Messages Get Pinned Saved Dialogs constructor.
  const MessagesGetPinnedSavedDialogs() : super._();

  /// Deserialize.
  factory MessagesGetPinnedSavedDialogs.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Toggle Saved Dialog Pin.
///
/// ID: `ac81bbde`.
class MessagesToggleSavedDialogPin extends TlMethod<bool> {
  /// Messages Toggle Saved Dialog Pin constructor.
  const MessagesToggleSavedDialogPin({
    required this.flags,
    required this.peer,
  }) : super._();

  /// Deserialize.
  factory MessagesToggleSavedDialogPin.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// pinned: bit
  bool get pinned => _bit(flags, 0);

  /// Peer.
  final InputDialogPeerBase peer;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}

/// Messages Reorder Pinned Saved Dialogs.
///
/// ID: `8b716587`.
class MessagesReorderPinnedSavedDialogs extends TlMethod<bool> {
  /// Messages Reorder Pinned Saved Dialogs constructor.
  const MessagesReorderPinnedSavedDialogs({
    required this.flags,
    required this.order,
  }) : super._();

  /// Deserialize.
  factory MessagesReorderPinnedSavedDialogs.deserialize(Uint8List buffer) {
    throw Exception();
  }

  /// Flags.
  final int flags;

  /// force: bit
  bool get force => _bit(flags, 0);

  /// Order.
  final List<InputDialogPeerBase> order;

  /// Serialize.
  int serialize(Uint8List buffer) {
    return 0;
  }
}
